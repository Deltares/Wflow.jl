---
title: Required files
---

To run wflow, several files are required. These include a settings file and input data. The
input data is typically separated into static maps and forcing data, and both are provided in
netCDF files, except for lake storage and rating curves that are supplied via CSV files. Below
is a brief overview of the different files:

 - The `settings.toml` file contains information on the simulation period, links to the input
   files (and their names in the netCDF files), and connect the correct variable names in the
   netCDF files to the variables and parameters of wflow.
 - The `staticmaps.nc` file contains spatial information such as elevation, gauge locations,
   land use, and drainage direction, etc. This file can also contain maps with parameter
   values.
 - The `forcing.nc` file contains time series data for  precipitation, temperature and
   potential evaporation (as a 3D array).


## The configuration file (`settings.toml`)

The configuration file contains all relevant settings for running wflow, such as the simulation
period, the model settings, the mapping between input files and (internal) model parameters.
More details and explanations can be found [here](./toml_file.qmd). An example configuration
file is presented below.

<details>
  <summary>Click to show example .toml file</summary>
  ```toml
  {{< include ../../Wflow/test/sbm_simple.toml >}}
  ```
</details>


## The static input data (`staticmaps.nc`)

The list below contains a brief overview of several essential static maps required to run
wflow. These NC variables names refer to the example data of the wflow\_sbm + kinematic wave
model (see [here](../getting_started/download_example_models.qmd#wflow_sbm--kinematic-wave)).
Example data for the other model configurations can be found
[here](../getting_started/download_example_models.qmd).

Description | NC variable name | unit
--- | --- | ---
Flow direction (1-9) | `wflow_ldd` | -
Map indicating the river cells (0-1) | `wflow_river` | -
The length of the river | `wflow_riverlength` | m
The width of the river | `wflow_riverwidth` | m
Mask of the basin | `wflow_subcatch` | -
Land slope | `Slope` | m m$^{-1}$
River slope | `RiverSlope` | m m$^{-1}$

As mentioned before, the model parameters can also be defined as spatial maps. They can be
included in the same netCDF file, as long as their variable names are correctly mapped in the
TOML settings file. See the section on [example
models](../getting_started/download_example_models.qmd) on how to use this functionality.

::: callout-important
When using cyclic data, three different options are supported:
- 12 (monthly)
- 365 (daily, where Feb. 29 is not present, so the value for Feb. 28 is taken. Dec. 31 is represented by DOY 365)
- 366 (where Feb. 29 represents DOY 60, and Dec. 31 DOY 366)

In contrast to the right-labelling of the forcing data (see below), the DOY/month of the
current time step is used. For example: to simulate 2023-06-14 00:00:00 (with a daily time
step), the DOY value at position 6 (when 12 values are provided), 165 (when 365 values are
provided) or 166 (when 366 values are provided).
:::

## The forcing data (`forcing.nc`)

The forcing data typically contains the meteorological boundary conditions. This data is
provided as a single netCDF file, with several variables containing the forcing data for
precipitation, temperature and potential evaporation. The code snippet below shows the contents
of the example file (downloaded
[here](../getting_started/download_example_models.qmd#wflow_sbm--kinematic-wave)), and
displaying the content with `NCDatasets` in Julia. As can be seen, each forcing variable
(`precip`, `pet` and `temp`) consists of a three-dimensional dataset (`x`, `y`, and `time`),
and each timestep consists of a two-dimensional map with values at each grid cell. Only values
within the basin are required.

::: callout-important
Wflow expects the forcing to be "right-labelled". This means that e.g. daily precipitation at
2023-06-15 00:00:00 is the accumulated total precipitation between 2023-06-14 00:00:00 and
2023-06-15 00:00:00.
:::

::: callout-note
For optimal computational performance, it is recommended to have chunks in the time dimension.
This way, only part of the forcing file needs to be read and kept in memory. We recommend using
a chunk size in the time dimension with size 1. Using larger chunks can largely degrade
computational performance.
:::

<details>
  <summary>Click to show example forcing.nc file</summary>
```bash
Group: /

Dimensions
  time = 366
  y = 313
  x = 291

Variables
  time   (366)
    Datatype:    Int64
    Dimensions:  time
    Attributes:
    units                = days since 2000-01-02 00:00:00
    calendar             = proleptic_gregorian

  y   (313)
    Datatype:    Float64
    Dimensions:  y
    Attributes:
    _FillValue           = NaN

  x   (291)
    Datatype:    Float64
    Dimensions:  x
    Attributes:
    _FillValue           = NaN

  spatial_ref
    Attributes:
    crs_wkt              = GEOGCS["WGS 84",DATUM["WGS_1984",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6326"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4326"]]
    x_dim                = x
    y_dim                = y
    dim0                 = time

  precip   (291 × 313 × 366)
    Datatype:    Float32
    Dimensions:  x × y × time
    Attributes:
    _FillValue           = NaN
    unit                 = mm
    precip_fn            = era5
    coordinates          = idx_out spatial_ref mask

  idx_out   (291 × 313)
    Datatype:    Int32
    Dimensions:  x × y

  mask   (291 × 313)
    Datatype:    UInt8
    Dimensions:  x × y

  pet   (291 × 313 × 366)
    Datatype:    Float32
    Dimensions:  x × y × time
    Attributes:
    _FillValue           = NaN
    unit                 = mm
    pet_fn               = era5
    pet_method           = debruin
    coordinates          = idx_out spatial_ref mask

  temp   (291 × 313 × 366)
    Datatype:    Float32
    Dimensions:  x × y × time
    Attributes:
    _FillValue           = NaN
    unit                 = degree C.
    temp_fn              = era5
    temp_correction      = True
    coordinates          = idx_out spatial_ref mask

Global attributes
  unit                 = mm
  precip_fn            = era5
```
</details>