---
title: Starting with "warm" states
---

The `state` section in the TOML file provides information on the input file if the model is
initialized with a warm state (`path_input`) and to what file the states are written at the end
of the model run (`path_output`). Please note that the model setting `reinit` needs to be set
to `false` in order to initialize the model with states from the file located at `path_input`.
A mapping between external state names and internal model states is required. This information
is specified for each model component, the `vertical` model and `lateral` model components. In
the example below the `vertical` component represents the SBM concept, and for the `lateral`
components there is a `river` (including optional `reservoir`, `lake` and `floodplain`
components), `land` and `subsurface` domain. The internal model states are listed on the left
side, and the external state names are listed on the right side. Note that `path_input` is only
required when `reinit` is set to false. `path_output` is optional, an output state file is only
written when it is defined. If neither is set, the entire `state` section can be left out.

```toml
[model]
reinit = false # cold (reinit = true) or warm state (reinit = false), default is true

[state]
path_input = "data/instates-moselle.nc"     # Location of the file with the input states
path_output = "data/outstates-moselle.nc"   # Output location of the states after the model run

[state.vertical]
satwaterdepth = "satwaterdepth"
snow = "snow"
tsoil = "tsoil"
ustorelayerdepth = "ustorelayerdepth"
canopystorage = "canopystorage"
snowwater = "snowwater"
glacierstore ="glacierstore"

[state.lateral.river]
q = "q_river"
h = "h_river"
h_av = "h_av_river"

[state.lateral.river.floodplain]
q = "q_floodplain"
h = "h_floodplain"

[state.lateral.river.reservoir]
volume = "volume_reservoir"

[state.lateral.river.lake]
waterlevel = "waterlevel_lake"

[state.lateral.subsurface]
ssf = "ssf"

[state.lateral.land]
q = "q_land"
h = "h_land"
h_av = "h_av_land"
```