calendar = "proleptic_gregorian"
starttime = 2010-07-01T00:00:00
endtime = 2010-10-01T00:00:00
time_units = "days since 1900-01-01 00:00:00"
timestepsecs = 86400
dir_input = "data/input"
dir_output = "data/output"
loglevel = "info"

[state]
path_input = "instates-piave-gwf.nc"
path_output = "outstates-piave-gwf.nc"

[input]
path_forcing = "forcing-piave.nc"
path_static = "staticmaps-piave.nc"
ldd = "wflow_ldd"
river_location = "wflow_river"
altitude = "wflow_dem"
subcatchment = "wflow_subcatch"
forcing = [ "vertical.precipitation", "vertical.temperature", "vertical.potential_evaporation",]
cyclic = [ "vertical.leaf_area_index", "vertical.domestic.demand_gross", "vertical.domestic.demand_net", "vertical.industry.demand_gross", "vertical.industry.demand_net", "vertical.livestock.demand_gross", "vertical.livestock.demand_net", "vertical.paddy.irrigation_trigger", "vertical.nonpaddy.irrigation_trigger",]
gauges = "wflow_gauges"
gauges_grdc = "wflow_gauges_grdc"

[model]
type = "sbm_gwf"
constanthead = true
masswasting = true
snow = true
reinit = false
reservoirs = false
lakes = false
glacier = true
kin_wave_iteration = true
kw_river_tstep = 900
kw_land_tstep = 3600
thicknesslayers = [ 50, 100, 50, 200, 800,]
river_routing = "kinematic-wave"

[state.vertical]
satwaterdepth = "satwaterdepth"
snow = "snow"
tsoil = "tsoil"
ustorelayerdepth = "ustorelayerdepth"
snowwater = "snowwater"
canopystorage = "canopystorage"
glacierstore = "glacierstore"

[state.vertical.paddy]
h = "h_paddy"

[state.lateral.subsurface.flow.aquifer]
head = "head"

[input.vertical]
alpha_h1 = "alpha_h1"
altitude = "wflow_dem"
c = "c"
cf_soil = "cf_soil"
cfmax = "Cfmax"
e_r = "EoverR"
f = "f"
infiltcappath = "InfiltCapPath"
infiltcapsoil = "InfiltCapSoil"
kext = "Kext"
kv_0 = "KsatVer"
leaf_area_index = "LAI"
m = "M_"
maxleakage = "MaxLeakage"
pathfrac = "PathFrac"
potential_evaporation = "pet"
precipitation = "precip"
rootdistpar = "rootdistpar"
rootingdepth = "RootingDepth"
soilminthickness = "SoilMinThickness"
soilthickness = "SoilThickness_gw"
specific_leaf = "Sl"
storage_wood = "Swood"
temperature = "temp"
tt = "TT"
tti = "TTI"
ttm = "TTM"
water_holding_capacity = "WHC"
waterfrac = "WaterFrac"
theta_s = "thetaS"
theta_r = "thetaR"
glacierstore = "wflow_glacierstore"
glacierfrac = "wflow_glacierfrac"
g_cfmax = "G_Cfmax"
g_tt = "G_TT"
g_sifrac = "G_SIfrac"
kc = "crop_factor"
kvfrac = "kvfrac"
h1 = "h1"
h2 = "h2"
h3_high = "h3_high"
h3_low = "h3_low"
h4 = "h4"

[model.water_demand]
domestic = true
industry = true
livestock = true
paddy = true
nonpaddy = true

[state.lateral.river]
q = "q_river"
h = "h_river"
h_av = "h_av_river"

[state.lateral.subsurface]
ssf = "ssf"

[state.lateral.land]
q = "q_land"
h = "h_land"
h_av = "h_av_land"

[input.vertical.allocation]
areas = "allocation_areas"
frac_sw_used = "SurfaceWaterFrac"

[input.vertical.domestic]
demand_gross = "dom_gross"
demand_net = "dom_net"

[input.vertical.industry]
demand_gross = "ind_gross"
demand_net = "ind_net"

[input.vertical.livestock]
demand_gross = "lsk_gross"
demand_net = "lsk_net"

[input.vertical.paddy]
irrigation_areas = "paddy_irrigation_areas"
irrigation_trigger = "irrigation_trigger"

[input.vertical.nonpaddy]
irrigation_areas = "nonpaddy_irrigation_areas"
irrigation_trigger = "irrigation_trigger"

[input.lateral.river]
length = "wflow_riverlength"
n = "N_River"
slope = "RiverSlope"
width = "wflow_riverwidth"
bankfull_depth = "RiverDepth"

[input.lateral.subsurface]
constant_head = "constant_head"
conductivity_profile = "exponential"
conductivity = "kh_surface"
exfiltration_conductance = "riverbed_cond"
infiltration_conductance = "riverbed_cond"
river_bottom = "zb_river"
specific_yield = "specific_yield"
gwf_f = "gwf_f"

[input.lateral.land]
n = "N"
slope = "Slope"

[output]
path = "output-piave-gwf.nc"

[output.lateral.river]
q_av = "q_river"

[output.vertical]
zi = "zi"

[output.lateral.subsurface.flow.aquifer]
head = "head"

[csv]
path = "output.csv"

[[csv.column]]
header = "Q"
map = "gauges"
parameter = "lateral.river.q_av"

[[csv.column]]
header = "Q"
map = "gauges_grdc"
parameter = "lateral.river.q_av"