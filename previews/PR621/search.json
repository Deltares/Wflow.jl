[
  {
    "objectID": "user_guide/zmq_server.html",
    "href": "user_guide/zmq_server.html",
    "title": "Run wflow as a ZMQ Server",
    "section": "",
    "text": "It is possible to run wflow as a ZMQ Server, for example for the coupling to the OpenDA software for data-assimilation. The code for the wflow ZMQ Server is not part of the Wflow.jl package, and is located here.\n\n\n\n Back to top",
    "crumbs": [
      "User guide",
      "Integrations",
      "Run wflow as a ZMQ Server"
    ]
  },
  {
    "objectID": "user_guide/toml_file.html",
    "href": "user_guide/toml_file.html",
    "title": "Simulation settings",
    "section": "",
    "text": "All model configuration and settings are passed through the .toml file, which contains all relevant settings, information about the model configuration, simulation period, input files, and parameters. The settings are provided in a TOML file. The settings file is structured in several sections, which are explained below.",
    "crumbs": [
      "User guide",
      "Simulation settings"
    ]
  },
  {
    "objectID": "user_guide/toml_file.html#general",
    "href": "user_guide/toml_file.html#general",
    "title": "Simulation settings",
    "section": "General",
    "text": "General\nThe file paths provided in this file are relative to the location of the TOML file, or to dir_input and dir_output if they are specified. To indicate that a wflow model runs from Delft-FEWS, the fews_run__flag setting needs to be set at true.\ndir_input = \"data/input\"      # optional, default is the path of the TOML\ndir_output = \"data/output\"    # optional, default is the path of the TOML\nfews_run__flag = false              # optional, default value is false",
    "crumbs": [
      "User guide",
      "Simulation settings"
    ]
  },
  {
    "objectID": "user_guide/toml_file.html#time-info",
    "href": "user_guide/toml_file.html#time-info",
    "title": "Simulation settings",
    "section": "Time info",
    "text": "Time info\nTime information is optional. When omitted, wflow will perform computations for each timestamp in the forcing netCDF file, except for the first forcing timestamp, which is considered equal to the initial conditions of the wflow model (state time). If you wish to calculate a subset of this time range, or a different timestep, you can specify a starttime, endtime and timestepsecs. The starttime is defined as the model state time. In the TOML file settings below, the starttime is 2000-01-01T00:00:00 (state time) and the first update (and output) of the wflow model is at 2000-01-02T00:00:00. The time_units optional information is used by the writer of the model, for model output in netCDF format. The calendar option allows you to calculate in one of the different CF conventions calendars provided by the CFTime.jl package, such as \"360_day\". This is useful if you want to calculate climate scenarios which are sometimes provided in these alternative calendars.\n[time]                                          # optional entry\ncalendar = \"standard\"                           # optional, this is the default value\nstarttime = 2000-01-01T00:00:00                 # optional, default from forcing netCDF\nendtime = 2000-02-01T00:00:00                   # optional, default from forcing netCDF\ntime_units = \"days since 1900-01-01 00:00:00\"   # optional, this is the default value\ntimestepsecs = 86400                            # optional, default from forcing netCDF",
    "crumbs": [
      "User guide",
      "Simulation settings"
    ]
  },
  {
    "objectID": "user_guide/toml_file.html#logging",
    "href": "user_guide/toml_file.html#logging",
    "title": "Simulation settings",
    "section": "Logging",
    "text": "Logging\nWflow prints logging messages at various levels such as debug, info, and error. These messages are sent to both the terminal and a log file. Note that logging to a file is only part of the Wflow.run(tomlpath::AbstractString) method. If you want to debug an issue, it can be helpful to set loglevel = \"debug\" in the TOML. To avoid flooding the screen, debug messages are only sent to the log file. The following settings will affect the logging:\n[logging]               # optional entry\nsilent = false          # optional, default is \"false\"\nloglevel = \"debug\"      # optional, default is \"info\"\npath_log = \"log.txt\"    # optional, default is \"log.txt\"\nsilent avoids logging to the terminal, and only writes to the log file. loglevel controls which levels are filtered out; for instance, the default setting \"info\" does not print any debug-level messages. Note that for finer control, you can also pass an integer log level. For details, see Julia’s Logging documentation. path_log sets the desired output path for the log file. For information on fews_run__flag, see Run from Delft-FEWS.",
    "crumbs": [
      "User guide",
      "Simulation settings"
    ]
  },
  {
    "objectID": "user_guide/toml_file.html#model-section",
    "href": "user_guide/toml_file.html#model-section",
    "title": "Simulation settings",
    "section": "Model section",
    "text": "Model section\nModel-specific settings can be included in the model section of the TOML file.\n[model]\ntype = \"sbm\"                                    # one of (\"sbm\" or \"sbm_gwf\")\nsnow_gravitional_transport__flag = true         # include lateral snow transport in the model, default is false\nsnow__flag = true                               # include snow modelling, default is false\ncold_start__flag = true                         # cold (cold_start__flag = true) or warm state (cold_start__flag = false), default is true\nreservoir__flag = true                          # include reservoir modelling, default is false\nkinematic_wave__adaptive_time_step_flag = true  # enable kinematic wave adaptive (internal) timestepping in the model, default is false\nsoil_layer__thickness = [100, 300, 800]         # specific SBM soil model setting: for each soil layer, a thickness [mm] is specified\nriver_streamorder__min_count = 5                # minimum stream order to delineate subbasins for river domain, default is 6 (for multi-threading computing purposes)\nland_streamorder__min_count = 4                 # minimum stream order to delineate subbasins for land domain, default is 5 (for multi-threading computing purposes)\nA complete overview of the model settings for the different model types is available here.",
    "crumbs": [
      "User guide",
      "Simulation settings"
    ]
  },
  {
    "objectID": "user_guide/toml_file.html#state-options",
    "href": "user_guide/toml_file.html#state-options",
    "title": "Simulation settings",
    "section": "State options",
    "text": "State options\nThe state section in the TOML file provides information about the location of input and output states of the model. This section is mostly relevant if the model needs to start with a “warm” state (i.e. based on the results of a previous simulation). The example below shows how to save the output states of the current simulation, so it can be used to initialize another model in the future. Details on the settings required to start a model with a warm state can be found in the additional model options. If it is not required to store the outstates of the current simulation, the entire state section can be removed.\n[state]\npath_input = \"instates-moselle.nc\"\npath_output = \"outstates-moselle.nc\"\n\n[state.variables]\nvegetation_canopy_water__depth = \"canopystorage\"\n\nsoil_water_sat-zone__depth = \"satwaterdepth\"\nsoil_surface__temperature = \"tsoil\"\nsoil_layer_water_unsat-zone__depth = \"ustorelayerdepth\"\n\n\"snowpack~dry__leq-depth\" = \"snow\"\n\"snowpack~liquid__depth\" = \"snowwater\"\n\nriver_water__instantaneous_depth = \"h_river\"\nriver_water__instantaneous_volume_flow_rate = \"q_river\"\n\nreservoir_water__instantaneous_volume = \"volume_reservoir\"\n\nsubsurface_water__volume_flow_rate  = \"ssf\"\n\nland_surface_water__instantaneous_volume_flow_rate = \"q_land\"\nland_surface_water__instantaneous_depth = \"h_land\"",
    "crumbs": [
      "User guide",
      "Simulation settings"
    ]
  },
  {
    "objectID": "user_guide/toml_file.html#input-section",
    "href": "user_guide/toml_file.html#input-section",
    "title": "Simulation settings",
    "section": "Input section",
    "text": "Input section\nThe input section of the TOML file contains information about the input forcing and model parameters files (in netCDF format). input.forcing lists the mapping of forcing parameter standard names to the external netCDF variable names. input.static lists the mapping of static parameter standard names to the external netCDF variable names. In input.cyclic, it is possible to provide cyclic parameters to the model (minimum time step of 1 day). In the example below, the model parameter standard name vegetation__leaf-area_index is mapped to the external netCDF variable “LAI”. Cyclic time inputs of parameters can be different (e.g., daily or monthly). The time dimension name of these cylic input parameters in the model parameter netCDF file should start with “time”. If a model parameter is not mapped, a default value will be used, if available.\nForcing parameters should be available in input.path_forcing file and both static and cyclic parameters in input.path_static netcdf file. The main input section also lists variables describing the different modelling domains or masks (for example subbasin, river, reservoir or lake) as well as the flow directions. Additional locations to save outputs for should also be listed here (eg gauges).\n[input]\n# Use \"forcing-year-*.nc\" if forcing files are split in time\npath_forcing = \"forcing-moselle.nc\"\npath_static = \"staticmaps-moselle.nc\"\n\n# Flow direction and modelling domains\nbasin__local_drain_direction = \"wflow_ldd\"\nriver_location__mask = \"wflow_river\"\nreservoir_area__count = \"wflow_reservoirareas\"\nreservoir_location__count = \"wflow_reservoirlocs\"\nsubbasin_location__count = \"wflow_subcatch\"\n\n# Ouput locations: these are not directly part of the model\nriver_gauge__count = \"wflow_gauges_grdc\"\n\n# Map forcing parameter standard names that vary over time to variable names in the forcing netCDF file\n[input.forcing]\natmosphere_water__precipitation_volume_flux = \"precip\"\nland_surface_water__potential_evaporation_volume_flux = \"pet\"\natmosphere_air__temperature = \"temp\"\n\n# Map static parameter standard names to variable names in the static netCDF file\n[input.static]\natmosphere_air__snowfall_temperature_threshold = \"TT\"\natmosphere_air__snowfall_temperature_interval = \"TTI\"\n\n\"land~water-covered__area_fraction\" = \"WaterFrac\"\n\nsnowpack__melting_temperature_threshold = \"TTM\"\nsnowpack__degree-day_coefficient = \"Cfmax\"\nsnowpack__liquid_water_holding_capacity =  \"WHC\"\n\nsoil_surface_water__vertical_saturated_hydraulic_conductivity = \"KsatVer\"\nsoil_layer_water__brooks-corey_exponent = \"c\"\nsoil_surface_water__infiltration_reduction_parameter = \"cf_soil\"\nsoil_water__vertical_saturated_hydraulic_conductivity_scale_parameter = \"f\"\n\"soil~compacted_surface_water__infiltration_capacity\" = \"InfiltCapPath\"\n\"soil~non-compacted_surface_water__infiltration_capacity\" = \"InfiltCapSoil\"\nsoil_water__residual_volume_fraction = \"thetaR\"\nsoil_water__saturated_volume_fraction = \"thetaS\"\nsoil_water_sat-zone_bottom__max_leakage_volume_flux = \"MaxLeakage\"\n\"soil~compacted__area_fraction\" = \"PathFrac\"\n\"soil_root~wet__sigmoid_function_shape_parameter\" = \"rootdistpar\"\nsoil__thickness = \"SoilThickness\"\n\nvegetation_canopy_water__mean_evaporation-to-mean_precipitation_ratio = \"EoverR\"\nvegetation_canopy__light-extinction_coefficient = \"Kext\"\nvegetation__specific-leaf_storage = \"Sl\"\nvegetation_wood_water__storage_capacity = \"Swood\"\nvegetation_root__depth = \"RootingDepth\"\n\nriver__length = \"wflow_riverlength\"\nriver_water_flow__manning_n_parameter = \"N_River\"\nriver__slope = \"RiverSlope\"\nriver__width = \"wflow_riverwidth\"\nriver_bank_water__depth = \"RiverDepth\"\nriver_bank_water__elevation = \"RiverZ\"\n\nland_surface_water_flow__manning_n_parameter = \"N\"\nland_surface__slope = \"Slope\"\n\nreservoir_surface__area = \"ResSimpleArea\"\n\"reservoir_water_demand~required~downstream__volume_flow_rate\" = \"ResDemand\"\nreservoir_water_release-below-spillway__max_volume_flow_rate = \"ResMaxRelease\"\nreservoir_water__max_volume = \"ResMaxVolume\"\n\"reservoir_water~full-target__volume_fraction\" = \"ResTargetFullFrac\"\n\"reservoir_water~min-target__volume_fraction\" = \"ResTargetMinFrac\"\n\nsubsurface_water__horizontal-to-vertical_saturated_hydraulic_conductivity_ratio = \"KsatHorFrac\"\n\n# Map cyclic parameter standard names to variable names in the static netCDF file\n[input.cyclic]\nvegetation__leaf-area_index = \"LAI\"",
    "crumbs": [
      "User guide",
      "Simulation settings"
    ]
  },
  {
    "objectID": "user_guide/toml_file.html#output-netcdf-section",
    "href": "user_guide/toml_file.html#output-netcdf-section",
    "title": "Simulation settings",
    "section": "Output netCDF section",
    "text": "Output netCDF section\n\nGrid data\nThis optional section of the TOML file specifies the output netCDF file for writing gridded model output. It includes a mapping between model variable standard names and external netCDF variables.\nTo limit the size of the resulting netCDF file, file compression can be enabled. Compression increases computational time but can significantly reduce the size of the netCDF file. Set the compressionlevel variable to a value between 0 and 9. A setting of 0 means no compression, while values between 1 and 9 indicate increasing levels of compression (1: least compression, minimal run-time impact, 9: highest compression, maximum run-time impact). If file size is a concern, we recommend using a value of 1, as higher compression levels generally have a limited effect on file size.\n[output.netcdf_grid]\npath = \"output_moselle.nc\"          # Location of the output file\ncompressionlevel = 1                # Compression level (default 0)\n\n# Mapping of standard model variable names to external netCDF variables\n[output.netcdf_grid.variables]\nsoil_water_sat-zone__depth = \"satwaterdepth\"\nsoil_surface__temperature = \"tsoil\"\nsoil_layer_water_unsat-zone__depth = \"ustorelayerdepth\"\n\"snowpack~dry__leq-depth\" = \"snow\"\n\"snowpack~liquid__depth\" = \"snowwater\"\nriver_water__depth = \"h_av_river\"\nriver_water__volume_flow_rate = \"q_av_river\"\nreservoir_water__volume = \"storage_reservoir\"\nsubsurface_water__volume_flow_rate  = \"ssf\"\nland_surface_water__volume_flow_rate = \"q_av_land\"\nland_surface_water__depth = \"h_av_land\"\n\n\nScalar data\nIn addition to gridded data, scalar data can also be written to a netCDF file. Below is an example that shows how to write scalar data to the file “output_scalar_moselle.nc”. For each netCDF variable, a name (external variable name) and a parameter (model parameter standard name) are required. A reducer can be specified to apply to the model output. See more details in the Output CSV section section. If a map (from the input section) is provided to extract data for specific locations (e.g. river_gauge__count) or areas (e.g. subbasin_location__count), the netCDF location names are extracted from these maps. For a specific location (grid cell) a location is required. For layered model parameters and variables that have an extra layer dimension and are part of the SBM soil model, an internal layer index can be specified (an example is provided below). If multiple layers are desired, this can be specified in separate [[output.netcdf_scalar.variable]] entries. Note that the additional dimension should be specified when wflow is integrated with Delft-FEWS, for netCDF scalar data an extra dimension is not allowed by the importNetcdfActivity of the Delft-FEWS General Adapter. In the section Output CSV section, similar functionality is available for CSV. For integration with Delft-FEWS, it is recommended to write scalar data to netCDF format, as the General Adapter of Delft-FEWS can directly ingest data from netCDF files. For more information, see Run from Delft-FEWS.\n[input]\nriver_gauge__count = \"wflow_gauges_grdc\"\n\n[output.netcdf_scalar]\npath = \"output_scalar_moselle.nc\"    # Location of the results\n\n# Extract the values of \"river_water__volume_flow_rate\" using the gauges map,\n# and assign it with the name 'Q' as a variable in the netCDF file\n[[output.netcdf_scalar.variable]]\nname = \"Q\"\nmap = \"river_gauge__count\"\nparameter = \"river_water__volume_flow_rate\"\n\n# Using coordinates to extract temperature\n[[output.netcdf_scalar.variable]]\ncoordinate.x = 6.255\ncoordinate.y = 50.012\nname = \"temp_coord\"\nlocation = \"temp_bycoord\"\nparameter = \"atmosphere_air__temperature\"\n\n# Using indices to extract temperature\n[[output.netcdf_scalar.variable]]\nlocation = \"temp_byindex\"\nname = \"temp_index\"\nindex.x = 100\nindex.y = 264\nparameter = \"atmosphere_air__temperature\"\n\n# Using coordinates and layer to extract volumetric water content\n[[netcdf.variable]]\ncoordinate.x = 6.255\ncoordinate.y = 50.012\nname = \"vwc_layer2_bycoord\"\nlocation = \"vwc_bycoord\"\nparameter = \"soil_layer_water__volume_fraction\"\nlayer = 2",
    "crumbs": [
      "User guide",
      "Simulation settings"
    ]
  },
  {
    "objectID": "user_guide/toml_file.html#output-csv-section",
    "href": "user_guide/toml_file.html#output-csv-section",
    "title": "Simulation settings",
    "section": "Output CSV section",
    "text": "Output CSV section\nModel output can also be written to a CSV file. Below is an example that writes model output to the file “output_moselle.csv”. For each CSV column, a header and parameter (model parameter standard name) are required. A reducer can be specified to apply to the model output, with the following available reducers:\n\nmaximum\nminimum\nmean\nmedian\nsum\nfirst\nlast\nonly\n\nwith only as the default. To extract data for a specific location (grid cell), the index of the vector, the coordinates coordinate.x and coordinate.y, or the x and y indices of the 2D array (index.x and index.y) can be provided. Additionally, a map (from the input section) can be provided to extract data for certain locations (e.g. river_gauge__count) or areas (e.g. subbasin_location__count). In this case, a single entry can lead to multiple columns in the CSV file, which will be of the form header_id, e.g. Q_20, for a gauge with integer ID \\(20\\). For layered model parameters and variables that have an extra dimension layer and are part of the SBM soil model an internal layer index (see also example below) should be specified.\nThe double brackets in [[output.csv.column]] follow TOML syntax, indicating that it is part of a list. You can specify as many entries as you want.\n[input]\n# Modelling domains\nsubbasin_location__count = \"wflow_subcatch\"\n# Ouput locations: these are not directly part of the model\nriver_gauge__count = \"wflow_gauges_grdc\"\n\n[output.csv]\npath = \"output_moselle.csv\"\n\n[[output.csv.column]]\nheader = \"Q\"\nparameter = \"river_water__volume_flow_rate\"\nreducer = \"maximum\"\n\n[[output.csv.column]]\nheader = \"storage\"\nindex = 1\nparameter = \"reservoir_water__volume\"\n\n[[output.csv.column]]\ncoordinate.x = 6.255\ncoordinate.y = 50.012\nheader = \"temp_bycoord\"\nparameter = \"atmosphere_air__temperature\"\n\n[[output.csv.column]]\ncoordinate.x = 6.255\ncoordinate.y = 50.012\nheader = \"vwc_layer2_bycoord\"\nparameter = \"land.soil.variables.vwc\"\nlayer = 2\n\n[[output.csv.column]]\nheader = \"temp_byindex\"\nindex.x = 100\nindex.y = 264\nparameter = \"atmosphere_air__temperature\"\n\n[[output.csv.column]]\nheader = \"Q\"\nmap = \"river_gauge__count\"\nparameter = \"river_water__volume_flow_rate\"\n\n[[output.csv.column]]\nheader = \"recharge\"\nmap = \"subbasin_location__count\"\nparameter = \"soil_water_sat-zone_top__net_recharge_volume_flux\"\nreducer = \"mean\"",
    "crumbs": [
      "User guide",
      "Simulation settings"
    ]
  },
  {
    "objectID": "user_guide/toml_file.html#modify-parameters",
    "href": "user_guide/toml_file.html#modify-parameters",
    "title": "Simulation settings",
    "section": "Modify parameters",
    "text": "Modify parameters\nIt is possible to modify model parameters and forcing through the TOML file. Two options to modify input parameters are available:\n\nSet an input parameter (static) to a uniform value.\nModify an input parameter (cyclic and static) or forcing variable using a scale factor and offset.\n\nFor example, to set the input parameter snowpack__degree-day_coefficient to an uniform value of \\(2.5\\):\n[input.static]\nsnowpack__liquid_water_holding_capacity =  \"WHC\"\nsnowpack__degree-day_coefficient.value = 2.5\nFor input parameters with an extra dimension (e.g. layer), one uniform value can be provided or a list of values that matches the length of the additional dimension. For example, a list of values can be provided for input parameter soil_layer_water__brooks-corey_epsilon_parameter as follows:\n[input.static]\nsnowpack__liquid_water_holding_capacity =  \"WHC\"\n\"land~water-covered__area_fraction\" = \"WaterFrac\"\nsoil_layer_water__brooks-corey_epsilon_parameter.value = [10.5, 11.25, 9.5, 7.0]\nTo change the forcing variable atmosphere_water__precipitation_volume_flux with a scale factor of \\(1.5\\) and an offset of \\(0.5\\):\n[input.forcing.atmosphere_water__precipitation_volume_flux]\nnetcdf.variable.name = \"P\"\nscale = 1.5\noffset = 0.5\nFor input parameters with an extra dimension, it is also possible to modify multiple indices simultaneously with different scale and offset values. In the example below, the external netCDF variable c is modified at layer index \\(1\\) and \\(2\\), with a scale factor of \\(2.0\\) and \\(1.5\\) respectively, and an offset of \\(0.0\\) for both indices:\n[input.static.soil_layer_water__brooks-corey_epsilon_parameter]\nnetcdf.variable.name = \"c\"\nscale = [2.0, 1.5]\noffset = [0.0, 0.0]\nlayer = [1, 2]",
    "crumbs": [
      "User guide",
      "Simulation settings"
    ]
  },
  {
    "objectID": "user_guide/toml_file.html#fixed-forcing-values",
    "href": "user_guide/toml_file.html#fixed-forcing-values",
    "title": "Simulation settings",
    "section": "Fixed forcing values",
    "text": "Fixed forcing values\nIt is possible to set fixed values for forcing parameters through the TOML file. For example, to set atmosphere_air__temperature to a fixed value of \\(\\SI{10}{\\degree C}\\):\n[input.forcing]\natmosphere_water__precipitation_volume_flux = \"precip\"\nland_surface_water__potential_evaporation_volume_flux = \"pet\"\natmosphere_air__temperature.value = 10",
    "crumbs": [
      "User guide",
      "Simulation settings"
    ]
  },
  {
    "objectID": "user_guide/multi_threading.html",
    "href": "user_guide/multi_threading.html",
    "title": "Multithreading",
    "section": "",
    "text": "Wflow supports multi-threading execution of the wflow_sbm model that uses the kinematic wave approach for river, overland and lateral subsurface flow. Both the vertical SBM concept and the kinematic wave components of this model can run on multiple threads. The optional local inertial model for river flow and the optional local inertial model for river (1D) and land (2D), both part of wflow_sbm, can also run on multiple threads. The threading functionality for the kinematic wave may also be useful for the wflow_sbm model with groundwater flow. The multi-threading functionality in wflow is considered experimental, see also the following issue, where an error was not thrown running code multi-threaded. Because of this we advise to start with running a wflow model single-threaded (for example during the testing phase of setting up an new wflow model).\nFor information on how to start Julia with multiple threads we refer to How to start Julia with multiple threads.\nAdditionally, when running Julia + wflow via the command line (note that this is different from the wflow_cli), it is possible to define the number of threads via the -t flag. An example where we start Julia with three threads:\njulia -t 3 -e 'using Wflow; Wflow.run()' path/to/config.toml",
    "crumbs": [
      "User guide",
      "Supported options",
      "Multithreading"
    ]
  },
  {
    "objectID": "user_guide/multi_threading.html#using-wflow-in-julia",
    "href": "user_guide/multi_threading.html#using-wflow-in-julia",
    "title": "Multithreading",
    "section": "",
    "text": "Wflow supports multi-threading execution of the wflow_sbm model that uses the kinematic wave approach for river, overland and lateral subsurface flow. Both the vertical SBM concept and the kinematic wave components of this model can run on multiple threads. The optional local inertial model for river flow and the optional local inertial model for river (1D) and land (2D), both part of wflow_sbm, can also run on multiple threads. The threading functionality for the kinematic wave may also be useful for the wflow_sbm model with groundwater flow. The multi-threading functionality in wflow is considered experimental, see also the following issue, where an error was not thrown running code multi-threaded. Because of this we advise to start with running a wflow model single-threaded (for example during the testing phase of setting up an new wflow model).\nFor information on how to start Julia with multiple threads we refer to How to start Julia with multiple threads.\nAdditionally, when running Julia + wflow via the command line (note that this is different from the wflow_cli), it is possible to define the number of threads via the -t flag. An example where we start Julia with three threads:\njulia -t 3 -e 'using Wflow; Wflow.run()' path/to/config.toml",
    "crumbs": [
      "User guide",
      "Supported options",
      "Multithreading"
    ]
  },
  {
    "objectID": "user_guide/multi_threading.html#using-the-command-line-interface",
    "href": "user_guide/multi_threading.html#using-the-command-line-interface",
    "title": "Multithreading",
    "section": "Using the command line interface",
    "text": "Using the command line interface\nAs explained above, we need to start julia with multiple threads to make use of this speedup. For wflow_cli, the only way to do this is by setting the JULIA_NUM_THREADS environment variable, as explained in these julia docs.\nWhen a model run starts, among the run information the number of threads that are used is printed, so nthreads() = 4 means 4 threads are used, because JULIA_NUM_THREADS has been set to 4.",
    "crumbs": [
      "User guide",
      "Supported options",
      "Multithreading"
    ]
  },
  {
    "objectID": "user_guide/index.html",
    "href": "user_guide/index.html",
    "title": "User guide",
    "section": "",
    "text": "Use the buttons below to quickly navigate to the most visited pages. Note that more pages are available in the sidebar.\n\n\n\n\n  \n    \n      Required files\n    \n  \n  \n    \n      Explanation .toml file\n    \n  \n  \n    \n      Frequently asked questions\n    \n  \n\n\n\n\n\n\n Back to top",
    "crumbs": [
      "User guide"
    ]
  },
  {
    "objectID": "user_guide/faq.html",
    "href": "user_guide/faq.html",
    "title": "Frequently asked questions",
    "section": "",
    "text": "How do I easily modify input parameters?\nSee this section on how to adjust maps, and this section on how to directly pass uniform values. Note that both options work for any parameter.\n\n\nHow do I start wflow with initial conditions from a previous run?\nSee here\n\n\nHow do I add external inflows and/or abstractions?\nriver_water_inflow~external__volume_flow_rate: positive for inflows, negative for abstraction. If parameter is time varying, add it to the correct section, see below. Note that these values can only be specified on river cells.\n\n\nHow do I add time-varying parameters?\nEither through cyclic (add parameter to cyclic list in the toml), or to the forcing section.\n\n\nHow do I add different output?\nSee here for csv output, here for scalar netcdf data, and here for gridded netcdf output.\n\n\nWhich river routing option should I choose?\nThe choice of a specific river routing option can vary depending on the model and use case. However, the numerical properties of the routing schemes provide an indication of their advantages and disadvantages.\nThe kinematic wave method is driven by the river slope within each cell, assuming that the water surface slope is parallel to the bed slope. This results in sharper discharge peaks with minimal damping, as the waves travel through the system without deformation. This approach is especially suitable for steep (upstream) areas where flow propagation is dominated by topography. The kinematic wave approach does not include any form of backwater effects.\nOn the other hand, the local inertial method incorporates the slope of the water surface into the momentum equation. This results in ‘damping effects’ on flow propagating through the cells and yields better results in scenarios where the water surface slope differs from the bed slope. This is particularly relevant in flat (downstream) regions where the river slope is limited or during the propagation of larger flood waves where the water surface slope is greater than the river slope itself. The local inertial method does incorporate backwater effects, although not as comprehensively as the full dynamic wave equation.\nGenerally, the kinematic wave method is computationally faster than the local inertial method for river (and land) routing. For the multi-threading execution of the kinematic wave, solved with a nonlinear scheme using Newton’s method, the order of execution (sub-basins) is important (from upstream to downstream sub-basin). For the momentum equation of the local inertial approach an explicit numerical method is used and can be solved independently for each cell during multi-threading execution. As a consequence, speedups for local inertial routing are larger than for kinematic wave routing using multi-threading (compared to a single thread run) and the difference between local inertial and kinematic wave routing run times gets smaller as the number of threads increase.\nCurrently, only the local inertial approach supports the inclusion of floodplains in river routing, see also this question.\n\n\nWhich land routing option should I choose?\nSimilar to river routing, the selection of the type of land routing depends on the model and use case. In practice, the kinematic wave approach is often sufficient for land routing. When the kinematic wave approach is used, water can flow from land cells into river cells, but not the other way around. The local inertial method for land routing is considered in cases where routing occurs over very flat areas or where complicated inundation patterns need to be included in both land and river routing.\nThe computational differences between the two options are larger than those between river routing options. This is due to the fact that there are typically more land cells than river cells in a model, and that for local inertial land routing two momentum equations (in the x and y direction) need to be solved. Consequently, more equations (with a higher computational cost compared to the kinematic wave method) must be solved compared to the combination of kinematic wave for land routing and local inertial for river routing.\n\n\nWhat is the difference between 1D, 2D and no floodplains?\nEffects of floodplain flow can be included in several ways. A one-dimensional sub-grid approximation (hence the name 1D floodplains) can be included when kinematic wave land routing is combined with local inertial river routing. The water surface elevations of the river channel and the floodplain are the same and it is assumed that water is exchanged instantaneously between the river channel and the floodplain. When the water depth in the river channel rises above the river bankfull depth, water is exchanged between the river channel and the floodplain resulting in an attenuation of the discharge peaks.\n\n\n\nSchematization of the 1D floodplain concept (side view)\n\n\nRouting is done separately for the river channel and floodplain, and using this feature does result in larger computational times.\nAlso for the local inertial approximation of both land and river routing, the water surface elevations of the river channel and the associated land cell (floodplain) are the same and is it assumed that water is exchanged instantaneously between the river channel and associated land cell (floodplain). Between land cells water can flow in two directions (x and y direction) hence the term 2D floodplain method. Additionally, saturation‐excess and infiltration‐excess overland flow are routed in two directions. Note that overland flow can not occur diagonally as opposed to the river routing, which may overestimate flow paths near river cells. Furthermore, as water from the river is exchanged with the full land cell the inundation area can be overestimated, especially for small river channels or land cells with relatively large sub-grid elevational differences. If these limitations are not acceptable, the 1D floodplain method can be used instead.\n\n\n\nSchematization of the 2D floodplain concept (top view)\n\n\nIt is also possible to run the model without 1D or 2D floodplains. This means that the model is using kinematic wave for land routing and either kinematic wave or local inertial for river routing. This can lead to unrealistically large water depths when the bankfull capacity is exceeded as there is no exchange of water between the river channel and (1D or 2D) floodplains.\n\n\n\n\n Back to top",
    "crumbs": [
      "User guide",
      "Frequently asked questions"
    ]
  },
  {
    "objectID": "model_docs/routing/waterbodies.html",
    "href": "model_docs/routing/waterbodies.html",
    "title": "Reservoirs and Lakes",
    "section": "",
    "text": "Reservoirs and lakes models can be included as part of the river network.",
    "crumbs": [
      "Model documentation",
      "Routing concepts",
      "Reservoirs and Lakes"
    ]
  },
  {
    "objectID": "model_docs/routing/waterbodies.html#reservoirs",
    "href": "model_docs/routing/waterbodies.html#reservoirs",
    "title": "Reservoirs and Lakes",
    "section": "Reservoirs",
    "text": "Reservoirs\nBy default the reservoirs are not included in the model. To include them put the following lines in the TOML file of the model:\n[model]\nreservoir__flag = true\nFinally there is a mapping required between external and internal parameter names in the TOML file, with below an example:\n[input]\nreservoir_area__count = \"wflow_reservoirareas\"\nreservoir_location__count = \"wflow_reservoirlocs\"\n\n[input.static]\nreservoir_surface__area = \"ResSimpleArea\"\n\"reservoir_water_demand~required~downstream__volume_flow_rate\" = \"ResDemand\"\nreservoir_water_release-below-spillway__max_volume_flow_rate = \"ResMaxRelease\"\nreservoir_water__max_volume = \"ResMaxVolume\"\n\"reservoir_water~full-target__volume_fraction\" = \"ResTargetFullFrac\"\n\"reservoir_water~min-target__volume_fraction\" = \"ResTargetMinFrac\"\nThe list of reservoir input parameters that can be provided through the TOML file can be found here.\n\nLakes (unregulated and regulated)\nLakes are modelled using a mass balance approach:\n\\[\n    \\dfrac{S(t + \\Delta t)}{\\Delta t} = \\dfrac{S(t)}{\\Delta t} + \\subtext{Q}{in} + \\dfrac{(P-E) A}{\\Delta t} - \\subtext{Q}{out}\n\\]\nwhere \\(\\SIb{S}{m^3}\\) is lake storage, \\(\\SIb{\\Delta t}{s}\\) is the model timestep, \\(\\SIb{\\subtext{Q}{in}}{m^3\\ s^{-1}}\\) is the sum of inflows (river, overland and lateral subsurface flow), \\(\\SIb{\\subtext{Q}{out}}{m^3\\ s^{-1}}\\) is the lake outflow at the outlet, \\(\\SIb{P}{m}\\) is precipitation, \\(\\SIb{E}{m}\\) is lake evaporation and \\(\\SIb{A}{m^2}\\) is the lake surface area.\n\n\n\nLake schematization.\n\n\nMost of the variables in this equation are known at the current or previous timestep, apart from \\(S(t+ \\Delta t)\\) and \\(\\subtext{Q}{out}\\) which can both be linked to the water level \\(H\\) in the lake using a storage curve \\(S = f(H)\\) and a rating curve \\(Q = f(H)\\). In wflow, several options are available to select storage and rating curves, and in most cases, the mass balance is then solved by linearization and iteration or using the Modified Puls Approach from Maniak (Burek et al., 2013). Storage curves in wflow can either:\n\nCome from the interpolation of field data linking volume and lake height,\nBe computed from the simple relationship \\(S = A H\\).\n\nRating curves in wflow can either:\n\nCome from the interpolation of field data linking lake outflow and water height, also appropriate for regulated lakes/ dams,\nBe computed from a rating curve of the form \\(\\subtext{Q}{out} = \\alpha (H-H_0)^\\beta\\), where \\(H_{0}\\) is the minimum water level under which the outflow is zero. Usual values for \\(\\beta\\) are \\(\\frac{3}{2}\\) for a rectangular weir or \\(2\\) for a parabolic weir (Bos, 1989).\n\n\n\nModified Puls Approach\nThe Modified Puls Approach is a resolution method of the lake balance that uses an explicit relationship between storage and outflow. Storage is assumed to be equal to \\(A H\\) and the rating curve for a parabolic weir (\\(\\beta = 2\\)):\n\\[\n    S = A H = A  (h + H_{0}) = A \\sqrt{\\frac{Q}{\\alpha}} + A H_0\n\\]\nInserting this equation in the mass balance gives:\n\\[\n    \\dfrac{A}{\\Delta t} \\sqrt{\\frac{Q}{\\alpha}} + Q = \\dfrac{S(t)}{\\Delta t} + \\subtext{Q}{in} +\n    A\\dfrac{P-E}{\\Delta t} - \\dfrac{A H_0}{\\Delta t} = \\mathrm{SI} - \\dfrac{A H_0}{\\Delta t}\n\\]\nThe solution for \\(Q\\) is then:\n\\[\n  Q =\n    \\begin{cases}\n      \\begin{align*}\n        \\frac{1}{4}\\left(-\\mathrm{LF} + \\sqrt{\\mathrm{LF}^{2} + 4  \\left(\\mathrm{SI} - \\dfrac{A H_0}{\\Delta t} \\right)}\n        \\right)^2 &\\text{ if }\\quad \\mathrm{SI} &gt; \\dfrac{A H_0}{\\Delta t} \\\\\n        0 &\\text{ if }\\quad \\mathrm{SI} \\leq \\dfrac{A H_0}{\\Delta t}\n      \\end{align*}\n    \\end{cases}\n\\]\nwhere\n\\[\n\\mathrm{LF} = \\dfrac{A}{\\Delta t \\sqrt{\\alpha}}.\n\\]\n\n\nLake parameters\nBy default, the lakes are not included in the model. To include them, put the following line in the TOML file of the model:\n[model]\nlake__flag = true\nThere is also a mapping required between external and internal parameter names in the TOML file, with below an example:\n[input]\nlake_location__count = \"wflow_lakelocs\"\nlake_area__count = \"wflow_lakeareas\"\n\n[input.static]\nlake_surface__area = \"lake_area\"\nlake_water__rating_curve_coefficient = \"lake_b\"\nlake_water__rating_curve_exponent = \"lake_e\"\nlake_water__rating_curve_type_count = \"lake_outflowfunc\"\nlake_water__storage_curve_type_count  = \"lake_storfunc\"\nlake_water_flow_threshold-level__elevation  = \"lake_threshold\"\nlake_water_level__initial_elevation = \"lake_waterlevel\"\nThe list of lake input parameters that can be provided through the TOML file can be found here. The following lake storage curve types lake_water__storage_curve_type_count are available:\n\n1 for \\(S = AH\\)\n2 for \\(S = f(H)\\) from lake data and interpolation\n\nAnd the following lake rating curve types lake_water__rating_curve_type_count are available:\n\n1 for \\(Q = f(H)\\) from lake data and interpolation\n2 for general \\(Q = b(H - H_{0})^{e}\\)\n3 in the case of Puls Approach \\(Q = b(H - H_{0})^{2}\\)\n\n\n\nAdditional settings\nStorage and rating curves from field measurement can be supplied to wflow via CSV files supplied in the same folder of the TOML file. Naming of the files uses the ID of the lakes where data are available and is of the form lake_sh_1.csv and lake_hq_1.csv for respectively the storage and rating curves of lake with ID 1.\nThe storage curve is stored in a CSV file with lake level \\(\\SIb{}{m}\\) in the first column H and corresponding lake storage \\(\\SIb{}{m^3}\\) in the second column S:\nH,  S\n392.21, 0\n393.21, 430202000\n393.71, 649959000\n394.21, 869719000\nThe rating curve uses level and discharge data depending on the Julian day of the year (JDOY), and can be also used for regulated lakes/ dams. The first line contains H for the first column. The other lines contain the water level and the corresponding discharges for the different JDOY (1-365), see also the example below, that shows part of a CSV file (first 4 Julian days). The volume above the maximum water level of the rating curve is assumed to flow instantaneously out of the lake (overflow).\nH\n394,    43,     43,     43,     43\n394.01, 44.838, 44.838, 44.838, 44.838\n394.02, 46.671, 46.671, 46.671, 46.671\n394.03, 48.509, 48.509, 48.509, 48.509\n394.04, 50.347, 50.347, 50.347, 50.347\n394.05, 52.179, 52.179, 52.179, 52.179\nLinked lakes: In some cases, lakes can be linked and return flow can be allowed from the downstream to the upstream lake. The linked lakes are defined in the lake~lower_location__count (standard name) input parameter that represent the downstream lake location ID, at the grid cell of the upstream lake location.\n\n\n\n\n\n\nNote\n\n\n\nIn every file, level units are meters [m] above lake bottom and not meters above sea level [m asl]. Especially with storage/rating curves coming from data, please be careful and convert units if needed.",
    "crumbs": [
      "Model documentation",
      "Routing concepts",
      "Reservoirs and Lakes"
    ]
  },
  {
    "objectID": "model_docs/routing/waterbodies.html#references",
    "href": "model_docs/routing/waterbodies.html#references",
    "title": "Reservoirs and Lakes",
    "section": "References",
    "text": "References\n\nBos M.G., 1989. Discharge measurement structures. Third revised edition, International Institute for Land Reclamation and Improvement ILRI, Wageningen, The Netherlands.\nBurek P., Van der Knijf J.M., Ad de Roo, 2013. LISFLOOD – Distributed Water Balance and flood Simulation Model – Revised User Manual. DOI: http://dx.doi.org/10.2788/24719.",
    "crumbs": [
      "Model documentation",
      "Routing concepts",
      "Reservoirs and Lakes"
    ]
  },
  {
    "objectID": "model_docs/routing/local-inertial.html",
    "href": "model_docs/routing/local-inertial.html",
    "title": "Local inertial",
    "section": "",
    "text": "The local inertial approximation of shallow water flow neglects only the convective acceleration term in the Saint-Venant momentum conservation equation. The numerical solution of the local inertial approximation on a staggered grid is as follows (Bates et al., 2010):\n\\[\nQ_{t+\\Delta t} = \\frac{Q_t - g A_t \\Delta t S_t}{(1+g\\Delta t n^2 |Q_t| / (R_t^{4/3} A_t))}\n\\]\nwhere \\(\\SIb{Q_{t+\\Delta t}}{m^3\\ s^{-1}}\\) is the river flow at time step \\(t+\\Delta t\\), \\(\\SIb{g}{m\\ s^{-2}}\\) is acceleration due to gravity, \\(\\SIb{A_t}{m^2}\\) is the cross sectional flow area at the previous time step, \\(\\SIb{R_t}{m}\\) is the hydraulic radius at the previous time step, \\(\\SIb{Q_t}{m^3\\ s^{-1}}\\) is the river flow at the previous time step, \\(S_t\\) is the water surface slope at the previous time step and \\(\\SIb{n}{m^{-\\frac{1}{3}}\\ s}\\) is the Manning’s roughness coefficient.\nThe momentum equation is applied to each link between two river grid cells, while the continuity equation over \\(\\Delta t\\) is applied to each river cell:\n\\[\nh^{t+\\Delta t} = h^t + \\Delta t \\frac{\\subtext{Q^{t+\\Delta t}}{src} - \\subtext{Q^{t+\\Delta t}}{dst}}{A}\n\\]\nwhere \\(\\SIb{h^{t+\\Delta t}}{m}\\) is the water depthat time step \\(t+\\Delta t\\), \\(\\SIb{h^t}{m}\\) is the water depth at the previous time step, \\(\\SIb{A}{m^2}\\) is the river area and \\(\\SIb{\\subtext{Q}{src}}{m^3\\ s^{-1}}\\) and \\(\\SIb{\\subtext{Q}{dst}}{m^3\\ s^{-1}}\\) represent river flow at the upstream and downstream link of the river cell, respectively.\nThe model time step \\(\\Delta t\\) for the local inertial model is estimated based on the Courant-Friedrichs-Lewy condition (Bates et al., 2010):\n\\[\n\\Delta t = \\alpha \\min\\left(\\frac{\\Delta x_i}{\\sqrt{gh_i}}\\right)\n\\]\nwhere \\(\\sqrt{gh_i}\\) is the wave celerity for river cell \\(i\\), \\(\\SIb{\\Delta x_i}{m}\\) is the river length for river cell \\(i\\) and \\(\\alpha\\) is a coefficient (typically between \\(0.2\\) and \\(0.7\\)) to enhance the stability of the simulation.\nIn the TOML file the following properties related to the local inertial model can be provided for the sbm and sbm_gwf model types:\n[model]\nriver_routing = \"local-inertial\"                    # default is \"kinematic-wave\"\nriver_local_inertial_flow__alpha_coefficient = 0.5  # alpha coefficient for model stability (default = 0.7)\nriver_water_flow__froude_limit_flag = true          # default is true, limit flow to subcritical-critical according to Froude number\nriver_water_flow_threshold__depth = 0.1             # water depth [m] threshold for calculating flow between cells (default = 1e-03)\nfloodplain_1d__flag = true                          # include 1D floodplain schematization (default = false)\nTwo optional constant model boundary conditions for the river length \\(\\SIb{}{m}\\) (default value of \\(\\SI{10,000}{m}\\)) and depth \\(\\SIb{}{m}\\) (default \\(\\SI{0}{m}\\)) can be provided at a river outlet node (or multiple river outlet nodes) through the model parameter netCDF file, as follows:\n[input.static]\n\"model_boundary_condition~river__length\" = \"riverlength_bc\"           # optional river length [m], default = 1e04\n\"model_boundary_condition~river_bank_water__depth\" = \"riverdepth_bc\"  # optional river depth [m], default = 0.0\nThese boundary conditions and river bed elevation and Manning’s roughness coefficient are copied to a ghost node (downstream of the river outlet node) in the code.\nThe optional 1D floodplain schematization is based on provided flood volumes as a function of flood depth (per flood depth interval) for each river cell. Wflow calculates from these flood volumes a rectangular floodplain profile for each flood depth interval. Routing is done separately for the river channel and floodplain.\nThe momentum equation is most stable for low slope environments, and to keep the simulation stable for (partly) steep environments the river_water_flow__froude_limit_flag option is set to true by default. This setting limits flow conditions to subcritical-critical conditions based on the Froude number (\\(\\le 1\\)), similar to Coulthard et al. (2013) in the CAESAR-LISFLOOD model and Adams et al. (2017) in the Landlab v1.0 OverlandFlow component. The froude number \\(\\mathrm{Fr}\\) on a link is calculated as follows:\n\\[\n  \\mathrm{Fr} = \\frac{u}{\\sqrt{gh_f}}\n\\]\nwhere \\(\\sqrt{gh_f}\\) is the wave celerity on a link and \\(u\\) is the water velocity on a link. If the water velocity from the local inertial model is causing the Froude number to be greater than \\(1.0\\) , the water velocity (and flow) is reduced in order to maintain a Froude number of \\(1.0\\).\nReservoir and lake models can be included as part of the local inertial model for river flow (1D) and river and overland flow combined (see next section). Reservoir and lake models are included as a boundary point with zero water depth for both river and overland flow. For river flow the reservoir or lake model replaces the local inertial model at the reservoir or lake location, and river flow \\(Q\\) is set by the outflow from the reservoir or lake. Overland flow at a reservoir or lake location is not allowed to or from the downstream river grid cell.",
    "crumbs": [
      "Model documentation",
      "Routing concepts",
      "Local inertial"
    ]
  },
  {
    "objectID": "model_docs/routing/local-inertial.html#river-and-floodplain-routing",
    "href": "model_docs/routing/local-inertial.html#river-and-floodplain-routing",
    "title": "Local inertial",
    "section": "",
    "text": "The local inertial approximation of shallow water flow neglects only the convective acceleration term in the Saint-Venant momentum conservation equation. The numerical solution of the local inertial approximation on a staggered grid is as follows (Bates et al., 2010):\n\\[\nQ_{t+\\Delta t} = \\frac{Q_t - g A_t \\Delta t S_t}{(1+g\\Delta t n^2 |Q_t| / (R_t^{4/3} A_t))}\n\\]\nwhere \\(\\SIb{Q_{t+\\Delta t}}{m^3\\ s^{-1}}\\) is the river flow at time step \\(t+\\Delta t\\), \\(\\SIb{g}{m\\ s^{-2}}\\) is acceleration due to gravity, \\(\\SIb{A_t}{m^2}\\) is the cross sectional flow area at the previous time step, \\(\\SIb{R_t}{m}\\) is the hydraulic radius at the previous time step, \\(\\SIb{Q_t}{m^3\\ s^{-1}}\\) is the river flow at the previous time step, \\(S_t\\) is the water surface slope at the previous time step and \\(\\SIb{n}{m^{-\\frac{1}{3}}\\ s}\\) is the Manning’s roughness coefficient.\nThe momentum equation is applied to each link between two river grid cells, while the continuity equation over \\(\\Delta t\\) is applied to each river cell:\n\\[\nh^{t+\\Delta t} = h^t + \\Delta t \\frac{\\subtext{Q^{t+\\Delta t}}{src} - \\subtext{Q^{t+\\Delta t}}{dst}}{A}\n\\]\nwhere \\(\\SIb{h^{t+\\Delta t}}{m}\\) is the water depthat time step \\(t+\\Delta t\\), \\(\\SIb{h^t}{m}\\) is the water depth at the previous time step, \\(\\SIb{A}{m^2}\\) is the river area and \\(\\SIb{\\subtext{Q}{src}}{m^3\\ s^{-1}}\\) and \\(\\SIb{\\subtext{Q}{dst}}{m^3\\ s^{-1}}\\) represent river flow at the upstream and downstream link of the river cell, respectively.\nThe model time step \\(\\Delta t\\) for the local inertial model is estimated based on the Courant-Friedrichs-Lewy condition (Bates et al., 2010):\n\\[\n\\Delta t = \\alpha \\min\\left(\\frac{\\Delta x_i}{\\sqrt{gh_i}}\\right)\n\\]\nwhere \\(\\sqrt{gh_i}\\) is the wave celerity for river cell \\(i\\), \\(\\SIb{\\Delta x_i}{m}\\) is the river length for river cell \\(i\\) and \\(\\alpha\\) is a coefficient (typically between \\(0.2\\) and \\(0.7\\)) to enhance the stability of the simulation.\nIn the TOML file the following properties related to the local inertial model can be provided for the sbm and sbm_gwf model types:\n[model]\nriver_routing = \"local-inertial\"                    # default is \"kinematic-wave\"\nriver_local_inertial_flow__alpha_coefficient = 0.5  # alpha coefficient for model stability (default = 0.7)\nriver_water_flow__froude_limit_flag = true          # default is true, limit flow to subcritical-critical according to Froude number\nriver_water_flow_threshold__depth = 0.1             # water depth [m] threshold for calculating flow between cells (default = 1e-03)\nfloodplain_1d__flag = true                          # include 1D floodplain schematization (default = false)\nTwo optional constant model boundary conditions for the river length \\(\\SIb{}{m}\\) (default value of \\(\\SI{10,000}{m}\\)) and depth \\(\\SIb{}{m}\\) (default \\(\\SI{0}{m}\\)) can be provided at a river outlet node (or multiple river outlet nodes) through the model parameter netCDF file, as follows:\n[input.static]\n\"model_boundary_condition~river__length\" = \"riverlength_bc\"           # optional river length [m], default = 1e04\n\"model_boundary_condition~river_bank_water__depth\" = \"riverdepth_bc\"  # optional river depth [m], default = 0.0\nThese boundary conditions and river bed elevation and Manning’s roughness coefficient are copied to a ghost node (downstream of the river outlet node) in the code.\nThe optional 1D floodplain schematization is based on provided flood volumes as a function of flood depth (per flood depth interval) for each river cell. Wflow calculates from these flood volumes a rectangular floodplain profile for each flood depth interval. Routing is done separately for the river channel and floodplain.\nThe momentum equation is most stable for low slope environments, and to keep the simulation stable for (partly) steep environments the river_water_flow__froude_limit_flag option is set to true by default. This setting limits flow conditions to subcritical-critical conditions based on the Froude number (\\(\\le 1\\)), similar to Coulthard et al. (2013) in the CAESAR-LISFLOOD model and Adams et al. (2017) in the Landlab v1.0 OverlandFlow component. The froude number \\(\\mathrm{Fr}\\) on a link is calculated as follows:\n\\[\n  \\mathrm{Fr} = \\frac{u}{\\sqrt{gh_f}}\n\\]\nwhere \\(\\sqrt{gh_f}\\) is the wave celerity on a link and \\(u\\) is the water velocity on a link. If the water velocity from the local inertial model is causing the Froude number to be greater than \\(1.0\\) , the water velocity (and flow) is reduced in order to maintain a Froude number of \\(1.0\\).\nReservoir and lake models can be included as part of the local inertial model for river flow (1D) and river and overland flow combined (see next section). Reservoir and lake models are included as a boundary point with zero water depth for both river and overland flow. For river flow the reservoir or lake model replaces the local inertial model at the reservoir or lake location, and river flow \\(Q\\) is set by the outflow from the reservoir or lake. Overland flow at a reservoir or lake location is not allowed to or from the downstream river grid cell.",
    "crumbs": [
      "Model documentation",
      "Routing concepts",
      "Local inertial"
    ]
  },
  {
    "objectID": "model_docs/routing/local-inertial.html#overland-flow-2d",
    "href": "model_docs/routing/local-inertial.html#overland-flow-2d",
    "title": "Local inertial",
    "section": "Overland flow (2D)",
    "text": "Overland flow (2D)\nFor the simulation of 2D overland flow on a staggered grid the numerical scheme proposed by de Almeida et al. (2012) is adopted. The explicit solution for the estimation of water discharge between two cells in the x-direction is of the following form (following the notation of Almeida et al. (2012)):\n\\[\n\\begin{split}\nQ_{i-1/2}^{n+1} = \\frac{\\left[ \\theta Q_{i-1/2}^{n} +\\frac{(1-\\theta)}{2}(Q_{(i-3/2)}^{n} +\nQ_{(i+1/2)}^{n})\\right]- g h_f \\frac{\\Delta t}{\\Delta x} (\\eta^n_i - \\eta^n_{i-1}) \\Delta y}{1+g\\Delta t n^2 |Q_{i-1/2}^{n}|/(h_f^{7/3} \\Delta y)}\n\\end{split}\n\\]\nwhere subscripts \\(i\\) and \\(n\\) refer to space and time indices, respectively. Subscript \\(i-\\frac{1}{2}\\) is to the link between node \\(i\\) and \\(i-1\\), subscript \\(i+\\frac{1}{2}\\) is the link between node \\(i\\) and node \\(i+1\\), and subscript \\(i-\\frac{3}{2}\\) is the link between node \\(i-1\\) and node \\(i-2\\). \\(\\SIb{Q}{m^3\\ s^{-1}}\\) is the water discharge, \\(\\SIb{\\eta}{m}\\) is the water surface elevation, \\(\\SIb{h_f}{m}\\) is the water depth between cells, \\(\\SIb{n}{m^{-\\frac{1}{3}} s}\\) is the Manning’s roughness coefficient, \\(\\SIb{g}{m\\ s^{-2}}\\) is acceleration due to gravity, \\(\\SIb{\\Delta t}{s}\\) is the adaptive internal model time step, \\(\\SIb{\\Delta x}{m}\\) is the distance between two cells, \\(\\SIb{\\Delta y}{m}\\) is the flow width and \\(\\SIb{\\theta}{-}\\) is a weighting factor that adjusts the amount of artificial numerical diffusion. Below the staggered grid and variables of the numerical solution in the x-direction, based on Almeida et al. (2012):\n\nThe overland flow local inertial approach is used in combination with the local inertial river routing. This is a similar to the modelling approach of Neal et al. (2012), where the hydraulic model LISFLOOD-FP was extended with a subgrid channel model. For the subgrid channel, Neal et al. (2012) make use of a D4 (four direction) scheme, while here a D8 (eight direction) scheme is used, in combination with the D4 scheme for 2D overland flow.\nIn the TOML file the following properties related to the local inertial model with 1D river routing and 2D overland flow can be provided for the sbm and sbm_gwf model types:\n[model]\nland_routing = \"local-inertial\"                     # default is kinematic-wave\nriver_routing = \"local-inertial\"                    # default is kinematic-wave\nland_local_inertial_flow__alpha_coefficient = 0.5   # alpha coefficient for model stability (default = 0.7)\nland_local_inertial_flow__theta_coefficient = 0.9   # weighting factor that adjusts the amount of artificial numerical diffusion (default = 0.8)\nland_surface_water_flow__froude_limit_flag = true   # default is true, limit flow to subcritical-critical according to Froude number\nland_surface_water_flow_threshold__depth = 0.1      # water depth [m] threshold for calculating flow between cells (default = 1e-03)\nThe alpha coefficient, flow limitation according to the Froude number, and the adaptive model time step \\(\\Delta t\\) are explained in more detail in the River and floodplain routing section of the local inertial model.",
    "crumbs": [
      "Model documentation",
      "Routing concepts",
      "Local inertial"
    ]
  },
  {
    "objectID": "model_docs/routing/local-inertial.html#external-inflows",
    "href": "model_docs/routing/local-inertial.html#external-inflows",
    "title": "Local inertial",
    "section": "External inflows",
    "text": "External inflows\nExternal inflows \\(\\SIb{}{m^3\\ s^{-1}}\\) for example water supply or abstractions can to added the local inertial model for river flow (1D) and river and overland flow combined (1D-2D), as a cyclic parameter or as part of forcing. For example, cyclic inflow can be provided in the TOML file as follows:\n[input.cyclic]\n\"river_water_inflow~external__volume_flow_rate\" = \"river_inflow\"\nThese inflows are added or subtracted as part of the continuity equation of the local inertial model. Abstractions are limited to a maximum of \\(\\SI{80}{\\%}\\) of the river volume.",
    "crumbs": [
      "Model documentation",
      "Routing concepts",
      "Local inertial"
    ]
  },
  {
    "objectID": "model_docs/routing/local-inertial.html#abstractions",
    "href": "model_docs/routing/local-inertial.html#abstractions",
    "title": "Local inertial",
    "section": "Abstractions",
    "text": "Abstractions\nInternal abstractions \\(\\SIb{}{m^3\\ s^{-1}}\\) from the river are possible when water demand and allocation is computed. The abstraction is set from the water demand and allocation module each time step. Abstractions are subtracted as part of the continuity equation of the local inertial model.",
    "crumbs": [
      "Model documentation",
      "Routing concepts",
      "Local inertial"
    ]
  },
  {
    "objectID": "model_docs/routing/local-inertial.html#multi-threading",
    "href": "model_docs/routing/local-inertial.html#multi-threading",
    "title": "Local inertial",
    "section": "Multi-Threading",
    "text": "Multi-Threading\nThe local inertial model for river flow (1D) and river and overland flow combined (1D-2D) can be executed in parallel using multiple threads.",
    "crumbs": [
      "Model documentation",
      "Routing concepts",
      "Local inertial"
    ]
  },
  {
    "objectID": "model_docs/routing/local-inertial.html#references",
    "href": "model_docs/routing/local-inertial.html#references",
    "title": "Local inertial",
    "section": "References",
    "text": "References\n\nAdams, J. M., Gasparini, N. M., Hobley, D. E. J., Tucker, G. E., Hutton, E. W. H., Nudurupati, S. S., and Istanbulluoglu, E., 2017, The Landlab v1.0 OverlandFlow component: a Python tool for computing shallow-water flow across watersheds, Geosci. Model Dev., 10, 1645–1663, https://doi.org/10.5194/gmd-10-1645-2017.\nde Almeida, G. A. M., P. Bates, J. E. Freer, and M. Souvignet, 2012, Improving the stability of a simple formulation of the shallow water equations for 2-D flood modeling, Water Resour. Res., 48, W05528, https://doi.org/10.1029/2011WR011570.\nBates, P. D., M. S. Horritt, and T. J. Fewtrell, 2010, A simple inertial formulation of the shallow water equations for efficient two-dimensional flood inundation modelling, J. Hydrol., 387, 33–45, https://doi.org/10.1016/j.jhydrol.2010.03.027.\nCoulthard, T. J., Neal, J. C., Bates, P. D., Ramirez, J., de Almeida, G. A. M., and Hancock, G. R., 2013, Integrating the LISFLOOD-FP 2- D hydrodynamic model with the CAESAR model: implications for modelling landscape evolution, Earth Surf. Proc. Land., 38, 1897–1906, https://doi.org/10.1002/esp.3478.\nNeal, J., G. Schumann, and P. Bates (2012), A subgrid channel model for simulating river hydraulics and floodplaininundation over large and data sparse areas, Water Resour.Res., 48, W11506, https://doi.org/10.1029/2012WR012514.",
    "crumbs": [
      "Model documentation",
      "Routing concepts",
      "Local inertial"
    ]
  },
  {
    "objectID": "model_docs/routing/gwf.html",
    "href": "model_docs/routing/gwf.html",
    "title": "Groundwater flow",
    "section": "",
    "text": "Single layer groundwater flow requires the four following components:\nThe aquifer types, constanthead boundary and other boundaries (e.g. river and drainage) are described in more detail below. Which functionality of these components is supported by model type sbm_gwf is also clarified below.",
    "crumbs": [
      "Model documentation",
      "Routing concepts",
      "Groundwater flow"
    ]
  },
  {
    "objectID": "model_docs/routing/gwf.html#aquifer-types",
    "href": "model_docs/routing/gwf.html#aquifer-types",
    "title": "Groundwater flow",
    "section": "Aquifer types",
    "text": "Aquifer types\nGroundwater flow can occur either in a confined or unconfined aquifer. Confined aquifers are overlain by a poorly permeable confining layer (e.g. clay). No air can get in to fill the pore space so that the aquifer always remains fully saturated. For a confined aquifer, water will always flow along the complete height \\(\\SIb{H}{m}\\) over the aquifer and transmissivity \\(\\SIb{kH}{m^2\\ d^{-1}}\\) is a constant (\\(\\SIb{k}{m\\ d^{-1}}\\) is the horizontal hydraulic conductivity). Specific storage is the amount of water an aquifer releases per unit change in hydraulic head, per unit volume of aquifer, as the aquifer and the groundwater itself is compressed. Its value is much smaller than specific yield, between \\(10^{-5}\\) (stiff) and \\(10^{-2}\\) (weak).\nThe upper boundary of an unconfined aquifer is the water table (the phreatic surface). Specific yield (or drainable porosity) represents the volumetric fraction the aquifer will yield when all water drains and the pore volume is filled by air instead. Specific yield will vary roughly between \\(0.05\\) (clay) and \\(0.45\\) (peat) (Johnson, 1967).\nGroundwater flow is solved forward in time and central in space. The vertically averaged governing equation for an inhomogeneous and isotropic aquifer in one dimension can be written as:\n\\[\n    S \\frac{\\partial \\phi}{\\partial t} =  \\frac{\\partial}{\\partial x} \\left(kH \\frac{\\phi}{\\delta x}\\right) + Q\n\\]\nwhere \\(\\SIb{S}{m\\ m^{-1}}\\) is storativity (or specific yield), \\(\\SIb{\\phi}{m}\\) is hydraulic head, \\(t\\) is time, \\(\\SIb{k}{m\\ t^{-1}}\\) is horizontal hydraulic conductivity, \\(\\SIb{H}{m}\\) is the (saturated) aquifer height: groundwater level - aquifer bottom elevation and \\(\\SIb{Q}{m\\ t^{-1}}\\) represents fluxes from boundary conditions (e.g. recharge or abstraction), see also Aquifer boundary conditions.\nThe simplest finite difference formulation is forward in time, central in space, and can be written as:\n\\[\n    S_i  \\frac{\\phi_{i}^{t+1} - \\phi_i^{t}}{\\Delta t} = -C_{i-1}  (\\phi_{i-1} - \\phi_i) - C_i  (\\phi_{i+1} - \\phi_i) + Q_i\n\\]\nwhere \\(i\\) is the cell index, \\(t\\) is time, \\(\\Delta t\\) is the step size, \\(C_{i-1}\\) is the the intercell conductance between cell \\(i-1\\) and \\(i\\) and \\(C_i\\) is the intercell conductance between cell \\(i\\) and \\(i+1\\).\nConductance \\(C\\) is defined as:\n\\[\nC = \\frac{kH w}{l}\n\\]\nwhere \\(\\SIb{w}{m}\\) is the width of the cell to cell connection, and \\(\\SIb{l}{m}\\) is the length of the cell to cell connection. \\(k\\) and \\(H\\) may both vary in space; intercell conductance is therefore an average using the properties of two cells. For the calculation of the intercell conductance \\(C\\) the harmonic mean is used (see also Goode and Appel, 1992), here between cell index \\(i\\) and cell index \\(i+1\\), in the \\(x\\) direction:\n\\[\n    C_i = w  \\frac{k_iH_i\\cdot k_{i+1}H_{i+1}}{k_iH_i \\cdot l_{i+1} + k_{i+1}H_{i+1} \\cdot l_i}\n\\]\nwhere \\(\\SIb{H}{m}\\) is the aquifer top - aquifer bottom, and \\(k\\), \\(l_i\\) is the length in cell \\(i\\) (\\(0.5 \\Delta x_i\\)), \\(l_{i+1}\\) is the length in cell \\(i+1\\) (\\(0.5 \\Delta x_{i+1}\\)) and \\(w\\) as previously defined. For an unconfined aquifer the intercell conductance is scaled by using the “upstream saturated fraction” as the MODFLOW documentation calls it. In this approach, the saturated thickness of a cell-to-cell is approximated using the cell with the highest head. This results in a consistent overestimation of the saturated thickness, but it avoids complexities related with cell drying and rewetting, such as having to define a “wetting threshold” or a “wetting factor”. See also the documentation for MODFLOW-NWT (Niswonger et al., 2011) or MODFLOW6 (Langevin et al., 2017) for more background information. For more background on drying and rewetting, see for example McDonald et al. (1991).\nFor the finite difference formulation, there is only one unknown, \\(\\phi_i^{t+1}\\). Reshuffling terms:\n\\[\n\\phi_i^{t+1} = \\phi_i^t + (C_{i-1}  (\\phi_i - \\phi_{i-1}) + C_i  (\\phi_{i+1} - \\phi_i) + Q_i) \\frac{Δt}{S_i}\n\\]\nThis can be generalized to two dimensions, for both regular and irregular cell connectivity. Finally, a stable time step size can be computed given the forward-in-time, central in space scheme, based on the following criterion from Chu and Willis (1984):\n\\[\n  \\frac{\\Delta t k H}{\\Delta x  \\Delta y S}  \\le \\frac{1}{4}\n\\]\nwhere \\(\\SIb{\\Delta t}{d}\\) is the stable time step size, \\(\\SIb{\\Delta x}{m}\\) is the cell length in the \\(x\\) direction and \\(\\SIb{\\Delta y}{m}\\) is the cell length in the \\(y\\) direction, \\(\\SIb{k}{m^2\\ d^{-1}}\\) is the horizontal hydraulic conductivity and \\(\\SIb{H}{m}\\) is the saturated thickness of the aquifer. For each cell \\(\\frac{\\Delta x  \\Delta y S}{k H}\\) is calculated, the minimum of these values is determined, and multiplied by \\(\\frac{1}{4}\\), to get the stable time step size.\nFor more details about the finite difference formulation and the stable time step size criterion we refer to the paper of Chu and Willis (1984).\nBoundary conditions can be classified into three categories:\n\nspecified head (Dirichlet)\nspecified flux (Neumann)\nhead-dependent flux (Robin)\n\nNeumann and Robin conditions are implemented by adding to or subtracting from a net (lumped) cell flux. Dirichlet conditions are special cased, since they cannot (easily) be implemented via the flux, but the head is set directly instead.\nThe groundwater flow component of model type sbm_gwf consists of a single layer unconfined aquifer. The list of input parameters for an unconfined aquifer can be found here. Hydraulic head \\(\\SIb{\\phi}{m}\\) is a state and output variable.\nBelow an example of setting the conductivity_profile and input parameters in the TOML configuration file for an unconfined aquifer:\n[model]\nconductivity_profile = \"exponential\"  # saturated hydraulic conductivity depth profile, default is \"uniform\"\n\n[input.static]\nland_surface__elevation = \"wflow_dem\"\nsubsurface_surface_water__horizontal_saturated_hydraulic_conductivity = \"kh_surface\"\nsubsurface_water__specific_yield = \"specific_yield\"\nsubsurface__horizontal_saturated_hydraulic_conductivity_scale_parameter = \"gwf_f\"",
    "crumbs": [
      "Model documentation",
      "Routing concepts",
      "Groundwater flow"
    ]
  },
  {
    "objectID": "model_docs/routing/gwf.html#constant-head",
    "href": "model_docs/routing/gwf.html#constant-head",
    "title": "Groundwater flow",
    "section": "Constant head",
    "text": "Constant head\nFor model type sbm_gwf Dirichlet boundary conditions can be specified (optional) in the TOML file as follows:\n[model]\nconstanthead__flag = true # optional, default is \"false\"\n\n[input.static]\n\"model_boundary_condition~constant_hydraulic_head\" = \"constant_head\"",
    "crumbs": [
      "Model documentation",
      "Routing concepts",
      "Groundwater flow"
    ]
  },
  {
    "objectID": "model_docs/routing/gwf.html#aquifer-boundary-conditions",
    "href": "model_docs/routing/gwf.html#aquifer-boundary-conditions",
    "title": "Groundwater flow",
    "section": "Aquifer boundary conditions",
    "text": "Aquifer boundary conditions\n\nRiver\nThe flux between river and aquifer is calculated using Darcy’s law following the approach in MODFLOW:\n\\[\n  \\subtext{Q}{riv} =\n  \\begin{align*}\n    \\begin{cases}\n      C_i \\min \\left\\{\\subtext{h}{riv} - \\subtext{B}{riv}, \\subtext{h}{riv} - \\phi\\right\\} &\\text{ if }\\quad \\subtext{h}{riv} &gt; \\phi \\\\\n      C_e (\\subtext{h}{riv} - \\phi) &\\text{ if }\\quad \\subtext{h}{riv} \\le \\phi\n    \\end{cases}\n  \\end{align*}\n\\]\nwhere \\(\\SIb{\\subtext{Q}{riv}}{L^3 T^{-1}}\\) is the exchange flux from river to aquifer, \\(\\SIb{C_i}{L^2 T^{-1}}\\) is the river bed infiltration conductance, \\(\\SIb{C_e}{L^2 T^{-1}}\\) is the river bed exfiltration conductance, \\(\\SIb{\\subtext{B}{riv}}{L}\\) the bottom of the river bed, \\(\\SIb{\\subtext{h}{riv}}{L}\\) is the river stage and \\(\\SIb{\\phi}{L}\\) is the hydraulic head in the river cell.\nThe list of input parameters for the river boundary of groundwater flow that can be provided through the TOML file can be found here.\nThe exchange flux (river to aquifer) \\(\\subtext{Q}{riv}\\) is an output variable, and is used to update the total flux in a river cell. For model type sbm_gwf, the water depth \\(\\SIb{h}{m}\\) of the river routing in combination with the river bottom is used to update the river stage each time step.\n\n\nDrainage\nThe flux from drains to the aquifer is calculated as follows:\n\\[\n\\subtext{Q}{drain} = \\subtext{C}{drain} \\min(0, \\subtext{h}{drain} - \\phi)\n\\]\nwhere \\(\\SIb{\\subtext{Q}{drain}}{L^3\\ T^{-1}}\\) is the exchange flux from drains to aquifer, \\(\\SIb{\\subtext{C}{drain}}{L^2\\ T^{-1}}\\) is the drain conductance, \\(\\SIb{\\subtext{h}{drain}}{L}\\) is the drain elevation and \\(\\SIb{\\phi}{L}\\) is the hydraulic head in the cell with drainage.\nThe list of input parameters for the drainage boundary of groundwater flow that can be provided through the TOML file can be found here.\nThe exchange flux (drains to aquifer) \\(\\subtext{Q}{drain}\\) is an output variable, and is used to update the total flux in a cell with drains. For model type sbm_gwf this boundary condition is optional, and can be specified in the TOML file as follows:\n[model]\ndrain__flag = true # optional, default is \"false\"\n\n[input.static]\nland_drain_location__mask = \"drain\"\nland_drain__conductance = \"cond_drain\"\nland_drain__elevation = \"elev_drain\"\n\n\nRecharge\nThe net recharge flux \\(\\subtext{Q}{net recharge}\\) to the aquifer is calculated as follows:\n\\[\n\\subtext{Q}{net recharge} = \\subtext{R}{net} \\, A\n\\]\nwith \\(\\SIb{\\subtext{R}{net}}{L\\ T^{-1}}\\) the net recharge rate and \\(\\SIb{A}{L^2}\\) the area of the aquifer cell.\nThe recharge flux \\(\\subtext{Q}{net recharge}\\) is an output variable, and is used to update the total flux in a cell where net recharge occurs. For model type sbm_gwf, the recharge rate \\(\\SIb{}{mm\\ t^{-1}}\\) from the SBM soil model is used to update the recharge rate \\(\\subtext{R}{net}\\) of the recharge boundary each time step.\n\n\nHead boundary\nThis boundary is a fixed head with time (not affected by the model stresses over time) outside of the model domain, and is generally used to avoid an unnecessary extension of the model domain to the location of the fixed boundary (for example a large lake). The flux from the boundary \\(\\SIb{Q_{hb}}{L^3\\ T^{-1}}\\) is calculated as follows:\n\\[\nQ_{hb} = C_{hb} (\\phi_{hb} - \\phi)\n\\]\nwith \\(\\SIb{C_{hb}}{L^2\\ T^{-1}}\\) the conductance of the head boundary, \\(\\SIb{\\phi_{hb}}{L}\\) the head of the head boundary and \\(\\phi\\) the head of the aquifer cell.\nThe head boundary flux \\(Q_{hb}\\) is an output variable, and is used to update the total flux in a cell where this type of boundary occurs. The parameter Head \\(\\phi_{hb}\\) can be specified as a fixed or time dependent value.\n\n\n\n\n\n\nNote\n\n\n\nThis boundary is not (yet) part of model type sbm_gwf.\n\n\n\n\nWell boundary\nA volumetric well rate \\(\\SIb{}{L^3\\ T^{-1}}\\) can be specified as a boundary condition.\nThe volumetric well rate \\(\\subtext{Q}{well}\\) can be can be specified as a fixed or time dependent value. If a cell is dry, the actual well flux is set to zero (see also the last note on this page).\n\n\n\n\n\n\nNote\n\n\n\nThis boundary is not (yet) part model type sbm_gwf.\n\n\n\n\n\n\n\n\nNote\n\n\n\nFor an unconfined aquifer the boundary fluxes are checked, in case of a dry aquifer cell a negative flux is not allowed.",
    "crumbs": [
      "Model documentation",
      "Routing concepts",
      "Groundwater flow"
    ]
  },
  {
    "objectID": "model_docs/routing/gwf.html#references",
    "href": "model_docs/routing/gwf.html#references",
    "title": "Groundwater flow",
    "section": "References",
    "text": "References\n\nChu, W. S., & Willis, R. (1984). An explicit finite difference model for unconfined aquifers. Groundwater, 22(6), 728-734.\nGoode, D. J., & Appel, C. A. (1992). Finite-Difference Interblock Transmissivity for Unconﬁned Aquifers and for Aquifers having Smoothly Varying Transmissivity Water-resources investigations report, 92, 4124.\nJohnson, A. I. (1967), Specific yield: compilation of specific yields for various materials, Water Supply Paper 1662-D, Washington, D.C.: U.S. Government Printing Office, p. 74, doi:10.3133/wsp1662D.\nLangevin, C.D., Hughes, J.D., Banta, E.R., Niswonger, R.G., Panday, Sorab, and Provost, A.M., 2017, Documentation for the MODFLOW 6 Groundwater Flow Model: U.S. Geological Survey Techniques and Methods, book 6, chap. A55, 197 p., https://doi.org/10.3133/tm6A55.\nMcDonald, M.G., Harbaugh, A.W., Orr, B.R., and Ackerman, D.J., 1991, A method of converting no-flow cells to variable-head cells for the U.S. Geological Survey modular finite-difference groundwater flow model: U.S. Geological Survey Open-File Report 91-536, 99 p.\nNiswonger, R.G., Panday, Sorab, and Ibaraki, Motomu, 2011, MODFLOW-NWT, A Newton formulation for MODFLOW-2005: U.S. Geological Survey Techniques and Methods 6-A37, 44 p.",
    "crumbs": [
      "Model documentation",
      "Routing concepts",
      "Groundwater flow"
    ]
  },
  {
    "objectID": "model_docs/parameters_routing.html",
    "href": "model_docs/parameters_routing.html",
    "title": "Routing concepts",
    "section": "",
    "text": "Standard names in the Tables below that contain instantaneous in the quantity part of the standard name can be valid for an internal time step (for example for kinematic wave routing an internal time step is optional (and recommended), with a time step equal to the model simulation time step the standard name nonetheless contains instantaneous) and thus considered instantaneous compared to the model simulation time step Δt \\(\\SIb{}{s}\\).",
    "crumbs": [
      "Model documentation",
      "Model parameters and variables",
      "Routing concepts"
    ]
  },
  {
    "objectID": "model_docs/parameters_routing.html#water-bodies",
    "href": "model_docs/parameters_routing.html#water-bodies",
    "title": "Routing concepts",
    "section": "Water bodies",
    "text": "Water bodies\n\nLakes\n\nGeneric input\n\n\n\n\n\n\n\n\n\nStandard Name\nDescription\nUnit\nDefault\n\n\n\n\nlake_location__count\nOutlet of the lakes in which each lake has a unique id\n-\n-\n\n\nlake_area__count\nLake coverage\n-\n-\n\n\n\n\n\nInput\n\n\n\n\n\n\n\n\n\nStandard Name\nDescription\nUnit\nDefault\n\n\n\n\nlake_surface__area\nArea of the lake\nm²\n-\n\n\nlake_water__rating_curve_coefficient\nRating curve coefficient\n-\n-\n\n\nlake_water__rating_curve_exponent\nRating curve exponent\n-\n-\n\n\nlake_water_flow_threshold-level__elevation\nWater level threshold, below this level outflow is zero\nm\n-\n\n\nlake~lower_location__count\nIndex of lower lake (linked lakes)\n-\n0\n\n\nlake_water__storage_curve_type_count\nType of lake storage curve\n-\n-\n\n\nlake_water__rating_curve_type_count\nType of lake rating curve\n-\n-\n\n\nlake_water_surface__initial_elevation\nWater level of lake (used for initialization)\nm\n-\n\n\n\n\n\nStates\n\n\n\nStandard Name\nDescription\nUnit\n\n\n\n\nlake_water_surface__instantaneous_elevation\nLake water level\nm\n\n\n\n\n\nOutput\n\n\n\n\n\n\n\n\nStandard Name\nDescription\nUnit\n\n\n\n\nlake_water__volume\nLake volume\nm³\n\n\nlake_water__instantaneous_volume\nLake volume\nm³\n\n\nlake_water_surface__elevation\nLake water level\nm\n\n\nlake_water~outgoing__volume_flow_rate\nOutflow of the lake\nm³ s⁻¹\n\n\nlake_water~incoming__volume_flow_rate\nInflow into the lake\nm³ s⁻¹\n\n\nlake_water__evaporation_volume_flux\nAverage actual evaporation over the lake area\nmm Δt⁻¹\n\n\nlake_water__precipitation_volume_flux\nAverage precipitation over the lake area\nmm Δt⁻¹\n\n\nlake_water__potential_evaporation_volume_flux\nAverage potential evaporation over the lake area\nmm Δt⁻¹\n\n\n\n\n\n\nReservoirs\n\nGeneric input\n\n\n\n\n\n\n\n\n\nStandard Name\nDescription\nUnit\nDefault\n\n\n\n\nreservoir_location__count\nOutlet of the reservoirs in which each reservoir has a unique id\n-\n-\n\n\nreservoir_area__count\nReservoir coverage\n-\n-\n\n\n\n\n\nInput\n\n\n\n\n\n\n\n\n\nStandard Name\nDescription\nUnit\nDefault\n\n\n\n\nreservoir_surface__area\nArea of the reservoir\nm²\n-\n\n\nreservoir_water_demand~required~downstream__volume_flow_rate\nMinimum (environmental) flow released from reservoir\nm³ s⁻¹\n-\n\n\nreservoir_water_release-below-spillway__max_volume_flow_rate\nMaximum amount that can be released if below spillway\nm³ s⁻¹\n-\n\n\nreservoir_water__max_volume\nMaximum volume (above which water is spilled)\nm³\n-\n\n\nreservoir_water~full-target__volume_fraction\nTarget fraction full (of max storage)\n-\n-\n\n\nreservoir_water~min-target__volume_fraction\nTarget minimum full fraction (of max storage)\n-\n-\n\n\n\n\n\nStates\n\n\n\nStandard Name\nDescription\nUnit\n\n\n\n\nreservoir_water__instantaneous_volume\nReservoir volume\nm³\n\n\n\n\n\nOutput\n\n\n\n\n\n\n\n\nStandard Name\nDescription\nUnit\n\n\n\n\nreservoir_water__volume\nReservoir volume\nm³\n\n\nreservoir_water~outgoing__volume_flow_rate\nOutflow of the reservoir\nm³ s⁻¹\n\n\nreservoir_water~incoming__volume_flow_rate\nInflow into the reservoir\nm³ s⁻¹\n\n\nreservoir_water__evaporation_volume_flux\nAverage actual evaporation over the reservoir area\nmm Δt⁻¹\n\n\nreservoir_water__precipitation_volume_flux\nAverage precipitation over the reservoir area\nmm Δt⁻¹\n\n\nreservoir_water__potential_evaporation_volume_flux\nAverage potential evaporation over the reservoir area\nmm Δt⁻¹",
    "crumbs": [
      "Model documentation",
      "Model parameters and variables",
      "Routing concepts"
    ]
  },
  {
    "objectID": "model_docs/parameters_routing.html#kinematic-wave",
    "href": "model_docs/parameters_routing.html#kinematic-wave",
    "title": "Routing concepts",
    "section": "Kinematic wave",
    "text": "Kinematic wave\n\nRiver flow\n\nInput\n\n\n\n\n\n\n\n\n\nStandard Name\nDescription\nUnit\nDefault\n\n\n\n\nriver_water_flow__manning_n_parameter\nManning’s roughness\ns m\\(^{-\\frac{1}{3}}\\)\n0.036\n\n\nriver_bank_water__depth\nBankfull river depth\nm\n1.0\n\n\nriver__slope\nRiver slope\nm m⁻¹\n-\n\n\nriver_water_inflow~external__volume_flow_rate\nExternal inflow into the river (negative for abstractions)\nm³ s⁻¹\n-\n\n\n\n\n\nStates\n\n\n\n\n\n\n\n\nStandard Name\nDescription\nUnit\n\n\n\n\nriver_water__instantaneous_volume_flow_rate\nRiver discharge\nm³ s⁻¹\n\n\nriver_water__instantaneous_depth\nRiver water depth\nm\n\n\n\n\n\nOutput\n\n\n\n\n\n\n\n\nStandard Name\nDescription\nUnit\n\n\n\n\nriver_water__volume_flow_rate\nRiver discharge\nm³ s⁻¹\n\n\nriver_water__depth\nRiver water depth\nm\n\n\nriver_water__volume\nRiver water volume\nm³\n\n\nriver_water__instantaneous_volume\nRiver water volume\nm³\n\n\nriver_water_inflow~lateral__volume_flow_rate\nLateral inflow into the river\nm³ s⁻¹\n\n\nriver_water_abstraction~external__volume_flow_rate\nActual abstraction based on external negative inflow\nm³ s⁻¹\n\n\n\n\n\n\nOverland flow\n\nInput\n\n\n\n\n\n\n\n\n\nStandard Name\nDescription\nUnit\nDefault\n\n\n\n\nland_surface_water_flow__manning_n_parameter\nManning’s roughness\ns m\\(^{-\\frac{1}{3}}\\)\n0.072\n\n\nland_surface__slope\nLand surface slope\nm m⁻¹\n-\n\n\n\n\n\nStates\n\n\n\n\n\n\n\n\nStandard Name\nDescription\nUnit\n\n\n\n\nland_surface_water__instantaneous_volume_flow_rate\nDischarge overland flow\nm³ s⁻¹\n\n\nland_surface_water__instantaneous_depth\nWater depth overland flow\nm\n\n\n\n\n\nOutput\n\n\n\n\n\n\n\n\nStandard Name\nDescription\nUnit\n\n\n\n\nland_surface_water__volume_flow_rate\nDischarge overland flow\nm³ s⁻¹\n\n\nland_surface_water~to-river__volume_flow_rate\nDischarge overland flow that flows to the river\nm³ s⁻¹\n\n\nland_surface_water__depth\nWater depth overland flow\nm\n\n\nland_surface_water__volume\nWater volume overland flow\nm³\n\n\nland_surface_water__instantaneous_volume\nWater volume overland flow\nm³\n\n\n\n\n\n\nLateral subsurface flow\n\nInput\n\n\n\n\n\n\n\n\n\nStandard Name\nDescription\nUnit\nDefault\n\n\n\n\nsubsurface_water__horizontal-to-vertical_saturated_hydraulic_conductivity_ratio\nA muliplication factor applied to vertical hydraulic conductivity\n-\n-\n\n\nland_surface__slope\nLand surface slope\nm m⁻¹\n-\n\n\n\n\n\nStates\n\n\n\nStandard Name\nDescription\nUnit\n\n\n\n\nsubsurface_water__volume_flow_rate\nSubsurface flow\nm³ day⁻¹\n\n\n\n\n\nOutput\n\n\n\n\n\n\n\n\nStandard Name\nDescription\nUnit\n\n\n\n\nsubsurface_water_sat-zone_top__depth\nPseudo-water table depth (top of the saturated zone)\nm\n\n\nsubsurface_water__exfiltration_volume_flux\nExfiltration (groundwater above surface level, saturated excess conditions)\nmm Δt⁻¹\n\n\nsubsurface_water~to-river__volume_flow_rate\nPart of subsurface flow that flows to the river\nm³ day⁻¹",
    "crumbs": [
      "Model documentation",
      "Model parameters and variables",
      "Routing concepts"
    ]
  },
  {
    "objectID": "model_docs/parameters_routing.html#local-inertial",
    "href": "model_docs/parameters_routing.html#local-inertial",
    "title": "Routing concepts",
    "section": "Local inertial",
    "text": "Local inertial\n\nRiver flow\n\nInput\n\n\n\n\n\n\n\n\n\nStandard Name\nDescription\nUnit\nDefault\n\n\n\n\nriver__length\nRiver length\nm\n-\n\n\nmodel_boundary_condition~river__length\nBoundary condition river length downstream river outlets\nm\n10 000\n\n\nriver__width\nRiver width\nm\n-\n\n\nmodel_boundary_condition~river_bank_water__depth\nBoundary condition bankfull depth downstream river outlets\nm\n0.0\n\n\nriver_bank_water__elevation\nBankfull elevation of the river\nm\n-\n\n\nriver_bank_water__depth\nBankfull depth of the river\nm\n-\n\n\nriver_water_flow__manning_n_parameter\nManning’s roughness\ns m\\(^{-\\frac{1}{3}}\\)\n0.0036\n\n\nriver_water_inflow~external__volume_flow_rate\nExternal inflow into the river (negative for abstractions)\nm³ s⁻¹\n-\n\n\n\n\n\nStates\n\n\n\n\n\n\n\n\nStandard Name\nDescription\nUnit\n\n\n\n\nriver_water__instantaneous_volume_flow_rate\nRiver discharge\nm³ s⁻¹\n\n\nriver_water__instantaneous_depth\nRiver water depth\nm\n\n\n\n\n\nOutput\n\n\n\n\n\n\n\n\nStandard Name\nDescription\nUnit\n\n\n\n\nriver_water__volume_flow_rate\nRiver (+ floodplain) discharge\nm³ s⁻¹\n\n\nriver_water__depth\nRiver water depth\nm\n\n\nriver_water__volume\nRiver water volume\nm³\n\n\nriver_water__instantaneous_volume\nRiver water volume\nm³\n\n\nriver_water_abstraction~external__volume_flow_rate\nActual abstraction based on external negative inflow\nm³ s⁻¹\n\n\n\n\n\n\n1D floodplain flow\n\nInput\n\n\n\n\n\n\n\n\n\nStandard Name\nDescription\nUnit\nDefault\n\n\n\n\nfloodplain_water__sum_of_volume-per-depth\nFloodplain profile (cumulative volume per flood depth)\nm³\n-\n\n\nfloodplain_water_flow__manning_n_parameter\nManning’s roughness\ns m\\(^{-\\frac{1}{3}}\\)\n0.072\n\n\n\n\n\nStates\n\n\n\n\n\n\n\n\nStandard Name\nDescription\nUnit\n\n\n\n\nfloodplain_water__instantaneous_volume_flow_rate\nFloodplain discharge\nm³ s⁻¹\n\n\nfloodplain_water__instantaneous_depth\nFloodplain water depth\nm\n\n\n\n\n\nOutput\n\n\n\nStandard Name\nDescription\nUnit\n\n\n\n\nfloodplain_water__volume\nFloodplain volume\nm³\n\n\nfloodplain_water__instantaneous_volume\nFloodplain volume\nm³\n\n\nfloodplain_water__volume_flow_rate\nFloodplain discharge\nm³ s⁻¹\n\n\n\n\n\n\nOverland flow\n\nInput\n\n\n\n\n\n\n\n\n\nStandard Name\nDescription\nUnit\nDefault\n\n\n\n\nland_surface_water_flow__manning_n_parameter\nManning’s roughness\ns m\\(^{-\\frac{1}{3}}\\)\n0.072\n\n\nland_surface_water_flow__ground_elevation\nElevation of each cell\nm\n-\n\n\n\n\n\nStates\n\n\n\n\n\n\n\n\nStandard Name\nDescription\nUnit\n\n\n\n\nland_surface_water__x_component_of_instantaneous_volume_flow_rate\nFlow in x direction\nm³ s⁻¹\n\n\nland_surface_water__y_component_of_instantaneous_volume_flow_rate\nFlow in y direction\nm³ s⁻¹\n\n\nland_surface_water__instantaneous_depth\nWater depth\nm\n\n\n\n\n\nOutput\n\n\n\n\n\n\n\n\nStandard Name\nDescription\nUnit\n\n\n\n\nland_surface_water__depth\nWater depth\nm\n\n\nland_surface_water__volume\nTotal surface water storage of cell (including river storage for river cells)\nm³\n\n\nland_surface_water__instantaneous_volume\nTotal surface water storage of cell (including river storage for river cells)\nm³",
    "crumbs": [
      "Model documentation",
      "Model parameters and variables",
      "Routing concepts"
    ]
  },
  {
    "objectID": "model_docs/parameters_routing.html#groundwater-flow",
    "href": "model_docs/parameters_routing.html#groundwater-flow",
    "title": "Routing concepts",
    "section": "Groundwater flow",
    "text": "Groundwater flow\n\nUnconfined aquifer\n\nInput\n\n\n\n\n\n\n\n\n\nStandard Name\nDescription\nUnit\nDefault\n\n\n\n\nland_surface__elevation\nLand surface elevation conductivity\nm\n-\n\n\nsubsurface_surface_water__horizontal_saturated_hydraulic_conductivity\nHorizontal conductivity\nm day⁻¹\n-\n\n\nsubsurface_water__specific_yield\nSpecific yield\nm m⁻¹\n-\n\n\nsubsurface__horizontal_saturated_hydraulic_conductivity_scale_parameter\nFactor controlling the reduction of horizontal conductivity with depth\n-\n-\n\n\n\n\n\nStates\n\n\n\nStandard Name\nDescription\nUnit\n\n\n\n\nsubsurface_water__hydraulic_head\nGroundwater head\nm\n\n\n\n\n\n\nRiver boundary\n\nInput\n\n\n\n\n\n\n\n\n\nStandard Name\nDescription\nUnit\nDefault\n\n\n\n\nriver_water__infiltration_conductance\nRiver bed infiltration conductance\nm² day⁻¹\n-\n\n\nriver_water__exfiltration_conductance\nRiver bed exfiltration conductance\nm² day⁻¹\n-\n\n\nriver_bottom__elevation\nRiver bottom elevation\nm\n-\n\n\nriver_water_inflow~external__volume_flow_rate\nExternal inflow into the river (negative for abstractions)\nm³ s⁻¹\n-\n\n\n\n\n\nOutput\n\n\n\n\n\n\n\n\nStandard Name\nDescription\nUnit\n\n\n\n\nriver_water~to-subsurface__volume_flow_rate\nExchange flux (river to aquifer)\nm³ day⁻¹\n\n\n\n\n\n\nDrainage boundary\n\nInput\n\n\n\nStandard Name\nDescription\nUnit\nDefault\n\n\n\n\nland_drain__elevation\nDrain elevation\nm\n-\n\n\nland_drain__conductance\nDrain conductance\nm² day⁻¹\n-\n\n\nland_drain_location__mask\nDrain location\n-\n-\n\n\n\n\n\nOutput\n\n\n\n\n\n\n\n\nStandard Name\nDescription\nUnit\n\n\n\n\nland_drain_water~to-subsurface__volume_flow_rate\nExchange flux (drain to aquifer)\nm³ day⁻¹\n\n\n\n\n\n\nRecharge boundary\n\nOutput\n\n\n\n\n\n\n\n\nStandard Name\nDescription\nUnit\n\n\n\n\nsubsurface_water_sat-zone_top__net_recharge_volume_flow_rate\nNet recharge flux\nm³ day⁻¹\n\n\n\n\n\n\nConstant head boundary\n\nInput\n\n\n\n\n\n\n\n\n\nStandard Name\nDescription\nUnit\nDefault\n\n\n\n\nmodel_boundary_condition~constant_hydraulic_head\nHead of the boundary\nm\n-",
    "crumbs": [
      "Model documentation",
      "Model parameters and variables",
      "Routing concepts"
    ]
  },
  {
    "objectID": "model_docs/parameters_routing.html#sediment",
    "href": "model_docs/parameters_routing.html#sediment",
    "title": "Routing concepts",
    "section": "Sediment",
    "text": "Sediment\n\nTransport capacity Overland flow\n\nInput\n\n\n\n\n\n\n\n\n\nStandard Name\nDescription\nUnit\nDefault\n\n\n\n\nsediment__particle_density\nParticle density\nkg m⁻³\n2650.0\n\n\nland_surface_sediment__median_diameter\nParticle median diameter\nmm\n0.1\n\n\nclay__mean_diameter\nClay mean diameter\nμm\n2.0\n\n\nsilt__mean_diameter\nSilt mean diameter\nμm\n10.0\n\n\nsand__mean_diameter\nSand mean diameter\nμm\n200.0\n\n\nsediment_aggregates~small__mean_diameter\nSmall aggregates mean diameter\nμm\n30.0\n\n\nsediment_aggregates~large__mean_diameter\nLarge aggregates mean diameter\nμm\n500.0\n\n\nland_surface_water_sediment__govers_transport_capacity_coefficient\nGovers transport capacity coefficient\n-\n0.000505\n\n\nland_surface_water_sediment__govers_transport_capacity_exponent\nGovers transport capacity exponent\n-\n4.27\n\n\n\n\n\n\nTransport capacity River\n\nInput\n\n\n\n\n\n\n\n\n\nStandard Name\nDescription\nUnit\nDefault\n\n\n\n\nriver_sediment__median_diameter\nParticle median diameter\nmm\n0.1\n\n\nriver_water_sediment__bagnold_transport_capacity_coefficient\nBagnold transport capacity coefficient\n-\n-\n\n\nriver_water_sediment__bagnold_transport_capacity_exponent\nBagnold transport capacity exponent\n-\n-\n\n\nriver_water_sediment__kodatie_transport_capacity_a-coefficient\nKodatie transport capacity coefficient a\n-\n-\n\n\nriver_water_sediment__kodatie_transport_capacity_b-coefficient\nKodatie transport capacity coefficient b\n-\n-\n\n\nriver_water_sediment__kodatie_transport_capacity_c-coefficient\nKodatie transport capacity coefficient c\n-\n-\n\n\nriver_water_sediment__kodatie_transport_capacity_d-coefficient\nKodatie transport capacity coefficient d\n-\n-\n\n\n\n\n\n\nOverland flow transport\n\nOutput\n\n\n\n\n\n\n\n\nStandard Name\nDescription\nUnit\n\n\n\n\nland_surface_water_sediment_transport_capacity__mass_flow_rate\nTotal sediment transport capacity\nton Δt⁻¹\n\n\nland_surface_water_clay_transport_capacity__mass_flow_rate\nClay transport capacity\nton Δt⁻¹\n\n\nland_surface_water_sediment~to-river__mass_flow_rate\nTotal sediment flux flowing into the river\nton Δt⁻¹\n\n\nland_surface_water_clay~to-river__mass_flow_rate\nClay flux flowing into the river\nton Δt⁻¹\n\n\nland_surface_water_silt~to-river__mass_flow_rate\nSilt flux flowing into the river\nton Δt⁻¹\n\n\nland_surface_water_sand~to-river__mass_flow_rate\nSand flux flowing into the river\nton Δt⁻¹\n\n\nland_surface_water_aggregates~small~to-river__mass_flow_rate\nSmall aggregates flux flowing into the river\nton Δt⁻¹\n\n\nland_surface_water_aggregates~large~to-river__mass_flow_rate\nLarge aggregates flux flowing into the river\nton Δt⁻¹\n\n\nland_surface_water_sediment__mass_flow_rate\nTotal sediment flux\nton Δt⁻¹\n\n\n\n\n\n\nRiver erosion\n\nInput\n\n\n\n\n\n\n\n\n\nStandard Name\nDescription\nUnit\nDefault\n\n\n\n\nriver_bottom-and-bank_sediment__median_diameter\nMedian diameter in the river bed/bank\nmm\n0.1\n\n\n\n\n\n\nRiver transport\n\nInput\n\n\n\n\n\n\n\n\n\nStandard Name\nDescription\nUnit\nDefault\n\n\n\n\nreservoir_surface__area\nReservoir surface area\nm²\n-\n\n\nlake_surface__area\nLake surface area\nm²\n-\n\n\nreservoir_water_sediment~bedload__trapping_efficiency\nReservoir sediment bedload trapping efficiency\n-\n1.0\n\n\nriver_bottom-and-bank_clay__mass_fraction\nRiver bed/bank content clay\n-\n0.15\n\n\nriver_bottom-and-bank_silt__mass_fraction\nRiver bed/bank content silt\n-\n0.65\n\n\nriver_bottom-and-bank_sand__mass_fraction\nRiver bed/bank content sand\n-\n0.15\n\n\nriver_bottom-and-bank_gravel__mass_fraction\nRiver bed/bank content gravel\n-\n0.05\n\n\nclay__mean_diameter\nClay mean diameter\nµm\n2.0\n\n\nsilt__mean_diameter\nSilt mean diameter\nµm\n10.0\n\n\nsand__mean_diameter\nSand mean diameter\nµm\n200.0\n\n\nsediment_aggregates~small__mean_diameter\nSmall aggregates mean diameter\nµm\n30.0\n\n\nsediment_aggregates~large__mean_diameter\nLarge aggregates mean diameter\nµm\n500.0\n\n\ngravel__mean_diameter\nGravel mean diameter\nµm\n2000.0\n\n\n\n\n\nStates\n\n\n\n\n\n\n\n\nStandard Name\nDescription\nUnit\n\n\n\n\nriver_bed_clay__mass\nClay stored on the river bed after deposition\nton\n\n\nriver_bed_silt__mass\nSilt stored on the river bed after deposition\nton\n\n\nriver_bed_sand__mass\nSand stored on the river bed after deposition\nton\n\n\nriver_bed_aggregates~small__mass\nSmall aggregates stored on the river bed after deposition\nton\n\n\nriver_bed_aggregates~large__mass\nLarge aggregates stored on the river bed after deposition\nton\n\n\nriver_bed_gravel__mass\nGravel stored on the river bed after deposition\nton\n\n\nriver_water_clay__mass\nClay left in cell\nton\n\n\nriver_water_silt__mass\nSilt left in cell\nton\n\n\nriver_water_sand__mass\nSand left in cell\nton\n\n\nriver_water_aggregates~small__mass\nSmall aggregates left in cell\nton\n\n\nriver_water_aggregates~large__mass\nLarge aggregates left in cell\nton\n\n\nriver_water_gravel__mass\nGravel left in cell\nton?\n\n\nriver_water_clay__mass_flow_rate\nSediment flux (clay)\nton Δt⁻¹\n\n\nriver_water_silt__mass_flow_rate\nSediment flux (silt)\nton Δt⁻¹\n\n\nriver_water_sand__mass_flow_rate\nSediment flux (sand)\nton Δt⁻¹\n\n\nriver_water_aggregates~small__mass_flow_rate\nSediment flux (small aggregates)\nton Δt⁻¹\n\n\nriver_water_aggregates~large__mass_flow_rate\nSediment flux (large aggregates)\nton Δt⁻¹\n\n\nriver_water_gravel__mass_flow_rate\nSediment flux (gravel)\nton Δt⁻¹\n\n\n\n\n\nOutput\n\n\n\n\n\n\n\n\nStandard Name\nDescription\nUnit\n\n\n\n\nriver_water_sediment~bedload__mass_concentration\nBed load sediment concentration in the river\ng m⁻³\n\n\nriver_water_sediment~suspended__mass_concentration\nSuspended sediemnt concentration in the river\ng m⁻³\n\n\nriver_water_sediment__mass_concentration\nTotal sediment concentration in the river\ng m⁻³\n\n\nriver_water_sediment_erosion__mass\nTotal sediment erosion (from store + direct river bed/bank)\nton Δt⁻¹\n\n\nriver_water_sediment_deposition__mass\nTotal sediment deposition\nton Δt⁻¹",
    "crumbs": [
      "Model documentation",
      "Model parameters and variables",
      "Routing concepts"
    ]
  },
  {
    "objectID": "model_docs/parameters_intro.html",
    "href": "model_docs/parameters_intro.html",
    "title": "Introduction",
    "section": "",
    "text": "This section provides an overview of all model parameters, states and variables in tables that can be exchanged (input and output) with standard names (subsection below) for:\nThese tables include standard names, descriptions, units and default values (input parameters) for model parameters, states and variables. Note that a state variable can also be specified as a model output variable but is listed only in the states table and not in in the output table. The time unit of input flux parameters is day (the model base time step size), hence default values for these parameters are expressed per day. During model initialization these input parameters are converted to the user-defined model time step size Δt.",
    "crumbs": [
      "Model documentation",
      "Model parameters and variables",
      "Introduction"
    ]
  },
  {
    "objectID": "model_docs/parameters_intro.html#standard-names",
    "href": "model_docs/parameters_intro.html#standard-names",
    "title": "Introduction",
    "section": "Standard names",
    "text": "Standard names\nThe standard names of model parameters, states and variables are based on CSDMS Standard Names. These standard names are used in the TOML configuration file and mapped to internal model parameters, states and variables. Model output of model parameters ([output] section of TOML file) is not possible by providing standard names as these are only used for setting model parameters during model initialization, except for parameters that can also have cyclic input. These parameters are listed in tables below “Input static and cyclic” subsections (for example). To output model parameters and variables without a standard name one to one mapping (dot notation) can be used in the TOML configuration file, but this is not considered as part of the public API, e.g.:\n[output.netcdf_grid.variables]\nland.interception.variables.canopy_storage = \"canopystorage\"\nStandard names that contain instantaneous in the quantity part of the standard name can be valid for an internal time step (for example for kinematic wave routing an internal time step is optional (and recommended), with a time step equal to the model simulation time step the standard name nonetheless contains instantaneous) and thus considered instantaneous compared to the model simulation time step Δt \\(\\SIb{}{s}\\). Standard names can contain a tilde that are used to distinguish nouns and adjectives in the object part of the standard name. These standard names should be quoted in the TOML configuration file, e.g.:\n[input.static]\n\"soil~compacted__area_fraction\".value = 0.2",
    "crumbs": [
      "Model documentation",
      "Model parameters and variables",
      "Introduction"
    ]
  },
  {
    "objectID": "model_docs/parameters_intro.html#input-generic",
    "href": "model_docs/parameters_intro.html#input-generic",
    "title": "Introduction",
    "section": "Generic input maps",
    "text": "Generic input maps\nThe table below lists static input maps that are not directly part of wflow models and are required to run wflow.\n\n\n\nStandard Name\nDescription\nUnit\nDefault value\n\n\n\n\nbasin__local_drain_direction\nLocal drain direction (1-9)\n-\n-\n\n\nsubbasin_location__count\nSubbasin ids\n-\n-\n\n\nriver_location__mask\nRiver mask (0-1)\n-\n-\n\n\n\nFor lake and reservoir generic input see lake-input and reservoir-input, respectively.",
    "crumbs": [
      "Model documentation",
      "Model parameters and variables",
      "Introduction"
    ]
  },
  {
    "objectID": "model_docs/model_configurations.html",
    "href": "model_docs/model_configurations.html",
    "title": "Model configurations",
    "section": "",
    "text": "There are several model configurations supported by wflow. These model configurations require slightly different input requirements, yet the general structure is similar for each model. A wflow model configuration consists of a Land hydrology SBM model in combination with routing concepts that control how water is routed for example over the land or river domain. For the wflow_sbm model different model configurations are possible. The following model configurations are supported in wflow:\nBelow, some explanation will be given on how to prepare a basic wflow_sbm model. Example data for other model configurations is provided in the section with sample data.",
    "crumbs": [
      "Model documentation",
      "Model configurations"
    ]
  },
  {
    "objectID": "model_docs/model_configurations.html#wflow_sbm",
    "href": "model_docs/model_configurations.html#wflow_sbm",
    "title": "Model configurations",
    "section": "wflow_sbm",
    "text": "wflow_sbm\nWflow_sbm represents hydrological models derived from the CQflow model (Köhler et al., 2006) that have the Land Hydrology SBM model concept in common, but can have different routing concepts that control how water is routed for example over the land or river domain. The soil model of the Land Hydrology SBM model is largely based on the Topog_SBM model but has had considerable changes over time. Topog_SBM is specifically designed to simulate fast runoff processes in small catchments while the wflow_sbm model can be applied more widely.\nTopog_SBM uses an element network based on contour lines and trajectories for water routing. Wflow_sbm models differ in how the routing components river, land, and subsurface are solved. More details and the differences with the Topog_SBM model can be found here. Below the different wflow_sbm model configurations are described, according to the used routing approach.\n\nKinematic wave\nWater is routed over a D8 network, and the kinematic wave approach is used for river, overland and lateral subsurface flow. This is described in more detail in the section Kinematic wave.\nAn overview of the different processes and fluxes in the wflow_sbm model with the kinematic wave approach for river, overland and lateral subsurface flow:\n\n\n\nConceptual overview of the wflow_sbm model\n\n\n\n\nGroundwater flow\nFor river and overland flow the kinematic wave approach over a D8 network is used for this wflow_sbm model. For the subsurface domain, an unconfined aquifer with groundwater flow in four directions (adjacent cells) is used. This is described in more detail in the section Groundwater flow.\n[model]\ntype = \"sbm_gwf\"\n\n\nLocal inertial river\nBy default the model types sbm and sbm_gwf use the kinematic wave approach for river flow. There is also the option to use the local inertial model for river flow with an optional 1D floodplain schematization (routing is done separately for the river channel and floodplain), by providing the following in the TOML file:\n[model]\nriver_routing = \"local-inertial\"    # optional, default is \"kinematic-wave\"\nfloodplain_1d__flag = true                # optional, default is false\n\n\nLocal inertial river (1D) and land (2D)\nBy default the model types sbm and sbm_gwf use the kinematic wave approach for river and overland flow. There is also the option to use the local inertial model for 1D river and 2D overland flow, by providing the following in the TOML file:\n[model]\nriver_routing = \"local-inertial\"\nland_routing = \"local-inertial\"\nThe local inertial approach is described in more detail in the section Local inertial model.",
    "crumbs": [
      "Model documentation",
      "Model configurations"
    ]
  },
  {
    "objectID": "model_docs/model_configurations.html#wflow_sediment",
    "href": "model_docs/model_configurations.html#wflow_sediment",
    "title": "Model configurations",
    "section": "wflow_sediment",
    "text": "wflow_sediment\nThe processes and fate of many particles and pollutants impacting water quality at the basin level are intricately linked to the processes governing sediment dynamics. Both nutrients such as phosphorus, carbon or other pollutants such as metals are influenced by sediment properties in processes such as mobilization, flocculation or deposition. To better assert and model water quality in inland systems, a better comprehension and modelling of sediment sources and fate in the river is needed at a spatial and time scale relevant to such issues.\nThe wflow_sediment model was developed to answer such issues. It is a distributed physics-based model, based on the distributed hydrologic wflow_sbm model. It is able to simulate both land and in-stream processes, and relies on available global datasets, parameter estimation and small calibration effort.\nIn order to model the exports of terrestrial sediment to the coast through the Land Ocean Aquatic Continuum or LOAC (inland waters network such as streams, lakes…), two different modelling parts were considered. The first part, called the inland sediment model, is the modelling and estimation of soil loss and sediment yield to the river system by land erosion, separated into vertical Soil Erosion processes and lateral Sediment Flux in overland flow. The second part, called the River Sediment Model is the transport and processes of the sediment in the river system. The two parts together constitute the wflow_sediment model.\nOverview of the concepts of the wflow_sediment model: \n\nConfiguration\nAs sediment generation and transport processes are linked to the hydrology and water flows, the inputs to the wflow_sediment model come directly from a hydrological model. The required dynamic inputs to run wflow_sediment are:\n\nPrecipitation (can also come from the hydrological forcing data),\nLand runoff (overland flow) from the kinematic wave,\nRiver runoff from the kinematic wave,\nLand water level in the kinematic wave,\nRiver water level in the kinematic wave,\nRainfall interception by the vegetation.\n\nThese inputs can be obtained from wflow_sbm or from other sources.\nModel outputs can be saved for both the inland and the instream part of the model. Some examples are listed below.\n[output.netcdf_grid.variables]\n# # Total soil erosion rate [ton/t] from rainfall (splash)\n\"soil_erosion~rainfall__mass_flow_rate\" = \"rainfall_erosion\"\n# Soil erosion rate by overland flow [ton/t]\n\"soil_erosion~overland_flow__mass_flow_rate\" = \"overland_flow_erosion\"\n# Total soil loss rate [ton/t]\nsoil_erosion__mass_flow_rate = \"soilloss\"\n# Total transport capacity of overland flow [ton/t]\nland_surface_water_sediment_transport_capacity__mass_flow_rate = \"TCsed\"\n\n# Total sediment flux in overland flow [ton/t]\nland_surface_water_sediment__mass_flow_rate = \"olsed\"\n# Total (or per particle class) sediment yield to the river [ton/t]\n\"land_surface_water_sediment~to-river__mass_flow_rate\" = \"inlandsed\"\n\"land_surface_water_clay~to-river__mass_flow_rate\" = \"inlandclay\"\n\n# Total sediment concentration in the river (suspended + bed load) [kg/m3]\nriver_water_sediment__mass_concentration = \"Sedconc\"\n# Suspended load [kg/m3]\n\"river_water_sediment~suspended__mass_concentration\" = \"SSconc\"\n# Bed load [kg/m3]\n\"river_water_sediment~bedload__mass_concentration\" = \"Bedconc\"",
    "crumbs": [
      "Model documentation",
      "Model configurations"
    ]
  },
  {
    "objectID": "model_docs/model_configurations.html#references",
    "href": "model_docs/model_configurations.html#references",
    "title": "Model configurations",
    "section": "References",
    "text": "References\n\nKöhler, L., Mulligan, M., Schellekens, J., Schmid, S., Tobón, C., 2006, Hydrological impacts of converting tropical montane cloud forest to pasture, with initial reference to northern Costa Rica. Final Technical Report DFID‐FRP Project No. R799.",
    "crumbs": [
      "Model documentation",
      "Model configurations"
    ]
  },
  {
    "objectID": "model_docs/land/landhydrology_sbm.html",
    "href": "model_docs/land/landhydrology_sbm.html",
    "title": "Land Hydrology SBM",
    "section": "",
    "text": "The Land Hydrology SBM model is largely based on Topog_SBM (Vertessy and Elsenbeer, 1999), which considers the soil to be a “bucket” with a saturated and unsaturated store. The main differences between the Land Hydrology SBM model and Topog_SBM are as follows:\n\nthe addition of evapotranspiration and interception losses;\nthe addition of a root water uptake reduction function (Feddes et al., 1978);\nthe addition of a capillary rise;\nthe addition of glacier, snow build-up and melting processes;\nthe addition to divide the soil column into different layers to allow for transfer of water within the unsaturated zone;\nthe addition of water demand and allocation computations.\n\nThe Land Hydrology SBM model contains besides a SBM soil model (including evapotranspiration), models for interception, snow, glacier , water demand and allocation. The sections below describe the working of the Land Hydrology SBM model in more detail.",
    "crumbs": [
      "Model documentation",
      "Land models",
      "Land Hydrology SBM"
    ]
  },
  {
    "objectID": "model_docs/land/landhydrology_sbm.html#introduction",
    "href": "model_docs/land/landhydrology_sbm.html#introduction",
    "title": "Land Hydrology SBM",
    "section": "",
    "text": "The Land Hydrology SBM model is largely based on Topog_SBM (Vertessy and Elsenbeer, 1999), which considers the soil to be a “bucket” with a saturated and unsaturated store. The main differences between the Land Hydrology SBM model and Topog_SBM are as follows:\n\nthe addition of evapotranspiration and interception losses;\nthe addition of a root water uptake reduction function (Feddes et al., 1978);\nthe addition of a capillary rise;\nthe addition of glacier, snow build-up and melting processes;\nthe addition to divide the soil column into different layers to allow for transfer of water within the unsaturated zone;\nthe addition of water demand and allocation computations.\n\nThe Land Hydrology SBM model contains besides a SBM soil model (including evapotranspiration), models for interception, snow, glacier , water demand and allocation. The sections below describe the working of the Land Hydrology SBM model in more detail.",
    "crumbs": [
      "Model documentation",
      "Land models",
      "Land Hydrology SBM"
    ]
  },
  {
    "objectID": "model_docs/land/landhydrology_sbm.html#rainfall-interception",
    "href": "model_docs/land/landhydrology_sbm.html#rainfall-interception",
    "title": "Land Hydrology SBM",
    "section": "Rainfall interception",
    "text": "Rainfall interception\nTwo different interception models are available: the Gash model, and the modified Rutter model. The simulation timestep defines which interception model is used, where daily (or larger) timesteps use the Gash model, and timesteps smaller than daily use the modified Rutter model.\n\nThe Gash model\nThe Gash interception model (Gash, 1979) can to be applied on a daily basis, although a storm-based approach will yield better results in situations with more than one storm per day. The amount of water needed to completely saturate the canopy is defined as:\n\\[\n    P'=\\frac{-\\overline{R}S}{\\overline{E}_{w}}\\log\\left[1-\\frac{\\overline{E}_{w}}{\\overline{R}}(1-p-p_{t})^{-1}\\right],\n\\]\nwhere \\(\\overline{R}\\) is the average precipitation intensity on a saturated canopy and \\(\\overline{E}_{w}\\) the average evaporation from the wet canopy and with the vegetation parameters \\(S\\), \\(p\\) and \\(p_t\\) as defined previously. The model uses a series of expressions to calculate the interception loss during different phases of a storm. An analytical integration of the total evaporation and rainfall under saturated canopy conditions is performed for each storm to determine average values of \\(\\overline{E}_{w}\\) and \\(\\overline{R}\\). The total evaporation from the canopy (the total interception loss) is calculated as the sum of the components listed in the table below. Interception losses from the stems are calculated for days with \\(P\\geq S_{t}/p_{t}\\). \\(p_t\\) and \\(S_t\\) are small and neglected.\n\nFormulation of the components of interception loss according to Gash:\n\n\n\n\n\n\nComponents\nInterception loss\n\n\n\n\nFor \\(m\\) small storms (\\(P_{g}&lt;{P'}_{g}\\))\n\\((1-p-p_{t})\\sum_{j=1}^{m}P_{g,j}\\)\n\n\nWetting up the canopy in \\(n\\) large storms (\\(P_{g}\\geq{P'}_{g}\\))\n\\(n(1-p-p_{t}){P'}_{g}-nS\\)\n\n\nEvaporation from saturated canopy during rainfall\n\\(\\overline{E}/\\overline{R}\\sum_{j=1}^{n}(P_{g,j}-{P'}_{g})\\)\n\n\nEvaporation after rainfall ceases for \\(n\\) large storms\n\\(nS\\)\n\n\nEvaporation from trunks in \\(q\\) storms that fill the trunk storage\n\\(qS_{t}\\)\n\n\nEvaporation from trunks in \\(m+n-q\\) storms that do not fill the trunk storage\n\\(p_{t}\\sum_{j=1}^{m+n-q}P_{g,j}\\)\n\n\n\nSaturated conditions are assumed to occur when the hourly rainfall exceeds a certain threshold. Often a threshold of \\(\\SI{0.5}{mm\\ h^{-1}}\\) is used. \\(\\overline{R}\\) is calculated for all hours when the rainfall exceeds the threshold to give an estimate of the mean rainfall rate onto a saturated canopy.\nGash (1979) has shown that in a regression of interception loss on rainfall (on a storm basis) the regression coefficient should equal to \\(\\overline{E}_w/\\overline{R}\\). Assuming that neither \\(\\overline{E}_w\\) nor \\(\\overline{R}\\) vary considerably in time, \\(\\overline{E}_w\\) can be estimated in this way from \\(\\overline{R}\\) in the absence of above-canopy climatic observations. Values derived in this way generally tend to be (much) higher than those calculated with the penman-monteith equation.\n\n\nThe modified rutter model\nFor sub daily timesteps the interception is calculated using a simplification of the Rutter model. The simplified model is solved explicitly and does not take drainage from the canopy into account. The stemflow fraction is defined as a fixed fraction (0.1) of canopy gap fraction \\(\\SIb{f_\\mathrm{canopygap}}{-}\\) limited by the canopy fraction \\((1-f_\\mathrm{canopygap})\\) and the amount of stemflow is taken as the stemflow fraction of precipitation. Throughfall equals to the amount of water that cannot be stored by the canopy, plus the rainfall that is not captured by the canopy. Water can evaporate from the canopy storage, taken as the minimum between potential evaporation and the current storage. The “left-over” potential evaporation (if any) is returned as output.\n\n\nInterception parameters from LAI\nThe SBM concept can determine the interception parameters from leaf area index (\\(\\SIb{\\mathrm{LAI}}{m^2 m^{-2}}\\)) climatology. In order to switch this on you must define this cyclic parameter in the TOML file, the parameter is read from path_static, as follows:\n[input]\npath_forcing = \"forcing-moselle.nc\"\npath_static = \"staticmaps-moselle.nc\"\n\n[input.cyclic]\nvegetation__leaf-area_index = \"LAI\"\nFurthermore, these additional parameters are required:\n\nSpecific leaf storage (\\(\\SIb{S_\\mathrm{leaf}}{mm}\\))\nStorage woody part of vegetation (\\(\\SIb{S_\\mathrm{wood, max}}{mm}\\))\nExtinction coefficient (\\(\\SIb{k}{-}\\))\n\nHere it is assumed that the canopy storage capacity for the leaves \\(\\SIb{S_\\mathrm{leaf, max}}{mm}\\) relates linearly with \\(\\mathrm{LAI}\\) (c.f. Van Dijk and Bruijnzeel 2001). This is done via the specific leaf storage \\(S_\\mathrm{leaf}\\), a parameter that can be determined through a lookup table with land cover based on literature (Pitman 1989, Lui 1998). Next \\(S_\\mathrm{leaf, max}\\) is determined using:\n\\[\n    S_\\mathrm{leaf, max}  = S_\\mathrm{leaf}\\ \\mathrm{LAI}.\n\\]\nTo get to total storage \\(\\SIb{S_\\mathrm{canopy, max}}{mm}\\) the woody part of the vegetation also needs to be added. As for \\(S_\\mathrm{leaf}\\), the storage of the woody part \\(S_\\mathrm{wood, max}\\) can also be related to land cover (lookup table).\nThe canopy gap fraction \\(\\SIb{f_\\mathrm{canopygap}}{-}\\) is determined using the extinction coefficient \\(k\\) (van Dijk and Bruijnzeel 2001):\n\\[\n    f_\\mathrm{canopygap} = \\exp(-k\\ \\mathrm{LAI}).\n\\]\nThe extinction coefficient \\(k\\) can be related to land cover.",
    "crumbs": [
      "Model documentation",
      "Land models",
      "Land Hydrology SBM"
    ]
  },
  {
    "objectID": "model_docs/land/landhydrology_sbm.html#snow-and-glaciers",
    "href": "model_docs/land/landhydrology_sbm.html#snow-and-glaciers",
    "title": "Land Hydrology SBM",
    "section": "Snow and glaciers",
    "text": "Snow and glaciers\nBoth options can be enabled by specifying the following in the TOML file:\n[model]\nsnow__flag = true\nglacier__flag = true\n\nSnow modelling\nSnow processes are adopted from the HBV-96 hydrological model concept (Bergström, 1992). If the air temperature, \\(T_\\mathrm{air}\\), is below a user-defined threshold \\(s_\\mathrm{fall, T threshold}\\) \\(\\SIb{}{\\degree C}\\) effective precipitation (throughfall and stemflow) occurs as snowfall, whereas it occurs as rainfall if \\(T_\\mathrm{air} ≥ s_\\mathrm{fall, T threshold}\\). Another parameter \\(s_\\mathrm{fall, T interval}\\) \\(\\SIb{}{\\degree C}\\) defines how precipitation can occur partly as rain or snowfall.\n\n\nCode\nusing CairoMakie\nusing MakieExtra\n\nlet\n  # Define colors\n  crain = \"#1f78b4\"\n  csnow = \"#a6cee3\"\n  cttint = \"#b3b3b3\"\n  cread = \"#e31a1c\"\n\n  # Create figure\n  set_theme!()\n  fig = Figure(size=(500,400))\n  ax = Axis(\n      fig[1, 1];\n      xgridvisible = false,\n      ygridvisible = false,\n      xlabel = \"Temperature [°C]\",\n      ylabel = \"Precipitation division [%]\",\n  )\n\n  # Plot lines\n  lines!(ax, [-0.25, 0, 1, 1.25], [0, 0, 100, 100]; color = crain)\n  lines!(ax, [-0.25, 0, 1, 1.25], [100, 100, 0, 0]; color = csnow)\n\n  # Add legend text\n  text!(ax, \"Rain\"; position = (-0.125, 1), color = crain, align = (:center, :bottom))\n  text!(ax, \"Snow\"; position = (1.125, 1), color = csnow, align = (:center, :bottom))\n\n  # Format axes\n  ax.xticks = ([0, 0.5, 1], [\"\", \"tt\", \"\"])\n  xlims!(ax, -0.25, 1.25)\n  ylims!(ax, -3, 103)\n\n  # Add arrow and text indicating ttint\n  vlines!(ax, [0, 1]; color = cttint, linestyle = :dash)\n  text!(ax, \"tti\"; position = (0.5, 99), color = cttint, align = (:center, :top))\n  arrowlines!(ax, Point2f(0.05, 0.95), Point2f(100, 100); color = cttint, arrowstyle = \"&lt;|-|&gt;\")\n\n  # Add lines showing how to read graph\n  lines!(ax, [0.2, 0.2, -0.25], [-3, 20, 20]; color = cread, linestyle = :dash)\n  lines!(ax, [0.2, 0.2, -0.25], [20, 80, 80]; color = cread, linestyle = :dash)\n\n  text!(ax, \"20% rain\"; position = (-0.05, 20), color = cread, align = (:center, :bottom))\n  text!(ax, \"80% snow\"; position = (-0.05, 80), color = cread, align = (:center, :bottom))\n\n  text!(\n      fig.scene,\n      Point2f(0.385, 0.09);\n      text = \"T\",\n      space = :relative,\n      color = cread,\n      align = (:center, :bottom),\n  )\n\n  # Display figure\n  fig\nend\n\n\n\nDivision between snow and precipitation based on the threshold temperature\n\n\nIf precipitation occurs as snowfall, it is added to the dry snow component within the snow pack. Otherwise it ends up in the free water reservoir, which represents the liquid water content of the snow pack. Between the two components of the snow pack, interactions take place, either through snow melt (if temperatures are above a threshold \\(\\SIb{s_\\mathrm{melt, T threshold}}{\\degree C}\\)) or through snow refreezing (if temperatures are below threshold \\(s_\\mathrm{melt, T threshold}\\)).\nThe potential snowmelt rate \\(\\SIb{M_\\mathrm{snow, pot}}{mm\\ t^{-1}}\\), using the degree-day factor \\(\\SIb{s_\\mathrm{ddf}}{mm\\ \\degree C^{-1}\\ t^{-1}}\\), is calculated as follows:\n\\[\n  M_\\mathrm{snow, pot}=\\begin{cases}\n    s_\\mathrm{ddf} (T_\\mathrm{air}-s_\\mathrm{melt, T threshold}) & \\text{if $T_\\mathrm{air}&gt;s_\\mathrm{melt, T threshold}$}\\\\\n    0 & \\text{otherwise}.\n  \\end{cases}\n\\]\nThe actual snowmelt rate is limited by the snow storage.\nThe snowpack retains water that can refreeze if \\(T^{t}_\\mathrm{air}\\) is below \\(s_\\mathrm{melt, T threshold}\\). The potential refreezing rate \\(\\SIb{M_\\mathrm{refreeze, pot}}{mm\\ t^{-1}}\\), is controlled by \\(s_\\mathrm{ddf}\\), a coefficient of refreezing \\(\\SIb{s_\\mathrm{refreeze}}{-}\\) (fixed: 0.05), \\(T^{t}_\\mathrm{air}\\) and \\(s_\\mathrm{melt, T threshold}\\) as follows:\n\\[\nM_\\mathrm{refreeze, pot}=\\begin{cases}\n    s_\\mathrm{ddf} s_\\mathrm{refreeze} (s_\\mathrm{melt, T threshold}-T^{t}_\\mathrm{air}) & \\text{if $T^{t}_\\mathrm{air}&lt;s_\\mathrm{melt, T threshold}$}\\\\\n    0 & \\text{otherwise}.\n  \\end{cases}\n\\]\nThe actual refreezing rate is limited by the liquid water content of snow.\nThe fraction of liquid water in the snow pack is at most equal to a user defined fraction, \\(\\SIb{s_\\mathrm{whc}}{-}\\), of the water equivalent of the dry snow content \\(\\SIb{\\subtext{S}{snow}}{mm}\\). If the liquid water content exceeds \\(s_\\mathrm{whc}\\), either through snow melt or incoming effective precipitation, snow runoff \\(\\SIb{\\subtext{R}{snow}}{mm\\ t^{-1}}\\) becomes available for infiltration into the soil:\n\\[\n\\subtext{R}{snow} = \\mathrm{max}(S_\\mathrm{snow, liquid} - S_\\mathrm{snow} s_\\mathrm{whc}, 0).\n\\]\n\n\nCode\nusing CairoMakie\n\nlet\n  # Define colors\n  crain = \"#1f78b4\"\n  csnow = \"#a6cee3\"\n  cttint = \"#b3b3b3\"\n  cread = \"#e31a1c\"\n\n  cfmax = 3.0\n  ttm = 0\n  cfr = 0.1\n\n  # Create figure\n  set_theme!()\n  fig = Figure(size=(500, 400))\n  ax = Axis(\n      fig[1, 1];\n      xlabel = \"Temperature\",\n      ylabel = \"Potential melt/refreezing [mm Δt⁻¹]\",\n      xticks = ([-2, -1, 0, 1, 2], [\"ttm−2°C\", \"ttm−1°C\", \"ttm\", \"ttm+1°C\", \"ttm+2°C\"]),\n      xgridvisible = false,\n      ygridvisible = false,\n  )\n\n  # Convert temperature to an array for element-wise operations\n  temperature = collect(-2:0.5:2)\n\n  # Calculate melt and refreezing rates\n  melt = cfmax .* (temperature .- ttm)\n  refr = cfmax .* cfr .* (ttm .- temperature)\n  melt[temperature .&lt; ttm] .= 0\n  refr[temperature .&gt; ttm] .= 0\n\n  # Plot lines\n  lines!(ax, temperature, melt; color = crain)\n  lines!(ax, temperature, refr; color = csnow)\n\n  # Add legend text\n  text!(\n      ax,\n      \"Snowmelt rate\";\n      position = (1, melt[findfirst(x -&gt; x == 1, temperature)] + 0.3),\n      color = crain,\n      align = (:center, :center),\n      rotation = 1.0,\n  )\n  text!(\n      ax,\n      \"Refreezing rate\";\n      position = (1, refr[findfirst(x -&gt; x == 1, temperature)]),\n      color = csnow,\n      align = (:center, :bottom),\n  )\n\n  # Add vertical line for ttm\n  vlines!(ax, [ttm]; color = cttint, linestyle = :dash)\n\n  # Set axis limits\n  xlims!(ax, -2, 1.75)\n  ylims!(ax, -0.2, 5)\n\n  # Display figure\n  fig\nend\n\n\n\nSnowmelt and refreezing rates as a function of temperature (for set melting and refreezing factors)\n\n\n\n\nGlacier modelling\nGlacier processes can be modelled if the snow model is enabled. Glacier modelling is very similar to snow modelling and considers two main processes: glacier build-up from snow turning into firn/ice (using the HBV-light model) and glacier melt (using a temperature degree-day model).\nThe definition of glacier boundaries and initial volume is defined by two parameters. The parameter \\(\\SIb{\\subtext{f}{glacier}}{-}\\) gives the fraction of each grid cell covered by a glacier as a number between zero and one. The state parameter glacier store \\(\\SIb{\\subtext{S}{glacier}}{mm}\\) gives the amount of water (water equivalent) within the glaciers at each grid cell. A map with \\(\\subtext{S}{glacier}\\) values can be provided as an initial state (default: \\(\\SI{5500}{mm}\\)) when the model is initialized with default values in the code (“cold” start). The required glacier data can be prepared from available glacier datasets.\nFirst, a fixed fraction \\(\\SIb{\\subtext{g}{snow\\ to\\ ice}}{t^{-1}}\\), that typically ranges between \\(0.001\\) and \\(0.006\\) for a daily time step, of snow storage \\(\\SIb{S_\\mathrm{snow}}{mm}\\) on top of the glacier is converted into ice for each time step \\(t\\) of length \\(\\Delta{t}\\) [s]:\n\\[\nS_\\mathrm{snow\\ to\\ ice} = \\mathrm{min}(g_\\mathrm{snow\\ to\\ ice} S_\\mathrm{snow}, 8 \\frac{\\Delta{t}}{\\Delta{t_b}}),\n\\]\nwhere \\(\\SIb{S_\\mathrm{snow\\ to\\ ice}}{mm\\ t^{-1}}\\) is the snow into ice conversion rate, with a maximum conversion rate of \\(\\SI{8}{mm\\ d^{-1}}\\). This maximum conversion rate is scaled by \\(\\Delta{t}\\), and the model base time step size \\(\\Delta{t_b}\\) of \\(\\SIb{86,400}{s}\\).\nThe snow storage from the snow module \\(\\SIb{\\subtext{S}{snow}}{mm}\\) is then updated as follows:\n\\[\nS_\\mathrm{snow} = S_\\mathrm{snow} - S_\\mathrm{snow\\ to\\ ice}  f_\\mathrm{glacier}.\n\\]\nWhen the snowpack on top of the glacier is almost all melted (\\(S_\\mathrm{snow} &lt; \\SI{10}{mm}\\)), glacier melt is enabled and estimated with a degree-day model. If the air temperature \\(T_\\mathrm{air}\\) is above a melting temperature threshold \\(\\SIb{g_\\mathrm{melt,T threshold}}{\\degree C}\\), glacier melt occurs. The potential glacier melt \\(\\SIb{M_\\mathrm{glacier, pot}}{mm\\ t^{-1}}\\), using the degree-day factor \\(\\SIb{g_\\mathrm{ddf}}{mm\\ t^{-1}\\ \\degree C^{-1}}\\), is calculated as: \\[\n  M_\\mathrm{glacier, pot}=\\begin{cases}\n    g_\\mathrm{ddf} (T_\\mathrm{air}-g_\\mathrm{melt, T threshold}) & \\text{if $T_\\mathrm{air} &gt; g_\\mathrm{melt, T threshold}$}\\\\\n    0 & \\text{otherwise} .\\\\\n  \\end{cases}\n\\]\nThe actual glacier melt is limited by the glacier storage. Parameter \\(g_\\mathrm{melt, T threshold}\\) can be taken as equal to the snow \\(s_\\mathrm{melt, T threshold}\\) parameter. Values of the melting factor \\(g_\\mathrm{ddf}\\) normally varies from one glacier to another and some values are reported in the literature. \\(g_\\mathrm{ddf}\\) can also be estimated by multiplying snow \\(s_\\mathrm{ddf}\\) by a factor between \\(1\\) and \\(2\\), to take into account the higher albedo of ice compared to snow.",
    "crumbs": [
      "Model documentation",
      "Land models",
      "Land Hydrology SBM"
    ]
  },
  {
    "objectID": "model_docs/land/landhydrology_sbm.html#evaporation",
    "href": "model_docs/land/landhydrology_sbm.html#evaporation",
    "title": "Land Hydrology SBM",
    "section": "Evaporation",
    "text": "Evaporation\nThe Land Hydrology SBM model assumes the input to be potential reference evapotranspiration. A crop coefficient (set to \\(1\\) by default) is used to convert the potential evapotranspiration rate of a reference crop fully covering the soil to the potential evapotranspiration rate of vegetation (natural and agricultural) fully covering the soil. The crop coefficient is used for a surface completely covered by vegetation, and does not include the effect of growing stages of vegetation and soil cover. These effects are handled separately through the use of the canopy gap fraction.\nIt is assumed that the potential evaporation rate of intercepted water by vegetation is equal to the potential evapotranspiration rate of vegetation (fully covering the soil) multiplied by the canopy fraction. The potential evapotranspiration rate left over after interception is available for transpiration. For potential open water evaporation (river and water bodies) the potential reference evapotranspiration rate is used (multipled by the river fraction, and open water fraction). Also for potential soil evaporation the potential reference evapotranspiration rate is used, multiplied by the canopy gap fraction corrected by the sum of total water fraction (river fraction and open water fraction) and the fraction covered by a glacier.\n\nBare soil evaporation\nThe fraction of bare soil is assumed to be equal to the fraction not covered by the canopy gap fraction corrected by the total water fraction and glacier fraction. Bare soil evaporation is only provided from the upper soil layer, and soil evaporation is split in evaporation from the unsaturated store and evaporation from the saturated store. Water is first evaporated from the unsaturated store. The remaining potential soil evaporation can be used for evaporation from the saturated store, but only when the water table is present in the upper soil layer. Both the evaporation from the unsaturated store and the evaporation from the saturated store are limited by the minimum of the remaining potential soil evaporation and the available water in the unsaturated/saturated zone of the upper soil layer. The evaporation (both unsaturated and saturated) decreases linearly with decreasing water availability, as indicated by the figure below.\n\n\nCode\nusing CairoMakie\n\nlet\n  # Define colors\n  cevap = \"#ff7f00\"\n\n  # Create figure\n  fig = Figure(size=(500,300))\n  ax = Axis(\n      fig[1, 1];\n      xlabel = \"Soil moisture (θ) [-]\",\n      ylabel = \"Ratio AET/PET [-]\",\n      xticks = ([0, 1], [\"θ_empty\", \"θ_sat   \"]),\n      yticks = [0, 1],\n      xgridvisible = false,\n      ygridvisible = false,\n  )\n\n  # Plot lines\n  lines!(ax, [0, 1], [0, 1]; color = cevap)\n  lines!(ax, [0, 1], [1, 1]; color = cevap, linestyle = :dash)\n\n  # Add labels\n  text!(\n      ax,\n      \"Potential evaporation\";\n      position = (0.01, 0.99),\n      color = cevap,\n      align = (:left, :top),\n  )\n  text!(\n      ax,\n      \"Actual evaporation\";\n      position = (0.02, 0.05),\n      color = cevap,\n      align = (:left, :bottom),\n      rotation = 0.4,\n  )\n\n  # Set axis limits\n  xlims!(ax, 0, 1)\n  ylims!(ax, -0.1, 1.1)\n\n  # Display the figure\n  fig\nend\n\n\n\nEvaporation reduction as function of available soil moisture\n\n\n\n\nTranspiration\nThe maximum possible root water extraction rate for each unsaturated soil layer is determined by partitioning the potential transpiration rate \\(T_p\\) based on the fraction of the total root length density in each unsaturated soil layer. The fractions of the total root length density in each unsaturated soil layer are scaled by the inverse of the sum of these fractions. Transpiration can then be fully satisfied from the unsaturated zone first, independent of the water table that can intersect the root zone. Root water extraction is limited by available soil water in each unsaturated soil layer that is a function of rooting depth and water table depth illustrated in the conceptual figure below.\n\n\nCode\nusing CairoMakie\nusing Statistics\n\nlet\n  # Define colors and styles\n  csep = \"#999999\"\n  croot = \"#993404\"\n  cwater = \"#1f78b4\"\n  lssep = :dash\n\n  layers = [0, 150, 250, 325]\n  all_layers = copy(layers)\n\n  rootdepth = 230\n  waterdepth = 300\n\n  availcap = Float64[]\n  usl = Float64[]\n\n  # Calculate available capacity and unsaturated layer\n  for i in 1:(length(layers) - 1)\n      usl_i = min(layers[i + 1], waterdepth) - layers[i]\n      push!(usl, usl_i)\n      if usl_i &gt; 0\n          cap = min(1.0, max(0.0, (rootdepth - layers[i]) / usl_i))\n          push!(availcap, cap)\n      else\n          push!(availcap, 0.0)\n      end\n  end\n\n  # Create figure\n  padding = 10\n  w, h = (400, 400)\n\n  fig = Figure(; size = (w, h))\n  ax = Axis(\n      fig;\n      bbox = BBox(50, 100, padding, h - padding),\n      xgridvisible = false,\n      ygridvisible = false,\n      xticksvisible = false,\n      xticklabelsvisible = false,\n      yticks = all_layers,\n      yreversed = true,\n      xlabel = \"\",\n      ylabel = \"\",\n  )\n\n  # Show lines for different layers and depth values\n  for i in 1:(length(all_layers) - 1)\n      layer = all_layers[i]\n      y_mean = mean([all_layers[i + 1], all_layers[i]])\n      hlines!(ax, [layer]; color = csep, linestyle = lssep)\n      text!(\n          fig.scene,\n          Point2f(0.09, 1 - (y_mean / maximum(layers)));\n          text = string(all_layers[i + 1] - all_layers[i]),\n          space = :relative,\n          align = (:center, :center),\n          rotation = pi / 2,\n          color = \"#b3b3b3\",\n      )\n\n      text!(\n          fig.scene,\n          Point2f(0.8, 1 - (y_mean / maximum(layers)));\n          text = \"maxextr = \\n $(round(availcap[i], digits = 2)) ⋅ soilwater\",\n          space = :relative,\n          align = (:center, :center),\n      )\n  end\n\n  # Add lines indicating water level and rootzone depth\n  hlines!(ax, [rootdepth]; color = croot, linewidth = 2)\n  poly!(ax, [0, 0, 1, 1], [waterdepth, 375, 375, waterdepth]; color = cwater, alpha = 0.5)\n  text!(\n      fig.scene,\n      \"Rooting depth\";\n      position = (0.27, 1.01 - (rootdepth / maximum(layers))),\n      color = croot,\n      space = :relative,\n      align = (:left, :center),\n  )\n\n  text!(\n      fig.scene,\n      \"Water table depth\";\n      position = (0.27, 1.01 - (waterdepth / maximum(layers))),\n      color = cwater,\n      space = :relative,\n      align = (:left, :center),\n  )\n\n  # Format axes\n  xlims!(ax, 0, 1)\n  ylims!(ax, layers[end], 0)\n\n  # Display the figure\n  fig\nend\n\n\n\nConceptual overview of how maxextr depends on rooting depth and water table depth\n\n\nA root water uptake reduction model is used to calculate a reduction coefficient as a function of soil water pressure, that may reduce the maximum possible root water extraction rate. The root water uptake reduction model is based on the concept proposed by Feddes et al. (1978). This concept defines a reduction coefficient \\(\\SIb{\\alpha}{-}\\) as a function of soil water pressure \\(\\SIb{h}{cm}\\). Four different levels of \\(h\\) are defined: \\(h_1\\), \\(h_2\\), \\(h_3\\) and \\(h_4\\). \\(h_1\\) represents anoxic moisture conditions, \\(h_2\\) represents field capacity, \\(h_3\\) represents the point of critical soil moisture content (onset of drought stress), and \\(h_4\\) represents the wilting point. The value of \\(h_3\\) is a function of the potential transpiration rate, between \\(\\SI{1}{mm\\ d^{-1}}\\) and \\(\\SI{5}{mm\\ d^{-1}}\\). If \\(T_p \\le \\SI{1}{mm\\ d^{-1}}\\), \\(h_3\\) is set equal to \\(h_{3\\mathrm{low}}\\) (input model parameter). If \\(T_p \\ge \\SI{5}{mm d^{-1}}\\), \\(h_3\\) is set equal to \\(h_{3\\mathrm{high}}\\) (input model parameter). For \\(T_p\\) values between \\(\\SI{1}{mm\\ d^{-1}}\\) and \\(\\SI{5}{mm\\ d^{-1}}\\), the value of \\(h_3\\) is linearly related to \\(T_p\\) (between \\(h_{3\\mathrm{low}}\\) and \\(h_{3\\mathrm{high}}\\)). Besides model parameters \\(h_{3\\mathrm{high}}\\) and \\(h_{3\\mathrm{low}}\\), the critical pressure heads \\(h_1\\), \\(h_2\\) and \\(h_4\\) can be defined as input to the model.\nThe current soil water pressure is determined following the concept defined by Brooks and Corey (1964):\n\\[\n    \\frac{\\theta-\\theta_r}{\\theta_s-\\theta_r} =  \\min\\left\\{1, \\left(\\frac{h_b}{h}\\right)^\\lambda\\right\\},\n\\]\nwhere \\(\\SIb{h}{cm}\\) is the pressure head, \\(\\SIb{h_b}{cm}\\) is the air entry pressure head, and \\(\\theta\\), \\(\\theta_s\\), \\(\\theta_r\\) and \\(\\lambda\\) as previously defined.\nWhenever the current soil water pressure drops below \\(h_4\\), the root water uptake is set to zero. The root water uptake is at ideal conditions whenever the soil water pressure is above \\(h_3\\), with a linear transition between \\(h_3\\) and \\(h_4\\). The assumption that very wet conditions do not affect root water uptake too much is probably generally applicable to natural vegetation. For crops this assumption is not valid and in this case root water uptake above \\(h_1\\) should be set to zero (oxygen deficit) and between \\(h_1\\) and \\(h_2\\) root water uptake is limited. This is possible by setting \\(\\alpha\\) for \\(h_1\\) at \\(0\\) (default is \\(1\\)) through model input.\n\n\nCode\nusing CairoMakie\n\nlet\n  # Create figure\n  fig = Figure(; size = (500, 400))\n  ax = Axis(\n      fig[1, 1];\n      xlabel = \"Soil water pressure head\",\n      ylabel = \"α [-]\",\n      xticks = ([0, 2, 3, 4], [\"h₄\\n-15849 cm\", \"h₃\\n-400 cm\", \"h₂\\n-100 cm\", \"h₁\\n-10 cm\"]),\n      xgridvisible = false,\n      ygridvisible = false,\n  )\n\n  # Plot line\n  lines!(ax, [0, 2, 3, 4], [0, 1, 1, 1])\n\n  # Display the figure\n  fig\n\nend\n\n\n\nRoot water uptake reduction coefficient as a function of soil water pressure\n\n\nThe computation of transpiration from the saturated store depends on the water table depth, rooting depth, the reduction coefficient \\(\\alpha\\) and the fraction of wet roots. The fraction of wet roots is determined using a sigmoid function (see figure below). The parameter rootdistpar defines the sharpness of the transition between fully wet and fully dry roots. The remaining potential transpiration is multiplied by the wet roots fraction and \\(\\alpha\\) (and limited by the available water in saturated zone) to get the transpiration from the saturated part of the soil.\n\n\nCode\nusing CairoMakie\nusing Wflow: scurve\n\nlet\n  # Settings\n  watertable = collect(250:0.5:300)\n  rootingdepth = 275.0\n  rootdistpars = [-500.0, -1.0, -0.5, -0.3]\n\n  # Plot options\n  colors = [\"#fed98e\", \"#fe9929\", \"#d95f0e\", \"#993404\"]\n\n  # Create figure\n  fig = Figure(; size = (500, 400))\n  ax = Axis(\n      fig[1, 1];\n      xlabel = \"Fraction of wet roots [-]\",\n      ylabel = \"Water table depth [mm]\",\n      yreversed = true,  # Reverse y-axis to match water table depth orientation\n      xgridvisible = false,\n      ygridvisible = false,\n  )\n\n  # Plot lines for each rootdistpar\n  for (rootdistpar, color) in zip(rootdistpars, colors)\n      wetrootfrac = @. scurve(watertable, rootingdepth, Float64(1.0), rootdistpar)\n      lines!(ax, wetrootfrac, watertable; color = color, label = \"$rootdistpar\")\n  end\n\n  # Add rooting depth annotation\n  hlines!(ax, [rootingdepth]; linestyle = :dash, color = \"#999999\")\n  text!(\n      ax,\n      \"rootingdepth = $rootingdepth mm\";\n      position = (1.0, rootingdepth + 0.5),\n      color = \"#999999\",\n      align = (:right, :top),\n  )\n\n  # Add legend\n  axislegend(\"rootdistpar\"; position = :lt, framevisible = false)\n\n  # Set axis limits\n  ylims!(ax, maximum(watertable), minimum(watertable))  # Reverse y-axis\n  xlims!(ax, -0.05, 1.05)\n\n  # Display the figure\n  fig\nend\n\n\n\nAmount of wet roots and the effect of the rootdistpar parameter",
    "crumbs": [
      "Model documentation",
      "Land models",
      "Land Hydrology SBM"
    ]
  },
  {
    "objectID": "model_docs/land/landhydrology_sbm.html#soil-processes",
    "href": "model_docs/land/landhydrology_sbm.html#soil-processes",
    "title": "Land Hydrology SBM",
    "section": "Soil processes",
    "text": "Soil processes\n\nThe SBM soil water accounting scheme\nA detailed description of the Topog_SBM model has been given by Vertessy and Elsenbeer (1999). Briefly: the soil is considered as a bucket with a certain depth \\(\\SIb{z_\\mathrm{soil}}{mm}\\), divided into a saturated store \\(\\SIb{S_\\mathrm{sat}}{mm}\\) and an unsaturated store \\(\\SIb{S_\\mathrm{unsat}}{mm}\\). The top of the \\(S_\\mathrm{sat}\\) store forms a pseudo-water table at depth \\(\\SIb{z_\\mathrm{watertable}}{mm}\\) such that the value of \\(S_\\mathrm{sat}\\) at any time is given by:\n\\[\n    S_\\mathrm{sat} = (z_\\mathrm{soil}-z_\\mathrm{watertable}) (\\theta_s-\\theta_r),\n\\]\nwhere \\(\\SIb{\\theta_{s}}{-}\\) and \\(\\SIb{\\theta_{r}}{-}\\) are the saturated and residual soil water contents, respectively.\nThe unsaturated storage capacity \\(\\SIb{S_\\mathrm{unsat, max}}{mm}\\) is defined as follows:\n\\[\n    S_\\mathrm{unsat, max} = z_\\mathrm{soil} (\\theta_s-\\theta_r) - S_\\mathrm{sat} - S_\\mathrm{unsat}.\n\\]\nThe saturation deficit \\(\\SIb{S_\\mathrm{deficit}}{mm}\\) for the soil profile as a whole is defined as:\n\\[\n    S_\\mathrm{deficit} = (\\theta_s-\\theta_r) z_\\mathrm{soil} - S_\\mathrm{sat}.\n\\]\nAll infiltrating water enters the unsaturated store first. The soil bucket can be split-up in different layers, by providing the thickness \\(\\SIb{}{mm}\\) of the layers in the TOML file. The following example specifies three layers (from top to bottom) of \\(100\\), \\(300\\) and \\(800\\) \\(\\SI{}{mm}\\):\n[model]\nsoil_layer__thickness = [100, 300, 800]\nThe code checks for each grid cell the specified layers against the soil thickness \\(\\SIb{}{mm}\\), and adds or removes (partly) layer(s) based on the soil thickness.\nAssuming a unit head gradient, the potential transfer of water \\(\\SIb{Q_{\\mathrm{transfer,\npot,} n}}{mm\\ t^{-1}}\\) from an unsaturated layer \\(n\\) is controlled by the vertical saturated hydraulic conductivity \\(\\SIb{K_{\\mathrm{vz},n}}{mm\\ t^{-1}}\\), the effective saturation degree of layer \\(n\\), and a Brooks-Corey power coefficient \\(\\SIb{c_n}{-}\\) based on the pore size distribution index \\(\\SIb{\\lambda_n}{-}\\) (Brooks and Corey, 1964) of layer \\(n\\):\n\\[\n\\begin{gathered}\n    Q_{\\mathrm{transfer, pot,} n} = K_{\\mathrm{vz},n}\\left(\\frac{\\theta_n-\\theta_\\mathrm{r}}{\\theta_\\mathrm{s}-\\theta_\\mathrm{r}}\\right)^{c_n}\\\\\n    c_n=\\frac{2+3\\lambda_n}{\\lambda_n}.\n\\end{gathered}\n\\]\nFour different saturated hydraulic conductivity depth profiles (saturated_hydraulic_conductivity_profile) are available and a saturated_hydraulic_conductivity_profile can be specified in the TOML file as follows:\n[input.static]\nsaturated_hydraulic_conductivity_profile = \"exponential_constant\" # optional, one of (\"exponential\", \"exponential_constant\", \"layered\", \"layered_exponential\"), default is \"exponential\"\nSoil measurements are often available for about the upper \\(\\SI{1.5-2}{m}\\) of the soil column to estimate the saturated hydraulic conductivity, while these measurements are often lacking for soil depths beyond \\(\\SI{1.5-2}{m}\\). These different profiles allow to extent the saturated hydraulic conductivity profile based on measurements (either an exponential fit or hydraulic conductivity value per soil layer) with an exponential or constant profile. By default, with saturated_hydraulic_conductivity_profile “exponential”, the vertical saturated hydraulic conductivity \\(\\SIb{K_{\\mathrm{vz,} n}}{mm\\ t^{-1}}\\) of unsaturated soil layer \\(n\\) for \\(m\\) unsaturated soil layers is given by:\n\\[\n    K_{\\mathrm{vz},n} = f_{\\mathrm{Kv,} n} K_\\mathrm{v0} \\begin{cases}\n     e^{(-f_\\mathrm{Kv} z_{\\mathrm{bottom},n})} & \\text{if $n &lt; m$}\\\\\n     e^{(-f_\\mathrm{Kv} z_\\mathrm{watertable})} & \\text{if $n = m$},\\\\\n  \\end{cases}\n\\]\nwhere \\(\\SIb{K_\\mathrm{v0}}{mm\\ t^{-1}}\\) is the vertical saturated hydraulic conductivity at the soil surface, \\(\\SIb{f_{\\mathrm{Kv,} n}}{-}\\) is an optional (default: \\(1.0\\)) multiplication factor for each soil layer \\(n\\) to correct the vertical saturated hydraulic conductivity, \\(\\SIb{\\subtext{f}{Kv}}{mm^{-1}}\\) is a scaling parameter and \\(\\SIb{z_{\\mathrm{bottom},n}}{mm}\\) is the soil depth at the bottom of soil layer \\(n\\).\nThe plot below shows the relation between soil depth \\(z\\) and vertical saturated hydraulic conductivity \\(K_\\mathrm{vz}\\) for different values of \\(\\subtext{f}{Kv}\\).\n\n\nCode\nusing Printf\nusing CairoMakie\n\nlet\n    set_theme!()\n    fig = Figure()\n    ax = Axis(fig[1, 1], xlabel=L\"K_\\mathrm{vz}\\;[\\mathrm{mm/day}]\", ylabel=L\"-z\\;[\\mathrm{mm}]\")\n\n    z = 0:5.0:1000\n    kv = 100.0\n    f = 0.6 ./ collect(50:150.0:800)\n\n    for fi in f\n        lines!(ax, kv .* exp.(-fi .* z), -z, label=@sprintf(\"%.2e\", fi))\n    end\n\n    Legend(fig[1, 2], ax, L\"f_\\mathrm{Kv}\")\n    fig\nend\n\n\n\nEffect of different values of f_Kv on the vertical saturated hydraulic conductivity profile\n\n\nWith saturated_hydraulic_conductivity_profile “exponential_constant”, \\(K_{\\mathrm{vz,}\nn}\\) declines exponentially (if \\(f_{\\mathrm{Kv,} n} = 1.0\\)) with soil depth \\(\\SIb{z}{mm}\\) until \\(\\SIb{z_\\mathrm{exp}}{mm}\\) below the soil surface, and stays constant at and beyond soil depth \\(z_\\mathrm{exp}\\) by default (\\(f_{\\mathrm{Kv,} n} = 1.0\\)):\n\\[\n    K_{\\mathrm{vz,} n} = f_{\\mathrm{Kv,} n} K_\\mathrm{v0} \\begin{cases}\n    e^{-\\subtext{f}{Kv} z_{\\mathrm{bottom,} n}} & \\text{if $z_{\\mathrm{bottom,} n} &lt; \\subtext{z}{exp}$}\\\\\n    e^{-\\subtext{f}{Kv}\\subtext{z}{exp}} & \\text{if $z_{\\mathrm{bottom,} n} \\ge \\subtext{z}{exp}$}.\n    \\end{cases}\n\\]\nIt is also possible to provide a vertical saturated hydraulic conductivity value per soil layer by specifying saturated_hydraulic_conductivity_profile “layered”, these values are used in combination with \\(f_{\\mathrm{Kv,} n}\\) to compute the vertical transfer of water between unsaturated soil layers and to the saturated store \\(S_\\mathrm{sat}\\). Finally, with the saturated_hydraulic_conductivity_profile “layered_exponential” \\(K_{\\mathrm{vz,} n}\\) for depth \\(z_\\mathrm{layered}\\) below the soil surface is based on provided vertical saturated hydraulic conductivity values (in combination with \\(f_{\\mathrm{Kv,} n}\\)), and beyond \\(z_\\mathrm{layered}\\), \\(K_{\\mathrm{vz,} n}\\) is controlled by \\(K_\\mathrm{vz}\\) of layer \\(n\\) with bottom \\(z_\\mathrm{layered}\\), \\(\\subtext{f}{Kv}\\) and \\(f_{\\mathrm{Kv,} n}\\). The different available saturated_hydraulic_conductivity_profile options are schematized in the figure below:\n\n\n\nOverview of available saturated_hydraulic_conductivity_profile options, for a soil column with five layers\n\n\nThe potential transfer of water from the unsaturated store to the saturated store is in that case controlled by the vertical saturated hydraulic conductivity at the water table depth \\(\\SIb{z_\\mathrm{watertable}}{mm}\\), an optional multiplication factor \\(\\SIb{f_\\mathrm{Kv,\n1}}{-}\\) to correct the vertical saturated hydraulic conductivity, and the ratio between \\(\\SIb{S_\\mathrm{unsat}}{mm}\\) and \\(\\SIb{S_\\mathrm{deficit}}{mm}\\):\n\\[\n    Q_{\\mathrm{transfer, pot,} 1} = f_{\\mathrm{Kv,} 1} K_\\mathrm{v0} e^{-\\subtext{f}{Kv} z_\\mathrm{watertable}}\\frac{S_\\mathrm{unsat}}{S_\\mathrm{deficit}}.\n\\]\n\n\nInfiltration\nThe water available for infiltration is taken as throughfall, stemflow, snow runoff and glaciermelt. Infiltration is determined separately for the compacted and non-compacted areas, as these have different infiltration capacities. The infiltration capacity of non-compacted areas is based on the vertical saturated conductivity at the soil surface \\(\\SIb{K_\\mathrm{v0}}{mm\\ t^{-1}}\\) and an optional multiplication factor \\(\\SIb{f_\\mathrm{Kv,\n1}}{-}\\) to correct the vertical saturated hydraulic conductivity of the upper soil layer. Naturally, only the water that can be stored in the soil can infiltrate. If not all water can infiltrate, this is added as excess water to the runoff routing scheme.\nThe infiltrating water is split in two parts, the part that falls on compacted areas and the part that falls on non-compacted areas. The maximum infiltration rate in these areas is calculated by taking the minimum of the infiltration capacity and the infiltration rate for these areas. The actual total infiltration rate is a function of the total infiltration rate (compacted and non-compacted areas) and the initial unsaturated storage capacity.\nInfiltration excess occurs when the infiltration capacity is smaller then the water available for infiltration. This amount of water becomes overland flow (infiltration excess overland flow). Saturation excess occurs when the (upper) soil becomes saturated and water cannot infiltrate anymore. This amount of water becomes overland flow (saturation excess overland flow).\n\nInfiltration in frozen soils\nAn optional reduction factor is applied to the infiltration capacity when snow is modelled, and the model setting soil_infiltration_reduction__flag is set to true:\n[model]\nsoil_infiltration_reduction__flag = true\nsnow__flag = true\nThis reduction factor depends on the near-surface soil temperature, which is modelled based on the approach of Wigmosta et al., 2009:\n\\[\nT_\\mathrm{soil}^t = T_\\mathrm{soil}^{t-1} + w_\\mathrm{soil}  (T_\\mathrm{air} - T_\\mathrm{soil}^{t-1}),\n\\] where \\(\\SIb{T_\\mathrm{soil}^{t}}{\\degree C}\\) is the near-surface soil temperature at time step \\(t\\), \\(\\SIb{T_a}{\\degree C}\\) is air temperature at time step \\(t\\), \\(\\SIb{T_\\mathrm{soil}^{t-1}}{\\degree C}\\) is the near-surface soil temperature at the previous time step and \\(\\SIb{w_\\mathrm{soil}}{t^{-1}}\\) is a weighting coefficient determined through calibration (default is 0.1125 for daily timesteps). The optional infiltration capacity reduction factor is based on the model parameter \\(\\SIb{f_\\mathrm{red, frozen}}{-}\\) (default is 0.038) and the near-surface soil temperature as follows:\n\\[\n\\begin{gathered}\n    b = \\frac{1.0}{1.0 - f_\\mathrm{red, frozen}}\\\\\n    f_\\mathrm{frozen} = \\frac{1.0}{b + \\exp(-c (T_\\mathrm{soil} - a))} + f_\\mathrm{red, frozen}\\\\\n    a = 0.0\\\\\n    c = 8.0.\n\\end{gathered}\n\\]\nA S-curve (see plot below) is used to make a smooth transition (a c-factor (\\(c\\)) of 8.0 is used):\n\n\nCode\nusing CairoMakie\nusing Wflow: infiltration_reduction_factor\n\nlet\n  # Define data\n  temps = collect(-3:0.1:3)\n  cf_soils = [0.038, 0.1, 0.2]  # Example values for cf_soil\n  colors = [\"#bae4bc\", \"#7bccc4\", \"#2b8cbe\"]  # Colors for each cf_soil\n\n  # Create figure\n  fig = Figure(; size = (500, 400))\n  ax = Axis(\n      fig[1, 1];\n      xlabel = \"Soil temperature [°C]\",\n      ylabel = \"Infiltration correction factor [-]\",\n      xgridvisible = false,\n      ygridvisible = false,\n  )\n\n  # Plot lines for each cf_soil\n  for (cf_soil, color) in zip(cf_soils, colors)\n      y_vals = @. infiltration_reduction_factor(\n          temps,\n          cf_soil;\n          modelsnow = true,\n          soil_infiltration_reduction = true,\n      )\n      lines!(ax, temps, y_vals; label = \"$cf_soil\", color = color)\n  end\n\n  # Add legend\n  axislegend(\"cf_soil\"; framevisible = false, position = :lt)\n\n  # Set axis limits\n  xlims!(ax, minimum(temps), maximum(temps))\n  ylims!(ax, -0.03, 1.03)\n\n  # Display the figure\n  fig\nend\n\n\n\nInfiltration correction factor as a function of soil temperature\n\n\n\n\n\nCapillary rise\nCapillary rise is determined when an unsaturated zone occurs in the soil column, using the following approach. First a maximum capillary rise is determined from the minimum of vertical saturated hydraulic conductivity at the water table, the actual transpiration rate from the unsaturated store and the unsaturated storage capacity. Then, the maximum capillary rate is scaled using the following empirical equation (e.g. Zammouri, 2011; Yang et al., 2011; Wang et al., 2016): \\[\n  C_\\mathrm{act}=\\begin{cases}\n    C_\\mathrm{max}\\left(1-\\frac{z_\\mathrm{watertable}}{z_\\mathrm{cap, maxdepth}}\\right)^{n_\\mathrm{cap}} & \\text{if $(z_\\mathrm{watertable}&gt;z_\\mathrm{rooting})$ \\& $(z_\\mathrm{watertable}&lt;z_\\mathrm{cap, maxdepth})$}\\\\\n    0 & \\text{otherwise},\n  \\end{cases}\n\\] where \\(\\SIb{C_\\mathrm{act}}{mm\\ t^{-1}}\\) is the capillary rate, \\(\\SIb{z_\\mathrm{cap,\nmaxdepth}}{mm}\\) is the critical water depth beyond which capillary rise ceases, \\(\\SIb{n_\\mathrm{cap}}{-}\\) is an empirical coefficient related to soil properties and climate, generally set between \\(1\\) and \\(3\\), \\(\\SIb{z_\\mathrm{watertable}}{mm}\\) is the water table depth and \\(\\SIb{z_\\mathrm{rooting}}{mm}\\) is the rooting depth. \\(C_\\mathrm{act}\\) is divided over the different unsaturated soil layers, from the bottom to the top unsaturated soil layer, without exceeding the saturated water content.\n\n\nLeakage\nIf the maximum leakage \\(\\SIb{}{mm\\ d^{-1}}\\) input model parameter is set &gt; 0, water is lost from the saturated zone and runs out of the model. Leakage can be enabled by specifying the following in the TOML file:\n[input.static]\nsoil_water_sat-zone_bottom__max_leakage_volume_flux = \"maxleakage\"",
    "crumbs": [
      "Model documentation",
      "Land models",
      "Land Hydrology SBM"
    ]
  },
  {
    "objectID": "model_docs/land/landhydrology_sbm.html#open-water",
    "href": "model_docs/land/landhydrology_sbm.html#open-water",
    "title": "Land Hydrology SBM",
    "section": "Open water",
    "text": "Open water\nPart of the water available for infiltration is diverted to the open water, based on the fractions of river and lakes of each grid cell. The amount of evaporation from open water is assumed to be equal to potential evaporation (if sufficient water is available).",
    "crumbs": [
      "Model documentation",
      "Land models",
      "Land Hydrology SBM"
    ]
  },
  {
    "objectID": "model_docs/land/landhydrology_sbm.html#non-irrigation",
    "href": "model_docs/land/landhydrology_sbm.html#non-irrigation",
    "title": "Land Hydrology SBM",
    "section": "Non-irrigation",
    "text": "Non-irrigation\nNon-irrigation water demand and allocation computations are supported for the sectors domestic, industry and livestock. These computations can be enabled by specifying the following in the TOML file:\n[model.water_demand]\ndomestic__flag = true\nindustry__flag = true\nlivestock__flag = true\nFor these non-irrigation sectors the gross demand (\\(d_\\mathrm{gross}\\) \\(\\SIb{}{mm\\ t^{-1}}\\)) and net demand (\\(d_\\mathrm{net}\\) \\(\\SIb{}{mm\\ t^{-1}}\\)) are provided to the model (input through cyclic \\(\\SIb{}{mm\\ d^{-1}}\\) or forcing data \\(\\SIb{}{mm\\ t^{-1}}\\)). Gross demand represents the total demand and hence the total abstraction from surface water or groundwater when sufficient water is available. Net demand represents water consumption. The portion of total abstracted water that is not consumed is returned as surface water. The return flow fraction (\\(\\SIb{f_\\mathrm{return}}{-}\\)) is calculated as follows:\n\\[\n    \\subtext{f}{return} = 1.0 - \\frac{\\subtext{d}{net}}{\\subtext{d}{gross}},\n\\] and used to calculate the return flow rate (water abstracted from surface water or groundwater but not consumed). For grid cells containing a river the return flow is directly returned to the river routing component, otherwise the return flow is returned to the overland flow routing component.\nThe list of input parameters for non-irrigation that can be provided through the TOML file can be found here.",
    "crumbs": [
      "Model documentation",
      "Land models",
      "Land Hydrology SBM"
    ]
  },
  {
    "objectID": "model_docs/land/landhydrology_sbm.html#non-paddy-irrigation",
    "href": "model_docs/land/landhydrology_sbm.html#non-paddy-irrigation",
    "title": "Land Hydrology SBM",
    "section": "Non-paddy irrigation",
    "text": "Non-paddy irrigation\nNon-paddy (other crops than flooded rice) water demand and allocation computations are supported. These computations can be enabled by specifying the following in the TOML file:\n[model.water_demand]\nnonpaddy__flag = true\nIrrigation is applied during the growing season when input parameter irrigation trigger \\(\\SIb{}{-}\\) for non-paddy irrigation is true (or on) and when water depletion exceeds the readily available water:\n\\[\n    (\\subtext{S}{root-unsat, fc} - \\subtext{S}{root-unsat}) \\ge (\\subtext{S}{root-unsat, fc} - \\subtext{S}{root-unsat, h3}),\n\\] where \\(\\SIb{\\subtext{S}{root-unsat, fc}}{mm}\\) is the unsaturated store in the root zone at field capacity (defined at a soil water pressure head of \\(\\SI{-100}{cm}\\)), \\(\\SIb{\\subtext{S}{root-unsat}}{mm}\\) is the unsaturated store in the root zone and \\(\\SIb{\\subtext{S}{root-unsat, h3}}{mm}\\) is the unsaturated store in the root zone at the critical soil water pressure head \\(h_3\\), below this pressure head reduction of root water uptake starts due to drought stress. The net irrigation demand \\(\\SIb{}{mm\\ t^{-1}}\\) is the irrigation rate that brings the root zone back to field capacity, limited by the soil infiltration capacity \\(\\SIb{}{mm\\ t^{-1}}\\), assuming that farmers do not apply an irrigation rate higher than the soil infiltration capacity. To account for limited irrigation efficiency the net irrigation demand is divided by the irrigation efficiency for non-paddy crops (\\(\\SIb{}{-}\\), default is \\(1.0\\)), resulting in gross irrigation demand \\(\\SIb{}{mm\\ t^{-1}}\\). Finally, the gross irrigation demand is limited by the maximum irrigation rate (\\(\\SIb{}{mm\\ t^{-1}}\\), default is \\(\\SI{25}{mm\\ d^{-1}}\\)). If the maximum irrigation rate is applied, irrigation continues at subsequent time steps until field capacity is reached. Irrigation is added to the amount of water available for infiltration.\nThe list of input parameters for non-paddy irrigation that can be provided through the TOML file can be found here.",
    "crumbs": [
      "Model documentation",
      "Land models",
      "Land Hydrology SBM"
    ]
  },
  {
    "objectID": "model_docs/land/landhydrology_sbm.html#paddy-irrigation",
    "href": "model_docs/land/landhydrology_sbm.html#paddy-irrigation",
    "title": "Land Hydrology SBM",
    "section": "Paddy irrigation",
    "text": "Paddy irrigation\nPaddy (flooded rice) water demand and allocation computations are supported. These computations can be enabled by specifying the following in the TOML file:\n[model.water_demand]\npaddy__flag = true\nIrrigation is applied during the growing season when input parameter irrigation trigger \\(\\SIb{}{-}\\) is true (or on) and when the paddy water depth h \\(\\SIb{}{mm}\\) reaches below the minimum water depth h_min \\(\\SIb{}{mm}\\) (see also the figure below). The net irrigation demand \\(\\SIb{}{mm\\ t^{-1}}\\) is the irrigation rate required to reach the optimal paddy water depth h_opt \\(\\SIb{}{mm}\\), an approach similar to Xie and Cui (2011). To account for limited irrigation efficiency the net irrigation demand is divided by the irrigation efficiency for paddy fields (\\(\\SIb{}{-}\\), default is 1.0), resulting in gross irrigation demand \\(\\SIb{}{mm t^{-1}}\\). Finally, the gross irrigation demand is limited by the maximum irrigation rate (\\(\\SIb{}{mm\\ t^{-1}}\\), default is \\(\\SIb{25}{mm\\ d^{-1}}\\)). If the maximum irrigation rate is applied, irrigation continues at subsequent time steps until the optimal paddy water depth h_opt is reached. Irrigation is added to the amount of water available for infiltration. When the paddy water depth h exceeds h_max \\(\\SIb{}{mm}\\) runoff occurs, and this amount is added to the runoff routing scheme for overland flow. The figure below shows a typical vertical soil profile of a puddled rice soil with a muddy layer of about 15 cm (in this case represented by two soil layers of \\(\\SI{5}{cm}\\) and \\(\\SI{10}{cm}\\) thickness), a plow soil layer of 5 cm with relative low permeability (vertical hydraulic conductivity \\(\\subtext{K}{vz}\\) of about \\(\\SI{5}{mm\\ d^{-1}}\\)), and a non-puddled soil below the plow soil layer. The low vertical hydraulic conductivity of the plow soil layer can be realized by making use of the optional multiplication factor \\(\\SIb{f_{\\mathrm{Kv,} n}}{-}\\) (default is 1.0) applied to each soil layer \\(n\\).\n\n\n\nSchematic diagram of a paddy field with water balance components and soil profile\n\n\nThe list of input parameters for paddy irrigation that can be provided through the TOML file can be found here.",
    "crumbs": [
      "Model documentation",
      "Land models",
      "Land Hydrology SBM"
    ]
  },
  {
    "objectID": "model_docs/land/landhydrology_sbm.html#water-withdrawal-and-allocation",
    "href": "model_docs/land/landhydrology_sbm.html#water-withdrawal-and-allocation",
    "title": "Land Hydrology SBM",
    "section": "Water withdrawal and allocation",
    "text": "Water withdrawal and allocation\nFor the water withdrawal the total gross demand is computed (sum over the irrigation and non-irrigation water demand sectors), in case sufficient water is available the water withdrawal is equal to the total gross demand. In case of insufficient water availability, the water withdrawal is scaled down to the available water, and allocation is then proportional to the gross demand per sector (industry, domestic, livestock and irrigation). Water can be abstracted from the following sources:\n\nsurface water from rivers (max \\(\\SI{80}{\\%}\\) of total available water)\nreservoirs and lakes (max \\(\\SI{98}{\\%}\\) of total available water)\ngroundwater (max \\(\\SI{75}{\\%}\\) of total available water)\n\nThe model parameter fraction surface water used (default is \\(1.0\\)) determines how much water is supplied by available surface water and groundwater, and can be specified in the TOML file as follows:\n[input.static]\nland_surface_water__withdrawal_fraction = \"SurfaceWaterFrac\"\n\nLocal\nFirst, surface water abstraction (excluding reservoir and lake locations) is computed to satisfy local (same grid cell) water demand. The available surface water volume is limited by a fixed scaling factor of \\(0.8\\) to prevent rivers from completely drying out. It is assumed that the water demand cannot be satisfied completely from local surface water and groundwater. The next step is to satisfy the remaining water demand for allocation areas \\(\\SIb{}{-}\\), described in the next sub-section.\n\n\nAllocation areas\nAllocation areas can be specified as follows in the TOML file:\n[input.static]\nland_water_allocation_area__count = \"allocation_areas\"\nFor allocation areas the water demand \\(\\SIb{\\subtext{V}{sw, demand}}{m^3}\\) and availability \\(\\SIb{\\subtext{V}{sw, availabilty}}{m^3}\\) are summed (including reservoir and lake locations limited by a fixed scaling factor of \\(0.98\\)), and the total surface water abstraction is then:\n\\[\n    \\subtext{V}{sw, abstraction} = \\min (\\subtext{V}{sw, demand}, \\subtext{V}{sw, availabilty}).\n\\] The fraction of available surface water that can be abstracted \\(\\SIb{\\subtext{f}{sw,abstraction}}{-}\\) at the allocation area level is then:\n\\[\n    \\subtext{f}{sw, abstraction} = \\frac{\\subtext{V}{sw, abstraction}}{\\subtext{V}{sw, available}}.\n\\] This fraction is applied to the remaining available surface water of each river cell (including lake and reservoir locations) to compute surface water abstraction at each river cell and to update the local surface water abstraction.\nThe fraction of water demand that can be satisfied by available surface water \\(\\SIb{\\subtext{f}{sw, allocation}}{-}\\) at the allocation area level is then:\n\\[\n    \\subtext{f}{sw, allocation} = \\frac{\\subtext{V}{sw, abstraction}}{\\subtext{V}{sw, demand}}.\n\\] This fraction is applied to the remaining surface water demand of each land cell to compute the allocated surface water to each land cell.\nThen groundwater abstraction is computed to satisfy the remaining local water demand, where groundwater abstraction is limited by a fixed scaling factor of \\(0.75\\) applied to the groundwater volume. Finally, for allocation areas the water demand \\(\\SIb{\\subtext{V}{gw,demand}}{m^3}\\) and availability \\(\\SIb{\\subtext{V}{gw, availabilty}}{m^3}\\) are summed, and the total groundwater abstraction is then:\n\\[\n    \\subtext{V}{gw, abstraction} = \\min(\\subtext{V}{gw, demand}, \\subtext{V}{gw, availabilty}).\n\\] The fraction of available groundwater that can be abstracted at allocation area level \\(\\SIb{\\subtext{f}{gw, abstraction}}{-}\\) at the allocation area level is then:\n\\[\n    \\subtext{f}{gw, abstraction} = \\frac{\\subtext{V}{gw, abstraction}}{\\subtext{V}{gw, available}}.\n\\] This fraction is applied to the remaining available groundwater of each land cell to compute groundwater abstraction and to update the local groundwater abstraction.\nThe fraction of water demand that can be satisfied by available groundwater \\(\\SIb{\\subtext{f}{gw,allocation}}{-}\\) at the allocation area level is then:\n\\[\n    \\subtext{f}{gw, allocation} = \\frac{\\subtext{V}{gw, abstraction}}{\\subtext{V}{gw, demand}}.\n\\] This fraction is applied to the remaining groundwater demand of each land cell to compute the allocated groundwater to each land cell.\n\n\nAbstractions\nGroundwater abstraction is implemented by subtracting this amount from the recharge variable of the lateral subsurface flow component (kinematic wave) or the recharge rate variable of the groundwater flow module. Surface water abstraction \\(\\SIb{}{m^3\\ s^{-1}}\\) is divided by the flow length \\(\\SIb{}{m}\\) and subtracted from the lateral inflow of kinematic wave routing scheme for river flow. For the local inertial routing scheme (river and optional floodplain routing), the surface water abstraction \\(\\SIb{}{m^3\\ s^{-1}}\\) is subtracted as part of the continuity equation of the local inertial model. For reservoir and lake locations surface water is abstracted \\(\\SIb{}{m^3\\ s^{-1}}\\) from the reservoir storage \\(\\SIb{}{m^3}\\) and lake storage \\(\\SIb{}{m^3}\\) respectively, with a subsequent update of the lake water level \\(\\SIb{}{m}\\).",
    "crumbs": [
      "Model documentation",
      "Land models",
      "Land Hydrology SBM"
    ]
  },
  {
    "objectID": "model_docs/land/landhydrology_sbm.html#references",
    "href": "model_docs/land/landhydrology_sbm.html#references",
    "title": "Land Hydrology SBM",
    "section": "References",
    "text": "References\n\nBergström, S., 1992, The HBV model – its structure and applications, SMHI Reports Hydrology, Norrköping, Sweden, RH 4.\nBrooks, R. H., and Corey, A. T., 1964, Hydraulic properties of porous media, Hydrology Papers 3, Colorado State University, Fort Collins, 27 p.\nFeddes, R.A., Kowalik, P.J. and Zaradny, H., 1978, Simulation of field water use and crop yield, Pudoc, Wageningen, Simulation Monographs.\nGash, J. H. C., 1979, An analytical model of rainfall interception by forests, Q. J. Roy. Meteor. Soc., 105, 43–55, doi:1026 10.1002/qj.497105443041027.\nLiu, S., 1998, Estimation of rainfall storage capacity in the canopies of cypress wetlands and slash pine uplands in North-Central Florida, J. Hydr., 207, 32–41, doi: 10.1016/S0022-1694(98)00115-2.\nPitman, J., 1989, Rainfall interception by bracken in open habitats—relations between leaf area, canopy storage and drainage rate, J. Hydr. 105, 317–334, doi: 10.1016/0022-1694(89)90111-X.\nSeibert, J., Vis, M. J. P., Kohn, I., Weiler, M., and Stahl, K., 2018, Technical note: Representing glacier geometry changes in a semi-distributed hydrological model, Hydrol. Earth Syst. Sci., 22, 2211–2224, https://doi.org/10.5194/hess-22-2211-2018.\nVan Dijk, A. I. J. M., and Bruijnzeel, L. A., 2001, Modelling rainfall interception by vegetation of variable density using an adapted analytical model, Part 2, Model validation for a tropical upland mixed cropping system, J. Hydr., 247, 239–262.\nVertessy, R., and Elsenbeer, H., 1999, Distributed modeling of storm ﬂow generation in an amazonian rain forest catchment: effects of model parameterization, Water Resour. Res., 35, 2173–2187. doi: 10.1029/1999WR9000511257.\nWang, X., Huo, Z., Feng, S., Guo, P., and Guan, H. 2016, Estimating groundwater evapotranspiration from irrigated cropland incorporating root zone soil texture and moisture dynamics, J. Hydrol., 543, 501–509, https://doi.org/10.1016/j.jhydrol.2016.10.027.\nWigmosta, M. S., Lane, L. J., Tagestad, J. D., and Coleman A. M., 2009, Hydrologic and erosion models to assess land use and management practices affecting soil erosion, J. Hydrol. Eng., 14, 27-41.\nXie, X. and Cui, Y., 2011, Development and test of SWAT for modeling hydrological processes in irrigation districts with paddy rice, J. Hydrol., 396, pp. 61-71.\nYang, F., Zhang, G., Yin, X., Liu, Z., and Huang, Z., 2011, Study on capillary rise from shallow groundwater and critical water table depth of a saline-sodic soil in western Songnen plain of China, Environ. Earth Sci. 64, 2119–2126, https://doi.org/10.1007/s12665-011-1038-4.\nZammouri, M., 2001: Case study of water table evaporation at Ichkeul Marshes (Tunisia), J. Irrig. Drain. Eng. 127, 265–271.",
    "crumbs": [
      "Model documentation",
      "Land models",
      "Land Hydrology SBM"
    ]
  },
  {
    "objectID": "index.html#quick-overview",
    "href": "index.html#quick-overview",
    "title": "Wflow.jl",
    "section": "Quick overview",
    "text": "Quick overview\n\n\n\n\n  \n    \n      Installation guide\n    \n  \n  \n    \n      How do I use Wflow.jl?\n    \n  \n  \n    \n      Frequently asked questions\n    \n  \n  \n    \n      Model documentation\n    \n  \n  \n    \n      Changelog",
    "crumbs": [
      "Home",
      "Wflow.jl"
    ]
  },
  {
    "objectID": "home/case_studies.html",
    "href": "home/case_studies.html",
    "title": "Case studies",
    "section": "",
    "text": "Reliable hydrological models for the Rhine and the Meuse river basins are necessary for short-term forecasting of river flows and long-term predictions for strategic water management planning. In collaboration with Rijkswaterstaat, Deltares is developing a new line of models for the Rhine and the Meuse basins. The models will be used for forecasting and to estimate the impact of climate change on water resources and extreme streamflow. In the model development, we aim to improve hydrological predictions by including relevant processes in the model schematization. The modularity of the wflow framework is ideal for this as we can easily evaluate the combination of different vertical and lateral model components. For example, the local inertial routing for river and overland flow enables us to consider retention of water in the floodplains, which is likely to improve extreme streamflow predictions.",
    "crumbs": [
      "Home",
      "Case studies"
    ]
  },
  {
    "objectID": "home/case_studies.html#wflow-models-for-the-meuse-and-rhine",
    "href": "home/case_studies.html#wflow-models-for-the-meuse-and-rhine",
    "title": "Case studies",
    "section": "",
    "text": "Reliable hydrological models for the Rhine and the Meuse river basins are necessary for short-term forecasting of river flows and long-term predictions for strategic water management planning. In collaboration with Rijkswaterstaat, Deltares is developing a new line of models for the Rhine and the Meuse basins. The models will be used for forecasting and to estimate the impact of climate change on water resources and extreme streamflow. In the model development, we aim to improve hydrological predictions by including relevant processes in the model schematization. The modularity of the wflow framework is ideal for this as we can easily evaluate the combination of different vertical and lateral model components. For example, the local inertial routing for river and overland flow enables us to consider retention of water in the floodplains, which is likely to improve extreme streamflow predictions.",
    "crumbs": [
      "Home",
      "Case studies"
    ]
  },
  {
    "objectID": "home/case_studies.html#operational-flood-forecasting-in-australia",
    "href": "home/case_studies.html#operational-flood-forecasting-in-australia",
    "title": "Case studies",
    "section": "Operational flood forecasting in Australia",
    "text": "Operational flood forecasting in Australia\nIn Australia, there was a need for high-resolution, fast and accurate rainfall-runoff models to provide boundary conditions for a fast and detailed flood inundation model (SFINCS). The domain of the flood model covers the entire North and East Coast of Australia. Although many gauging stations are available to provide real-time information, many rivers are not covered. For these locations, wflow_sbm models are used to provide this real-time information. Additionally, these models are used to provide projections for potential future scenarios. Using the HydroMT library, all wflow_sbm models were automatically built. The high level of flexibility in spatial and temporal resolution, combined with the physics-based nature of the concept, makes Wflow_sbm particularly suitable for ungauged basins. Furthermore, the model is detailed and computationally efficient enough for coupling with the fast flood inundation model SFINCS.\n\nThe results of this proof of concept are very promising. Technically, we were able to quickly set up the wflow_sbm models, couple them to the flood inundation models (SFINCS), and run the models operationally under the Delft-FEWS platform. Model validation was conducted for two basins by comparing the results of Wflow_sbm against observations and the results of calibrated URBS models. This validation demonstrated that the uncalibrated Wflow_sbm model results were already quite satisfactory, especially given the complex nature of these basins, which include several small and large reservoirs. We could also show the potential for further calibration by adjusting the KsatHorFrac parameter.\nDe Kleermaeker, S., Leijnse, T., Morales, Y., Druery, C., & Maguire, S. (2022). Developing a real-time data and modelling framework for operational flood inundation forecasting in Australia. In Hydrology & Water Resources Symposium 2022 (HWRS 2022): The Past, the Present, the Future. Engineers Australia. https://search.informit.org/doi/10.3316/informit.916755150845355",
    "crumbs": [
      "Home",
      "Case studies"
    ]
  },
  {
    "objectID": "home/case_studies.html#simulating-plastic-transport-in-thailand",
    "href": "home/case_studies.html#simulating-plastic-transport-in-thailand",
    "title": "Case studies",
    "section": "Simulating plastic transport in Thailand",
    "text": "Simulating plastic transport in Thailand\nFor the Pollution Control Board of the Government of Thailand and the World Bank, we supported a material flow analysis of plastics in Thailand using wflow. Plastic pollution is a growing global issue. Plastic waste enters rivers and is transported to the ocean where it persists and threatens the health of the ocean, seas and coasts. The initial movement of plastic waste is in many cases triggered by runoff from (heavy) rainfall and transported by water flow towards small streams and rivers. Therefore there is strong relation to rainfall-runoff processes, which can be modeled using high-resolution rainfall-runoff models.\nIn this study we applied the wflow_sbm model in combination with a fate-and-transport and water quality model (DelWaq) to simulate the movement of plastics through five large river basins and on three island and coastal zones (Krabi, Phuket, and Ko Samui; see screenshot of the model below) in Thailand. Together with our partners Panya Consultants and HII, we were able to identify hotspots of plastic pollution, estimate how much plastic waste would end up in the Gulf of Thailand and recommend priority areas for reducing plastic waste reaching the sea.\n\nThe wflow_sbm models for the five large basins were calibrated. The presence of large dams and reservoirs complicated calibration, but with the input for the dam operation, the model performance for these basins could be largely improved. The figure below shows the calibrated model results for the Chao Phraya, just upstream of Bangkok. The input from the hydrological wflow_sbm model was used as input for the fate and transport model to assess the amount of plastic transported to the ocean.\n\nLink to World Bank report: https://www.worldbank.org/en/country/thailand/publication/plastic-waste-material-flow-analysis-for-thailand",
    "crumbs": [
      "Home",
      "Case studies"
    ]
  },
  {
    "objectID": "getting_started/install.html",
    "href": "getting_started/install.html",
    "title": "Installing wflow",
    "section": "",
    "text": "Wflow can be used in two different ways, depending on the required use of the code:\nBelow we describe how to install both versions of wflow.",
    "crumbs": [
      "Getting started",
      "Installing wflow"
    ]
  },
  {
    "objectID": "getting_started/install.html#installing-as-julia-package",
    "href": "getting_started/install.html#installing-as-julia-package",
    "title": "Installing wflow",
    "section": "Installing as Julia package",
    "text": "Installing as Julia package\nWflow is a Julia package that can be installed in several ways. Below, we show how to install wflow from Julia’s package repository and how to install the latest version from GitHub.\nFirst, download and install the current stable release of Julia.\nIf you are new to Julia, it might be a good idea to check out the REPL. You can also find additional learning resources at julialang.org/learning.\n\nInstall from Julia’s package repository\nTo access Julia’s package manager, press ] in the Julia REPL. To get back to the Julia REPL, press backspace or ^C.\n\n\n\n\n\n\nTip\n\n\n\nIf you haven’t used Julia in a while, it’s a good idea to run up to update your packages.\npkg&gt; up\n\n\nTo access Julia’s package manager and install wflow, use:\npkg&gt; add Wflow\nThis process can take a while, especially on the first run, as compatible dependencies are automatically resolved and installed from the Pkg General registry.\n\n\nInstall from GitHub\nYou can also install wflow from the master branch on the repository as follows:\npkg&gt; add Wflow:Wflow#master\nThis command tracks the master branch and updates to the latest commit on that branch when you run update, or simply up, in the Pkg REPL. The add installs wflow in your home directory under .julia/packages/Wflow. Note that packages installed under packages by add should not be changed in the directory, as the change could disrupt Pkg’s automatic dependency handling.\nIf you want to modify any files in the repository, you need to do a development install. This can be done using:\npkg&gt; dev Wflow:Wflow\nThis will clone the git repository, place it under your home directory in .julia/dev/Wflow, and add the wflow package to your project environment. To receive updates, you’ll need to pull the latest changes manually using git pull. Additionally, the --local option can be passed to ensure that the package is installed in the current project environment (instead of the .julia/dev/Wflow folder).\n\n\nCheck installation of wflow\nFinally, go back to the Julia REPL and try to load wflow:\njulia&gt; using Wflow\nThe first time you do this, it may take longer as any new or changed packages need to be precompiled to enable faster loading on subsequent uses. No error messages should appear, which indicates that you have successfully installed wflow.\nBefore concluding this section, we recommend a few tools that can make using and developing Julia code easier.\n\n\n\n\n\n\nTip\n\n\n\nThere is a section on editors and IDEs for Julia on https://julialang.org/, scroll down to see it. We use and recommend Microsoft’s free and open source Visual Studio Code. When combined with the Julia extension it provides a powerful and interactive development experience.\n\n\n\n\n\n\n\n\nTip\n\n\n\nIf you plan to modify the code of wflow, we recommend installing the Revise.jl package. This package allows you to modify code and use the changes without restarting Julia. Install it with add Revise from the Pkg REPL. Then create a file called .julia/config/startup.jl, and put using Revise there. This will load Revise every time you start a Julia session.",
    "crumbs": [
      "Getting started",
      "Installing wflow"
    ]
  },
  {
    "objectID": "getting_started/install.html#installing-the-compiled-executable",
    "href": "getting_started/install.html#installing-the-compiled-executable",
    "title": "Installing wflow",
    "section": "Installing the compiled executable",
    "text": "Installing the compiled executable\nBinaries of wflow_cli can be downloaded from our website download.deltares.nl, and are currently available for Windows. Download and install the .msi file. After installation, you will see two folders in the installation directory. Only the bin/wflow_cli is used. The artifacts folder contains binary dependencies such as netCDF.\nartifacts\\\nbin\\wflow_cli\nTo verify whether the installation was completed successfully, run wflow_cli with no arguments in the command line. This will display the following message:\nUsage: wflow_cli 'path/to/config.toml'",
    "crumbs": [
      "Getting started",
      "Installing wflow"
    ]
  },
  {
    "objectID": "getting_started/download_example_models.html",
    "href": "getting_started/download_example_models.html",
    "title": "Download example models",
    "section": "",
    "text": "For each wflow Model a test model is available that can help to understand the data requirements and the usage of each Model. The TOML configuration file per available model are listed in the Table below:\nThe associated Model files (input static, forcing and state files) can easily be downloaded and for this we share the following Julia code (per Model) that downloads the required files to your current working directory. For running these test model see also Usage and Command Line Interface.",
    "crumbs": [
      "Getting started",
      "Download example models"
    ]
  },
  {
    "objectID": "getting_started/download_example_models.html#wflow_sbm-kinematic-wave",
    "href": "getting_started/download_example_models.html#wflow_sbm-kinematic-wave",
    "title": "Download example models",
    "section": "wflow_sbm + kinematic wave",
    "text": "wflow_sbm + kinematic wave\n# urls to TOML and netCDF of the Moselle example model\ntoml_url = \"https://raw.githubusercontent.com/Deltares/Wflow.jl/master/Wflow/test/sbm_config.toml\"\nstaticmaps = \"https://github.com/visr/wflow-artifacts/releases/download/v0.2.9/staticmaps-moselle.nc\"\nforcing = \"https://github.com/visr/wflow-artifacts/releases/download/v0.2.6/forcing-moselle.nc\"\ninstates = \"https://github.com/visr/wflow-artifacts/releases/download/v0.2.6/instates-moselle.nc\"\n\n# create a \"data/input\" directory in the current directory\ntestdir = @__DIR__\ninputdir = joinpath(testdir, \"data/input\")\nisdir(inputdir) || mkpath(inputdir)\ntoml_path = joinpath(testdir, \"sbm_config.toml\")\n\n# download resources to current and input directories\ndownload(staticmaps, joinpath(inputdir, \"staticmaps-moselle.nc\"))\ndownload(forcing, joinpath(inputdir, \"forcing-moselle.nc\"))\ndownload(instates, joinpath(inputdir, \"instates-moselle.nc\"))\ndownload(toml_url, toml_path)",
    "crumbs": [
      "Getting started",
      "Download example models"
    ]
  },
  {
    "objectID": "getting_started/download_example_models.html#wflow_sbm-groundwater-flow",
    "href": "getting_started/download_example_models.html#wflow_sbm-groundwater-flow",
    "title": "Download example models",
    "section": "wflow_sbm + groundwater flow",
    "text": "wflow_sbm + groundwater flow\n# urls to TOML and netCDF of the Moselle example model\ntoml_url = \"https://raw.githubusercontent.com/Deltares/Wflow.jl/master/Wflow/test/sbm_gwf_config.toml\"\nstaticmaps = \"https://github.com/visr/wflow-artifacts/releases/download/v0.2.3/staticmaps-sbm-groundwater.nc\"\nforcing = \"https://github.com/visr/wflow-artifacts/releases/download/v0.2.1/forcing-sbm-groundwater.nc\"\n\n# create a \"data/input\" directory in the current directory\ntestdir = @__DIR__\ninputdir = joinpath(testdir, \"data/input\")\nisdir(inputdir) || mkpath(inputdir)\ntoml_path = joinpath(@testdir, \"sbm_gwf_config.toml\")\n\n# download resources to current and data dirs\ndownload(staticmaps, joinpath(inputdir, \"staticmaps-sbm-groundwater.nc\"))\ndownload(forcing, joinpath(inputdir, \"forcing-sbm-groundwater.nc\"))\ndownload(toml_url, toml_path)",
    "crumbs": [
      "Getting started",
      "Download example models"
    ]
  },
  {
    "objectID": "getting_started/download_example_models.html#wflow_sediment",
    "href": "getting_started/download_example_models.html#wflow_sediment",
    "title": "Download example models",
    "section": "wflow_sediment",
    "text": "wflow_sediment\n# urls to TOML and netCDF of the Moselle example model\ntoml_url = \"https://raw.githubusercontent.com/Deltares/Wflow.jl/master/Wflow/test/sediment_config.toml\"\nstaticmaps = \"https://github.com/visr/wflow-artifacts/releases/download/v0.3.0/staticmaps-moselle-sed.nc\"\nforcing = \"https://github.com/visr/wflow-artifacts/releases/download/v0.2.3/forcing-moselle-sed.nc\"\ninstates = \"https://github.com/visr/wflow-artifacts/releases/download/v0.3.0/instates-moselle-sed.nc\"\n\n# create a \"data/input\" directory in the current directory\ntestdir = @__DIR__\ninputdir = joinpath(testdir, \"data/input\")\nisdir(inputdir) || mkpath(inputdir)\ntoml_path = joinpath(@__DIR__, \"sediment_config.toml\")\n\n# download resources to current and data dirs\ndownload(staticmaps, joinpath(inputdir, \"staticmaps-moselle-sed.nc\"))\ndownload(forcing, joinpath(inputdir, \"forcing-moselle-sed.nc\"))\ndownload(instates, joinpath(inputdir, \"instates-moselle-sed.nc\"))\ndownload(toml_url, toml_path)",
    "crumbs": [
      "Getting started",
      "Download example models"
    ]
  },
  {
    "objectID": "developments/model_struct.html",
    "href": "developments/model_struct.html",
    "title": "Model structure",
    "section": "",
    "text": "Below the Julia composite type that represents all different aspects of a Wflow.Model, such as the domain and shared parameters, routing concepts, land model, clock, model type, configuration and input and output.\nstruct Model{R &lt;: Routing, L &lt;: AbstractLandModel, T &lt;: AbstractModelType} &lt;:\n       AbstractModel{T}\n    config::Config                  # all configuration options\n    domain::Domain                  # domain connectivity (network) and shared parameters \n    routing::R                      # routing model (horizontal fluxes), moves along network\n    land::L                         # land model simulating vertical fluxes, independent of each other\n    clock::Clock                    # to keep track of simulation time\n    reader::NCReader                # provides the model with dynamic input\n    writer::Writer                  # writes model output\n    type::T                         # model type\nend\nThe domain field represents network (including connectivity) information of different modelling domains as the river, land, or subsurface domain and it contains shared model parameters that can be used across different model components. The routing field of the struct Model can contain different routing concepts for river, land and subsurface flow domains. For example, the wflow_sbm model with default configuration contains the kinematic wave routing concept for river, overland and lateral subsurface flow. The land field of the struct Model represents a land model, simulating vertical fluxes, for example soil erosion as part of the sediment model type and snow melt as part of the sbm model type.\n\n\n\n Back to top",
    "crumbs": [
      "Developments",
      "Model structure"
    ]
  },
  {
    "objectID": "developments/guide.html",
    "href": "developments/guide.html",
    "title": "Developers guide",
    "section": "",
    "text": "We welcome reporting of issues on our GitHub page. Please provide a minimum working example so we are able to reproduce the issue. Furthermore, we welcome contributions. We follow the ColPrac guide for collaborative practices. New contributors should make sure to read that guide.",
    "crumbs": [
      "Developments",
      "Developers guide"
    ]
  },
  {
    "objectID": "developments/guide.html#contributions-and-reporting-issues",
    "href": "developments/guide.html#contributions-and-reporting-issues",
    "title": "Developers guide",
    "section": "",
    "text": "We welcome reporting of issues on our GitHub page. Please provide a minimum working example so we are able to reproduce the issue. Furthermore, we welcome contributions. We follow the ColPrac guide for collaborative practices. New contributors should make sure to read that guide.",
    "crumbs": [
      "Developments",
      "Developers guide"
    ]
  },
  {
    "objectID": "developments/guide.html#styledecisions",
    "href": "developments/guide.html#styledecisions",
    "title": "Developers guide",
    "section": "Style/decisions",
    "text": "Style/decisions\n\nFor improved code readability, we decided to avoid non-ASCII characters for naming variables, structs, functions and macros. Using the non-ASCII character for built-in operators is still allowed. This change in naming convention is now in effect and all invalid uses of non-ASCII characters have been replaced by ASCII equivalents.",
    "crumbs": [
      "Developments",
      "Developers guide"
    ]
  },
  {
    "objectID": "changelog.html",
    "href": "changelog.html",
    "title": "Changelog",
    "section": "",
    "text": "All notable changes to this project will be documented in this file.\nThe format is based on Keep a Changelog, and this project adheres to Semantic Versioning.",
    "crumbs": [
      "Home",
      "Changelog"
    ]
  },
  {
    "objectID": "changelog.html#unreleased",
    "href": "changelog.html#unreleased",
    "title": "Changelog",
    "section": "Unreleased",
    "text": "Unreleased\n\nFixed\n\nInitialization of LateralSSF variables ssf and ssfmax with vertical hydraulic conductivity profile exponential_constant. Removed parameter khfrac from the computation, as it is already part of parameter kh_0.\nMutating BMI model control functions (update, update_until and finalize) and extended mutating BMI functions (load_state and save_state) should return nothing.\nAdded downloading of testdata to Dockerfile, to ensure an image was able to build.\nThe reservoir (reservoir_index_f) and lake (lake_index_f) indices as part of network.river were not correct. These were mapped to their own index in the SimpleReservoir and Lake struct, and not to the corresponding river index. This resulted in incorrect surface water abstractions from reservoir and lake volumes, and surface water abstractions were set at zero at the wrong river locations.\nWflow ZMQ server: allow JSON reading and writing of NaN and Inf values to avoid a JSON spec error. For example, during initialization of a wflow model, some (diagnostic) model variables are initialized with NaN values.\nLimit flux from River boundary of GroundwaterFlow to unconfined aquifer based on available river storage (from river flow routing).\nFixed computation of flow width in diagonal flow direction for model type sediment and fixed the computation of the remaining surface flow width (kinematic wave overland flow) for river cells in the diagonal flow direction. For both cases the width should be based on land area and flow length (area conservative).\nLimit external negative inflow for local inertial routing (maximum of 80% of river volume).\n\n\n\nChanged\n\nRemoved vertical concepts HBV and FLEXTopo.\nRemoved metadata macros (used by BMI). The variable unit is moved to the standard name mapping dictionaries, and the grid element type information is moved to a BMI helper function.\nRefactor the vertical SBM concept: divide the long struct SBM into different model components for interception, snow, glacier, (open water) runoff, soil, water demand and allocation stored in the struct LandHydrologySBM. Additionally, the atmospheric forcing and a shared vegetation parameterset are stored as separate fields in struct LandHydrologySBM (with soil model SbmSoilModel). The model component structs have model variables, parameters and boundary_conditions (if applicable), including associated functions for initializing and updating these model components. The original long update function of the SBM soil part has been split into separate functions.\nRefactor the lateral (routing) components: as for the vertical SBM concept split the structs into variables, parameters and boundary_conditions (if applicable).\nRefactor the sediment concept: similar to the refactor of SBM concept, the sediment model has been split into three main structures. SoilLoss was split into rainfall_erosion, overland_flow_erosion and (total) soil_erosion concepts. OverlandFlowSediment has been split into transport_capacity, sediment_flux and to_river concepts. RiverSediment has been split into transport_capacity, potential_erosion, sediment_flux and concentrations concepts.\nTimestepping method parameters for solving the kinematic wave and local inertial approaches for river and overland flow are moved to a TimeStepping struct. The timestepping implementation for the kinematic wave is now similar to the local inertial method: a stable timestep is computed for each sub timestep (or a fixed sub timestep is used) as part of a while loop (for each model timestep).\nMap internal model variable and parameter names based on CSDMS Standard Names. The previous one to one mapping can be used to output model variables and parameters (TOML config file), but is not considered as part of the public API.\nRefactor TOML configuration file, also as a result of using internal (CSDMS) standard names. Most important changes include: there is now a distinction between static, cyclic and forcing input ([input.static], [input.cyclic] and [input.forcing]) without the need to specify the internal cyclic and forcing variables in a list (only an external name mapping is required), state variables are listed below the [state.variables] TOML section and use of more clearly defined TOML output sections.\nReplaced the variables that can exchange through BMI (list of model components) by a list of standard names below the [API] TOML section.\nUse the instantaneous routing water depth h at the previous model time step to limit open water evaporation and to set the river stage of the GroundwaterFlow model for the current model time step, as it is more accurate then using the average water depth h_av at the previous model time step.\nRemoved LoopVectorization dependency because of compilation issues and the risk of deprecation for newer Julia versions. The tturbo macro has been replaced by the batch macro of Polyester, performance loss is acceptable.\nUse for the infiltration capacity of soil, represented by parameter infiltcapsoil, the actual saturated hydraulic conductivity at the soil surface based on parameters kv_0 and kvfrac. This parameter is now better linked to soil properties and setting this parameter directly by an external netCDF variable is not supported anymore.\nRemoved the GroundwaterExchange component that can be used to replace the kinematic wave lateral subsurface flow routing with an external groundwater model (e.g. Modflow). This feature has been added as part of the following MSc thesis work. One of the potential improvements recommended by this work was to re-activate the lateral subsurface flow routing for coupling with Modflow 6, as a rapid runoff (interflow) generating mechanism was missing and the current coupling did not yield satisfactory results. More work is needed to support this kind of coupling in a good way.\nRemoved default values for the following (sensitive) input parameters: khfrac, kv_0, kv, f, c, theta_s, theta_r, soilthickness, canopygapfraction, rootingdepth and pathfrac.\nChanged default values of h4 from -15849.0 to -16000.0, and cfmax from 3.75653 to 3.75.\nRemoved support for one layer models, and therefore also removed the topog_sbm_transfer__flag option. With this removal, the default soil layer thickness is set to [100, 300, 800].\nThe root length density fraction in unsaturated soil layers is scaled by using the total root length density fraction of the unsaturated zone. Plant transpiration can then be fully satisfied from the unsaturated zone when the water table intersects the root zone. For the transpiration from the saturated store the remaining potential transpiration is used in combination with the wet root fraction (root length density fraction in the saturated soil layers is not used).\n\n\n\nAdded\n\nSupport direct output of snow and glacier melt, and add computation of snow water equivalent (SWE).\nSupport computation and output of actual river water abstraction based on external negative inflow.",
    "crumbs": [
      "Home",
      "Changelog"
    ]
  },
  {
    "objectID": "changelog.html#v0.x-releases",
    "href": "changelog.html#v0.x-releases",
    "title": "Changelog",
    "section": "v0.x releases",
    "text": "v0.x releases\n\nv0.8.1 - 2024-08-27\n\nFixed\n\nReduce allocations in update of vertical SBM concept.\n\n\n\n\nv0.8.0 - 2024-08-19\n\nFixed\n\nAdded missing BMI function get_grid_size, it is used for unstructured grids, for example to get the length of arrays returned by BMI functions get_grid_x and get_grid_y.\nAdded a check for the solution of the quadratic equation as part of the Modified Puls approach for lake outflow. Lower limit should be zero (very small negative values can occur).\nLimit lake evaporation (added variable actevap) and lake outflow to prevent negative lake storage. The variable actevap has also been added to the reservoir module.\nThe set_states function for model type sbm with local inertial routing for river and land component.\nInflow to reservoir and lake locations for local inertial routing: 1) with floodplain routing, the floodplain discharge was not added to the inflow of these locations, 2) the to_river variable from overland flow and lateral subsurface flow was not added to the inflow of these locations.\nClose netCDF NCDataset with state variables in extended BMI function save_state.\nFor the computation of Gash interception model parameter e_r multiply the precipitation input with the canopy fraction (this was only done for the potential evapotranspiration input).\nFunction BMI.update_until could throw an InexactError: Int64 caused by a not whole number, representing how many times (steps) an update of a wflow model is required. This is fixed by using divrem for the computation of the number of steps in this function. An error is thrown when the absolute remainder of divrem is larger than eps(), or when the number of steps is negative.\nFixed internal and external broken links in docs.\nThe internal time step of the local inertial model (stable_timestep function) can get zero when LoopVectorization is applied (@tturbo) to the for loop of these functions. This issue occured on a virtual machine, Windows 10 Enterprise, with Intel(R) Xeon(R) Gold 6144 CPU (2 processors). This has been fixed by replacing @tturbo with reduction of Polyester.jl.\nFixed required states of the model type sbm_gwf: added h_av for the river and land domain.\nFor the constanthead boundary of GroundwaterFlow the head should not be changed (was set to top elevation of the aquifer if head &gt; top), and exfiltwater should be 0 for these boundary cells.\n\n\n\nChanged\n\nStop exposing scalar variables through BMI. The BMI.get_value_ptr function was not working correctly for scalar model variables (a view was applied). Only a few scalar model parameters are defined, and it is not expected that exposing these variables is required (e.g. for model coupling) while code changes for these variables (including struct fields) are required.\nThe local inertial routing (constant) river boundary condition depth at a ghost node (downstream river outlet) was set at 0.0 in the code and can now be provided through the model parameter netCDF file (riverdepth_bc). In addition, the boundary condition river length dl at a ghost node should be set through the model parameter netCDF file (riverlength_bc), providing this boundary condition through the [model] settings in the TOML file (model.riverlength_bc) has been deprecated.\nAs part of the vertical SBM concept: 1) add variable net_runoff (land runoff minus actual open water evaporation ae_openw_l) and 2) change the definition of variable runoff by removing the subtraction of ae_openw_l (total land runoff). The variable net_runoff is now input to the kinematic wave for overland flow (replaces the original runoff variable as input). The lower limit of the original runoff variable was set at zero, which may result in water balance errors. This lower limit was implemented in the Python version of wflow_sbm, to avoid a very slow kinematic wave solution for surface flow computation (no distinction between a kinematic wave for overland and river flow). When in the Python version of wflow_sbm the kinematic wave for surface flow was split into a river and land component, the lower limit was removed for river runoff (net_runoff_river), but not for land runoff.\nAlways use fractions for the computation of potential evapotranspiration (interception and transpiration) and potential evaporation (open water and soil). Replaced variable et_reftopot by crop coefficient kc (use of et_reftopot has been deprecated).\nFor improved code readability it is now discouraged to use non-ASCII characters for the names of variables, structs, functions and macros. Using the non-ASCII character for built-in operators is still allowed. This change in naming convention is now in effect and all invalid uses of non-ASCII characters have been replaced by ASCII equivalents. This change also impacts the TOML keys kv₀, θᵣ and θₛ. These keys have been replaced with the ASCII versions kv_0, theta_r and theta_s in v0.4.0 and the old keys are not supported anymore.\nDocs: 1) improved description of different model configurations in model-setup.md, also in relation to hydromt_wflow in docs, 2) citing info related to wflow_sbm publication in Geosci. Model Dev. (from in review to published).\nRoot water uptake reduction (Feddes): 1) extend critical pressure head parameters with h3_low and h3_high, 2) all critical pressure head parameters can be set (values for h1, h2 and h3 were fixed) and 3) the root water uptake reduction coefficient \\alpha can be set at 0 (default is 1) at critical pressure head h1 (through the model parameter alpha_h1).\nFor the actual transpiration computation in SBM, the potential transpiration is partitioned over the soil layers with roots according to the model parameter rootfraction (fraction of the total root length in a soil layer). Previously, for each soil layer (from top to bottom) the actual transpiration was computed, and the remaining potential transpiration was used in the next soil layer.\n\n\n\nAdded\n\nTotal water storage as an export variable for SBM concept. This is the total water stored per grid cell in millimeters. Excluded from this variable are the floodplain, lakes and reservoirs.\nChecks to see if all states are covered in the .toml file. If not all states are covered, an error is thrown. If there are more states specified than required, these states are ignored (with a warning in the logging), and the simulation will continue.\nSupport different vertical hydraulic conductivity profiles for the SBM concept. See also the following sections: The SBM soil water accounting scheme and Subsurface flow routing for a short description.\nLocal inertial routing to sbm_gwf model type.\nWater demand and allocation computations for model types sbm and sbm_gwf.\n\n\n\n\nv0.7.3 - 2024-01-12\n\nFixed\n\nDocumentation: add leakage term to the wflow_sbm figure, document external input parameter ksathorfrac and fix description of adding external inflow to the kinematic wave.\nFixed BMI functions (e.g. BMI.get_value) that deviated from BMI specifications (BasicModelInterface.jl), including function arguments, return types and the BMI specification that arrays are always flattened (this was not the case for variables stored as 2-dimensional arrays or as vector of SVectors).\nBump compat for NCDatasets to 0.13, 0.14.\nThe solution for lake outflow as part of the Modified Puls Approach. The inflow and outflow variables are defined for period Δt, and not at t1 and t2 (instantaneous) as in the original mass balance equation of the Modified Puls Approach. Because of this, the terms of the quadratic equation (and solution) were fixed.\nUse kvfrac for the computation of vertical saturated hydraulic conductivity at the bottom of the soil layer, since kvfrac is also used for the computation of vertical unsaturated flow.\n\n\n\nChanged\n\nFor cyclic parameters different cyclic time inputs are supported (only one common cyclic time (for example daily or monthly) was allowed).\nBMI: 1) added grid information (type and location) and whether a variable can be exchanged to metadata Structs, 2) extend model grid functions for wflow components that store variables on edges (local inertial model) with get_grid_edge_count and get_grid_edge_nodes.\n\n\n\nAdded\n\nFunctions for loading and saving states and getting the starttime in Unix time format. This is convenient for coupling with OpenDA (and other external) software. The set states functionality from the initialization function has been moved to a separate set_states function for each Model type, to support loading states independent of initialization.\n\n\n\n\nv0.7.2 - 2023-09-27\n\nFixed\n\nWater balance of modified Rutter interception model. The sum of the stemflow partitioning coefficient pt and free throughfall coefficient p could get larger than 1, resulting in an overestimation of stemflow and throughfall amounts and negative net interception amounts. And the first drainage amount dd, controlled by a change over time in canopy storage capacity cmax, should not be subtracted from precipitation to compute net interception.\nThe netinterception (net interception) computed by the modified Rutter interception model was stored as interception in SBM, while this should be the interception (interception loss by evaporation) output of the modified Rutter interception model. The interception of SBM is used to compute the total actual evapotranspiration actevap.\n\n\n\n\nv0.7.1 - 2023-06-30\n\nFixed\n\nState initialization of 1D floodplain volume. In the initialization function the wrong field name of type FloodPlainProfile was used (area instead of a).\n\n\n\n\nv0.7.0 - 2023-06-12\n\nFixed\n\nBMI.get_time_units now gets called on the model rather than the type, like all other BMI functions, except BMI.initialize. Also it returns “s” instead of “seconds since 1970-01-01T00:00:00”, in line with the BMI specification.\nAdded the interception component to total actual evapotranspiration actevap of SBM (was defined as the sum of soil evaporation, transpiration and open water evaporation).\n\n\n\nChanged\n\nThe time values returned in the BMI interface are no longer in seconds since 1970, but in seconds since the model start time. This is more in line with standard BMI practices.\nThe starttime was defined one model timestep Δt ahead of the actual model time (the initial conditions timestamp (state time)). As a consequence this was also the case for the current model time. To allow for an easier interpretation of wflow time handling, either through BMI or directly, the starttime is now equal to the state time, resulting in current model times without an offset.\nUsing more than 8 threads can result in too much overhead with Threads.@threads. After performance testing, this has been changed for kinematic wave routing and the vertical SBM concept to spawning tasks with Threads@spawn for number of threads &lt;= 8, where each task iterates over a chunk of size basesize. For more than 8 threads the low overhead threading Polyester.@batch (including the minbatch argument) is used. For local inertial routing the use of Threads.@threads has been changed to threaded loop vectorization (river and 1D floodplain local inertial momentum equation) and Polyester.@batch.\n\n\n\nAdded\n\nFor (regulated) lakes with rating curve of type 1 (H-Q table), lake storage above the maximumstorage (based on maximum water level from the H-Q table) is spilled instantaneously (overflow) from the lake.\nAdded support to use sum as a reducer function for csv and scalar output options.\n\n\n\n\nv0.6.3 - 2023-03-01\n\nFixed\n\nRemoved error when _FillValue is present in the time dimension of the forcing netCDF file. The simulation is allowed to continue with the attribute present, given that there are no missing values in the time dimension. This is checked by the code, and an error is thrown if this is the case.\nColumn index of daily lake rating curves. This was incorrectly based on dayofyear with a maximum of 365. The column index should be based on julian day (leap days are not counted).\n\n\n\nChanged\n\nNCDatasets version. Reading the time dimension of multifile netCDF file became very slow since NCDatasets v0.12.4, this issue has been solved in v0.12.11.\nStore the time dimension of the forcing netCDF file as part of the struct NCreader instead of calling dataset[\"time\"][:] each time step when loading forcing data.\n\n\n\nAdded\n\nShow total duration of simulation in the log file (info), and show the current time at execution of each timestep (debug).\nSupport for exponential decline in horizontal conductivity in the sbm_gwf concept. This can be enabled using the conductivity_profile setting (either “uniform” or “exponential”). If set to “exponential”, it exponentially reduces the kh0 (or conductivity) based on the value of gwf_f to the actual horizontal conductivity (k).\nAn optional 1D floodplain schematization for the river flow inertial model, based on provided flood volumes as a function of flood depth per river cell. See also the following sections: SBM + Local inertial river and River and floodplain routing for a short description, and the following section for associated model parameters.\n\n\n\n\nv0.6.2 - 2022-09-01\n\nFixed\n\nTwo issues related to reservoir and lake locations as part of local inertial model: 1) added as boundary points to the update of overland flow, 2) fixed check reservoir and lake location in update river flow.\nLimit flow (qx, qy and q) in local inertial model when water is not available (set to zero).\nIn the grid output netCDFs, don’t set the _FillValue attribute, since the CF conventions don’t allow it.\nGlacier parameter g_sifrac needs to be converted during initialization (time dependent).\nThe check that the sum of adaptive timesteps (Δt) of the local inertial model (1D and 2D) does not exceed the model timestep.\n\n\n\nChanged\n\nChanged depth h for reservoir and lake locations as part of the river local inertial model from bankfull_depth to zero.\n\n\n\nAdded\n\nExternal inflow to the SBM + Local inertial river (1D) and land (2D) model configuration.\n\n\n\n\nv0.6.1 - 2022-04-26\n\nFixed\n\nFixed an error with the log file, when writing to a folder that does not (yet) exists. Now, the folder is created prior to writing the log file.\nFixed a MethodError for read_dims, thrown when reading netCDF data with NCDatasets.jl 0.12.3 or higher.\n\n\n\n\nv0.6.0 - 2022-04-14\n\nAdded\n\nThe FLEXTopo model.\nSet a (different) uniform value for each index of input parameters with an extra dimension. A list of values (instead of one uniform value) that should be equal to the length of the extra dimension can be provided in the TOML file. See also Modify parameters.\nModify input parameters with an extra dimension at multiple indices with different scale and offset values, through the TOML file. See also Modify parameters.\nAdded support for netCDF compression for gridded model output, through the option compressionlevel in the [output] section in the TOML file. The setting defaults to 0 (no compression), but all levels between 0 and 9 can be used.\n\n\n\nChanged\n\nRe-organized the documentation: moved explanation of different model concepts to a model documentation section, added a user guide to explain setting up the model, added new figures to the description of wflow_sbm.\nThe unit of lateral subsurface flow ssf of LateralSSF is now m^3 d^{-1}. The unit was m^3 t^{-1}, where t is the model timestep. Other flow variables are already stored independently from t, this allows for easier interpretation and to use states independently of t.\nChanged the reference level of water depth h and h_av of 2D overland flow (ShallowWaterLand) for cells containing a river from river bed elevation zb to cell elevation z.\n\n\n\nFixed\n\nFixed calculation of average water depth h_av of 2D overland flow (ShallowWaterLand) with the local inertial approach. The summation of h was not correct, resulting in too low values for h_av. For river cells of 2D overland flow h_av was only updated as part of the river domain (ShallowWaterRiver), this value is now also updated as part of the land domain (ShallowWaterLand).\nFixed the following two flow width issues for 2D overland flow of the local inertial model: 1) The flow widths xwidth and ywidth were mapped incorrectly (reversed) to the flow calculation in x and y direction, respectively. 2) For river cells the effective flow width for overland flow was not determined correctly: the riverwidth vector supplied to the function set_effective_flowwidth! covered the complete model domain and should have covered the river domain, resulting in incorrect river widths and thus incorrect effective flow widths for river cells.\n\n\n\n\nv0.5.2 - 2022-02-03\n\nChanged\n\nModel types sbm_gwf and hbv use the same approach for the calculation of the drain width dw as model type sbm.\nRenamed h_bankfull parameter to bankfull_depth for consistency between kinematic-wave and local-inertial river routing. When using the old name under the [input.lateral.river] section of the TOML file, it will work but it is suggested to update the name.\n\n\n\nAdded\n\nAdditional log messages and log file as output, see also Logging.\nOption to use the local inertial model for river flow as part of the sbm model type. See also SBM + Local inertial river.\nOption to use the local inertial model for 1D river flow combined with 2D overland flow as part of the sbm model type. See also SBM + Local inertial river (1D) and land (2D).\n\n\n\nFixed\n\nModel type hbv: the surface width for overland flow was not corrected with the river width.\nFixed use of absolute path for path_forcing in TOML file, which gave an error in wflow v0.5.1.\nFixed a crash when glacier processes are simulated as part of the hbv concept (Δt was not defined).\nWhen the surface flow width for overland flow is zero, the water level h of the kinematic wave should not be calculated, otherwise this results in NaN values. When the model is initialized from state files, q and h are set to zero for indices with a zero surface flow width.\nFixed how number of iterations its for kinematic wave river flow are calculated during initialization when using a fixed sub-timestep (specified in the TOML file). For a model timestep smaller than the fixed sub-timestep an InexactError was thrown.\nFixed providing a cyclic parameter when the netCDF variable is read during model initialization with ncread, this gave an error about the size of the netCDF time dimension.\nFixed CSV and netCDF scalar output of variables with dimension layer (SVector).\n\n\n\n\nv0.5.1 - 2021-11-24\n\nFixed\n\nFixed calculation of exfiltwater as part of the sbm_gwf model type. This was based directly on groundwater head above the surface level, without multiplying by the specific_yield, resulting in an overestimation of exfiltwater. This is required since the groundwater model estimates the head by dividing the volume by the specific yield or storativity of the aquifer. So, should the groundwater table rise above surface level, the head above surface level does not represent a water column one to one. (This also means the groundwater model (slightly) overestimates heads when the head rises above the surface level. However, this water is immediately removed, and the head will be set to surface level.)\n\n\n\nAdded\n\nOptional dir_input and dir_output keys in the TOML, which can be used to quickly change the path for all input or output files that are given as a relative path.\n\n\n\n\nv0.5.0 - 2021-11-12\n\nChanged\n\nScaling of potential capillary rise is replaced by a common approach found in literature, based on the water table depth zi, a maximum water depth cap_hmax beyond which capillary rise ceases, and a coefficient cap_n. See also Capillary rise. Multiplying the scaling factor with the ratio of model time step and basetimestep in the original approach resulted in (much) smaller capillary fluxes at sub-daily model time steps compared to daily model time steps, and is not used in the new approach. Parameters cap_hmax and cap_n can be set through the TOML file, parameter capscale of the previous approach is not used anymore.\n\n\n\nFixed\n\nConversion of GroundwaterFlow boundaries \\(\\SIb{}{m^3 d^{-1}}\\) as part of model concept sbm_gwf to \\(\\SI{m^3 s^{-1}}\\) for sub-daily model time steps. For the conversion the basetimestep (86400 s) should be used (and not the model time step).\n\n\n\n\nv0.4.1 - 2021-11-04\n\nChanged\n\nThe \\alpha parameter of the kinematic wave has a fixed value now and is not updated because of changes in water height (this could result in large water balance errors). See also Surface routing.\nCyclic input for other structs than vertical are also now supported (for example cyclic inflow to the river).\nMoved update_forcing! and update_cyclic! functions to the run function. It is now easier to implement a custom run function with custom loading of input data (forcing and cyclic parameters).\n\n\n\nAdded\n\nCheck if reservoirs and lakes have downstream nodes. Without downstream nodes is not supported and in that case an error message is thrown that is easier to understand than the previous one: “ArgumentError: Collection is empty, must contain exactly 1 element.”\nFor the input.path_forcing TOML setting we use Glob.jl to expand strings like \"data/forcing-year-*.nc\" to a set of netCDF files that are split in time.\nExternal water inflow (supply/abstractions) added to the kinematic wave inflow in m3/s. It is added/removed to sf.qlat[v] before computing the new q[v] with the kinematic wave equation.\nFixed values for forcing parameters are supported, see also Fixed forcing values.\n\n\n\nAdded\n\nOption to use the local inertial model for river flow as part of the SBM + Kinematic wave. See also SBM + Local inertial river.\n\n\n\nFixed\n\nRiver inflow for reservoirs and lakes in the kinematic wave. This inflow was based on sf.q[v] at the previous time step, and this has been fixed to the current time step.\n\n\n\n\nv0.4.0 - 2021-09-02\n\nChanged\n\nChanged length units for lateral subsurface flow component from millimeter to meter. This means that state netCDF files from previous versions can only be reused if ssf is divided by 10^9.\nAdd snow and glacier processes to wflow_sbm figure of the documentation.\n\n\n\nAdded\n\nMulti-threading of vertical SBM concept and lateral kinematic wave components (overland, river and subsurface flow) of wflow_sbm model SBM + Kinematic wave.\nImproved error message for CSV Reducer.\nThe TOML keys kv₀, θᵣ and θₛ have been replaced with the ASCII versions kv_0, theta_r and theta_s, to avoid encoding issues with certain text editors. The old keys still work as well.\n\n\n\nFixed\n\nCalculation of volumetric water content of vertical SBM (soil layers and root zone).\nUpdate of satwaterdepth in SBM (evaporation was only subtracted from a local variable, and not from sbm.satwaterdepth).\nFixed the index lowerlake_ind of NaturalLake. Linked lakes were not simulated correctly (flows between upstream and downstream lake).\nInterpolation function interpolate_linear(x, xp, fp) for CSV tables lakes. When x was larger or smaller than xp, maximum(xp) or minimum(xp) was returned instead of maximum(fp) or minimum(fp).\nFixed model timestep of reservoirs (SimpleReservoir) and lakes (NaturalLake) in relation to precipitation and evapotranspiration fluxes. This was set to the fixed wflow basetimestep of 86400 s, and should be set to the actual model time step from the TOML configuration file.\nAdd flux from Drainage (GroundwaterFlow) in the sbm_gwf_model to the overland flow component instead of the river component of the kinematic wave.\nFixed option constanthead = false (TOML file), constant_head field of GroundwaterFlow was not defined in this case. Fixed this by initializing empty fields (Vector) for struct ConstantHead.\nFixed return max(0, boundary.flux[index]) to return max(0, flux) the flux should be returned when cell is dry, no negative value allowed.\nFixed path to initialize lake to: dirname(static_path)\nFixed outflow = 0, when lake level is below lake threshold. Before a negative value could enter the log function and model would fail.\nFixed the lake storage initialization. For continuation runs (reinit = false), this caused the lake to be reset to the initial conditions instead of the saved state.\n\n\n\n\nv0.3.1 - 2021-05-19\n\nFixed\n\nIgnore extra dimensions in input netCDFs if they are size 1\n\n\n\n\nv0.3.0 - 2021-05-10\n\nChanged\n\nNew deposition process for coarse sediment in the reservoirs with a new parameter restrapefficiency in the sediment model.\nNew variables added to the LandSediment and RiverSediment structs in order to save more output from the sediment model.\nAdded variables volume and inwater to SurfaceFlow struct, this is convenient for the coupling with the water quality model Delwaq.\nRiver water level (h) and discharge (q) forced directly into the RiverSediment struct (instead of using the OverlandFlowSediment struct first).\nRequire Julia 1.6 or later.\n\n\n\nAdded\n\nModify model parameters and forcing through the TOML file (see Modify parameters).\nRun wflow_sbm (SBM + kinematic wave) in two parts (until recharge and after subsurface flow) from BMI, including the option to switch off the lateral subsurface component of wflow_sbm.\nSupport more netCDF dimension and axis order variants.\n\n\n\nFixed\n\nCorrected a bug in sediment deposition in the river (case when incoming sediment load is more than the river transport capacity).\nFixed update of snow and glacierstore fields of HBV and SBM concepts by the glacier_hbv module.\n\n\n\n\nv0.2.0 - 2021-03-26\n\nChanged\n\nRemoved dependency of the f model parameter of wflow_sbm on the parameters \\theta_{s}, \\theta_{r} and M. This approach is used in Topog_SBM, but not applicable for wflow_sbm. The f parameter needs to be provided as part of the netCDF model parameter file.\nGrid properties as cell length and elevation now stored as part of the model.land.network component and not as part of the vertical model components, as it is not used by these components. altitude (elevation) should now be provided as part of the [input] section of the TOML configuration file, and not as part of the [input.vertical] section.\nRemoved parameter \\theta_{e} from SBM struct (not used in update). Parameters \\theta_{s} and \\theta_{r} included separately (instead of \\theta_{e}) in LateralSSF struct, now directly linked to SBM parameters.\nImprove error messages (netCDF and cyclic flow graph).\n\n\n\nAdded\n\nExport of netCDF scalar timeseries (separate netCDF file from gridded timeseries). This also allows for importing these timeseries by Delft-FEWS (General Adapter).\n\n\n\nFixed\n\nModel parameter Manning’s n now used during the update of the struct SurfaceFlow, to change the related \\alpha parameter of the kinematic wave for channel flow.",
    "crumbs": [
      "Home",
      "Changelog"
    ]
  },
  {
    "objectID": "developments/index.html",
    "href": "developments/index.html",
    "title": "Developments",
    "section": "",
    "text": "Changelog\n    \n  \n  \n    \n      Developers guide\n    \n  \n  \n    \n      Model structure\n    \n  \n\n\n\n\n\n\n Back to top",
    "crumbs": [
      "Developments"
    ]
  },
  {
    "objectID": "getting_started/building_a_model.html",
    "href": "getting_started/building_a_model.html",
    "title": "Building a model from scratch",
    "section": "",
    "text": "hydroMT is a Python package, developed by Deltares, to build and analyze hydro models. It provides a generic model api with attributes to access the model schematization, (dynamic) forcing data, results and states.\nThe wflow plugin hydroMT-wflow of hydroMT can be used to build and analyze the following model configurations:\n\nwflow_sbm + kinematic wave routing\nwflow_sbm + local inertial river and floodplain\nwflow_sbm + local inertial river (1D) and land (2D)\nwflow_sediment\n\nTo learn more about the wflow plugin of this Python package, we refer to the hydroMT-wflow documentation.\nTo inspect or modify (for example in QGIS) the netCDF static data of these wflow models it is convenient to export the maps to a raster format. This can be done as part of the hydroMT-wflow plugin, see also the following example. It is also possible to create again the netCDF static data file based on the modified raster map stack.",
    "crumbs": [
      "Getting started",
      "Building a model from scratch"
    ]
  },
  {
    "objectID": "getting_started/building_a_model.html#hydromt-wflow",
    "href": "getting_started/building_a_model.html#hydromt-wflow",
    "title": "Building a model from scratch",
    "section": "",
    "text": "hydroMT is a Python package, developed by Deltares, to build and analyze hydro models. It provides a generic model api with attributes to access the model schematization, (dynamic) forcing data, results and states.\nThe wflow plugin hydroMT-wflow of hydroMT can be used to build and analyze the following model configurations:\n\nwflow_sbm + kinematic wave routing\nwflow_sbm + local inertial river and floodplain\nwflow_sbm + local inertial river (1D) and land (2D)\nwflow_sediment\n\nTo learn more about the wflow plugin of this Python package, we refer to the hydroMT-wflow documentation.\nTo inspect or modify (for example in QGIS) the netCDF static data of these wflow models it is convenient to export the maps to a raster format. This can be done as part of the hydroMT-wflow plugin, see also the following example. It is also possible to create again the netCDF static data file based on the modified raster map stack.",
    "crumbs": [
      "Getting started",
      "Building a model from scratch"
    ]
  },
  {
    "objectID": "getting_started/building_a_model.html#data-requirements",
    "href": "getting_started/building_a_model.html#data-requirements",
    "title": "Building a model from scratch",
    "section": "Data requirements",
    "text": "Data requirements\nThe actual data requirements depend on the application of the Model and the Model type. Both forcing and static data should be provided in netCDF format, with the same grid definition for forcing and static data. The only exception is storage and rating curves for lakes, that should be provided in CSV format, see also Additional settings for waterbodies.\n\nForcing data:\n\nPrecipitation\nPotential evapotranspiration\nTemperature (optional, only needed for snow and glacier modelling)\n\n\nThe requirements for static data (including model parameters) depend on the model type. The following data is required for all model types, but not directly part of a model component:\n\nflow direction data (D8)\nriver map (location of the river)\nsub-catchment map (model domain)\n\nFor the flow direction (D8) data, the PCRaster ldd convention is used, see also PCRaster ldd. An approach to generate ldd data is to make use of the Python package pyflwdir:\n\nto upscale existing flow direction data as the 3 arcsec MERIT Hydro data (Yamazaki et al., 2019)\nor to derive flow directions from elevation data,\n\nsee also Eilander et al. (2021) for more information. Pyflwdir is also used by the hydroMT Python package described in the next paragraph. Another approach to generate ldd data is to make use of PCRaster functionality, see for example lddcreate.\nOptionally, but also not directly part of a model component are gauge locations, that are used to extract gridded data from certain locations, and lake and reservoir locations and areas (coverage).\nThe different supported model configurations are described in the section Model configurations. Wflow_sbm models have the Land Hydrology SBM model in common and input parameters for this model are described in the list of parameters and variables of this model. For wflow_sbm models there are two ways to include subsurface flow:\n\nThe kinematic wave approach (see section Subsurface flow routing) as part of the sbm model type. Parameters that are part of this component are described in the Lateral subsurface flow section. Input parameters for this component are derived from the soil model of the Land Hydrology SBM model (soil__thickness [mm], soil_water__saturated_volume_fraction [-] and soil_water__residual_volume_fraction [-]) and the land slope land_surface__slope input parameter. The parameter subsurface_water__horizontal-to-vertical_saturated_hydraulic_conductivity_ratio [-] is used to calculate the horizontal hydraulic conductivity at the soil surface kh_0.\nGroundwater flow (see section Groundwater flow component) as part of the sbm_gwf model type. For the unconfined aquifer the input parameters are described in the section Unconfined aquifer. The bottom (bottom) of the groundwater layer is derived from the provided soil__thickness [mm] and surface elevation land_surface__elevation [m] parameters as part of the static input. The area parameter is derived from the model grid. Parameters that are part of the boundary conditions of the unconfined aquifer are listed under Constant Head and Boundary conditions sections.\n\nThe default wflow_sbm model routing configuration makes use of the kinematic wave surface routing (river flow, overland flow or both) and input data required for the river and overland flow components is described in Surface flow. There is also the option to use the local inertial model as part of the wflow_sbm models (model types sbm and sbm_gwf):\n\nfor river flow, see also the Local inertial river and floodplain model.\nfor 1D river flow and 2D overland flow combined, see also the Local inertial river (1D) and land (2D) model.\n\nInput parameters for this approach are listed under River flow (local inertial), including the optional 1D floodplain schematization, and Overland flow (local inertial) sections.\nReservoirs or lakes can be part of the kinematic wave or local inertial model for river flow and input parameters are listed under the Reservoirs and Lakes sections.\nThe wflow_sediment model configuration consists of the Soil Erosion concept and the input parameters for this concept are listed under the Sediment section. The parameters of the routing Sediment Flux in overland flow concept are listed under the Overland flow section. The input parameters of the routing concept River Sediment Model are listed under the River flow section.\nExample models can be found in the Example models section.",
    "crumbs": [
      "Getting started",
      "Building a model from scratch"
    ]
  },
  {
    "objectID": "getting_started/building_a_model.html#references",
    "href": "getting_started/building_a_model.html#references",
    "title": "Building a model from scratch",
    "section": "References",
    "text": "References\n\nYamazaki, D., Ikeshima, D., Sosa, J., Bates, P. D., Allen, G. H. and Pavelsky, T. M.: MERIT Hydro: A high‐resolution global hydrography map based on latest topography datasets, Water Resour. Res., 2019WR024873, doi:10.1029/2019WR024873, 2019.\nEilander, D., van Verseveld, W., Yamazaki, D., Weerts, A., Winsemius, H. C., and Ward, P. J.: A hydrography upscaling method for scale-invariant parametrization of distributed hydrological models, Hydrol. Earth Syst. Sci., 25, 5287–5313, https://doi.org/10.5194/hess-25-5287-2021, 2021.",
    "crumbs": [
      "Getting started",
      "Building a model from scratch"
    ]
  },
  {
    "objectID": "getting_started/index.html",
    "href": "getting_started/index.html",
    "title": "Getting started",
    "section": "",
    "text": "Installing wflow\n    \n  \n  \n    \n      Download example models\n    \n  \n  \n    \n      Building a model\n    \n  \n\n\n\n\n\n\n Back to top",
    "crumbs": [
      "Getting started"
    ]
  },
  {
    "objectID": "getting_started/running_wflow.html",
    "href": "getting_started/running_wflow.html",
    "title": "Running a simulation",
    "section": "",
    "text": "Once you installed Julia and Wflow.jl, a simulation can be started from the command line as follows:\njulia -e \"using Wflow; Wflow.run()\" \"path/to/config.toml\"\nFurthermore, it is possible to write a Julia script to run a simulation. Example data to explore how this works can be found here.\nusing Wflow\ntoml_path = \"path/to/config.toml\"\nWflow.run(toml_path)\nJulia can also be used to modify settings after reading the settings file. In the example below, we show how to adjust the end date of the simulation.\nusing Dates\ntoml_path = \"path/to/config.toml\"\nconfig = Wflow.Config(toml_path)\nconfig.endtime = DateTime(\"2000-01-03T00:00:00\")\nWflow.run(config)",
    "crumbs": [
      "Getting started",
      "Running a simulation"
    ]
  },
  {
    "objectID": "getting_started/running_wflow.html#using-julia",
    "href": "getting_started/running_wflow.html#using-julia",
    "title": "Running a simulation",
    "section": "",
    "text": "Once you installed Julia and Wflow.jl, a simulation can be started from the command line as follows:\njulia -e \"using Wflow; Wflow.run()\" \"path/to/config.toml\"\nFurthermore, it is possible to write a Julia script to run a simulation. Example data to explore how this works can be found here.\nusing Wflow\ntoml_path = \"path/to/config.toml\"\nWflow.run(toml_path)\nJulia can also be used to modify settings after reading the settings file. In the example below, we show how to adjust the end date of the simulation.\nusing Dates\ntoml_path = \"path/to/config.toml\"\nconfig = Wflow.Config(toml_path)\nconfig.endtime = DateTime(\"2000-01-03T00:00:00\")\nWflow.run(config)",
    "crumbs": [
      "Getting started",
      "Running a simulation"
    ]
  },
  {
    "objectID": "getting_started/running_wflow.html#using-the-command-line-interface",
    "href": "getting_started/running_wflow.html#using-the-command-line-interface",
    "title": "Running a simulation",
    "section": "Using the command line interface",
    "text": "Using the command line interface\nIf you don’t need the extra features of using wflow as a library, but just want to run simulations, the command line interface makes it easier to do so. It consists of a single executable, wflow_cli that accepts a single argument, the path to a TOML configuration file.\nBinaries of wflow_cli can be downloaded from our website download.deltares.nl, and are currently available for Windows.\nAfter installing you can see three folders in the installation directory. It is only the bin/wflow_cli that is directly used. All three folders need to stay together however. The share folder contains TOML files with more information about the build.\nbin\\wflow_cli\nlib\nshare\nSimply running wflow_cli with no arguments will give the following message:\nUsage: wflow_cli \"path/to/config.toml\"\nNote that this only works if the bin folder is in your PATH. If you want to run it from any directory, you can add the bin folder to your PATH. Alternatively, you can run it from any location by specifying the full path to the executable. For example (but please adjust the path to your own installation):\n\"C:\\Program Files\\Deltares\\wflow\\wflow x.x.x\\wflow_cli\\bin\\wflow_cli.exe\" \"path/to/config.toml\"\nWhen starting a run, you will see basic run information on the screen, as well as a progress bar, that gives an estimate of how much time is needed to finish the simulation:\n┌ Info: Run information\n│   model_type = \"sbm\"\n│   starttime = CFTime.DateTimeStandard(2000-01-01T00:00:00)\n│   dt = 86400 seconds\n│   endtime = CFTime.DateTimeStandard(2000-12-31T00:00:00)\n└   nthreads() = 4\n\nProgress: 100%|██████████████████████████████████████████████████| Time: 0:00:27",
    "crumbs": [
      "Getting started",
      "Running a simulation"
    ]
  },
  {
    "objectID": "home/publications.html",
    "href": "home/publications.html",
    "title": "Publications",
    "section": "",
    "text": "For publications, please cite the following paper introducing Wflow.jl and describing the wflow_sbm concept, together with some case studies:\nvan Verseveld, W. J., Weerts, A. H., Visser, M., Buitink, J., Imhoff, R. O., Boisgontier, H., Bouaziz, L., Eilander, D., Hegnauer, M., ten Velden, C., and Russell, B., 2024. Wflow_sbm v0.7.3, a spatially distributed hydrological model: from global data to local applications. Geosci. Model Dev., 17, 3199–3234. https://doi.org/10.5194/gmd-17-3199-2024.\nTo cite a specific software version please use the DOI provided in the Zenodo badge , that points to the latest release. The DOIs of previous versions are also available at Zenodo. If you use a snapshot of the development (without a DOI) please cite as follows:\nvan Verseveld, Willem, Visser, Martijn, Buitink, Joost, Bouaziz, Laurène, Boisgontier, Hélène, Bootsma, Huite, Weerts, Albrecht, Baptista, Carlos Fernando, Pronk, Maarten, Eilander, Dirk, Hartgring, Sebastian, Dalmijn, Brendan, Hofer, Julian, Hegnauer, Mark, & Mendoza, Raul, (YEAR). Deltares/Wflow.jl: unstable-master. https://github.com/Deltares/Wflow.jl, obtained: DATE_OF_DOWNLOAD.",
    "crumbs": [
      "Home",
      "Publications"
    ]
  },
  {
    "objectID": "home/publications.html#citing-wflow",
    "href": "home/publications.html#citing-wflow",
    "title": "Publications",
    "section": "",
    "text": "For publications, please cite the following paper introducing Wflow.jl and describing the wflow_sbm concept, together with some case studies:\nvan Verseveld, W. J., Weerts, A. H., Visser, M., Buitink, J., Imhoff, R. O., Boisgontier, H., Bouaziz, L., Eilander, D., Hegnauer, M., ten Velden, C., and Russell, B., 2024. Wflow_sbm v0.7.3, a spatially distributed hydrological model: from global data to local applications. Geosci. Model Dev., 17, 3199–3234. https://doi.org/10.5194/gmd-17-3199-2024.\nTo cite a specific software version please use the DOI provided in the Zenodo badge , that points to the latest release. The DOIs of previous versions are also available at Zenodo. If you use a snapshot of the development (without a DOI) please cite as follows:\nvan Verseveld, Willem, Visser, Martijn, Buitink, Joost, Bouaziz, Laurène, Boisgontier, Hélène, Bootsma, Huite, Weerts, Albrecht, Baptista, Carlos Fernando, Pronk, Maarten, Eilander, Dirk, Hartgring, Sebastian, Dalmijn, Brendan, Hofer, Julian, Hegnauer, Mark, & Mendoza, Raul, (YEAR). Deltares/Wflow.jl: unstable-master. https://github.com/Deltares/Wflow.jl, obtained: DATE_OF_DOWNLOAD.",
    "crumbs": [
      "Home",
      "Publications"
    ]
  },
  {
    "objectID": "home/publications.html#publications-using-wflow",
    "href": "home/publications.html#publications-using-wflow",
    "title": "Publications",
    "section": "Publications using wflow",
    "text": "Publications using wflow\n\nPeer reviewed journal papers\nAerts, J. P. M., Hut, R. W., van de Giesen, N. C., Drost, N., van Verseveld, W. J., Weerts, A. H., and Hazenberg, P., 2022. Large-sample assessment of varying spatial resolution on the streamflow estimates of the wflow_sbm hydrological model. Hydrol. Earth Syst. Sci., 26, 4407–4430. https://doi.org/10.5194/hess-26-4407-2022.\nde Boer-Euser, T., Bouaziz, L., De Niel, J., Brauer, C., Dewals, B., Drogue, G., Fenicia, F., Grelier, B., Nossent, J., Pereira, F., Savenije, H., Thirel, G., Willems, P., 2017. Looking beyond general metrics for model comparison – lessons from an international model intercomparison study. Hydrol. Earth Syst. Sci. 21, 423–440. https://doi:10.5194/hess-21-423-2017.\nBouaziz, L.J.E., Fenicia, F., Thirel, G., de Boer-Euser, T., Buitink, J., Brauer, C.C., De Niel, J., Dewals, B.J., Drogue, G., Grelier, B., Melsen, L. A., Moustakas, S., Nossent, J., Pereira, F., Sprokkereef, E., Stam, J., Weerts, A.H., Willems, P., Savenije, H.H.G., Hrachowitz, M., 2021. Behind the scenes of streamflow model performance. Hydrol. Earth Syst. Sci., 25, 1069–1095. https://doi.org/10.5194/hess-25-1069-2021.\nBouaziz, L. J. E., Aalbers, E. E., Weerts, A. H., Hegnauer, M., Buiteveld, H., Lammersen, R., Stam, J., Sprokkereef, E., Savenije, H. H. G., and Hrachowitz, M., 2022. Ecosystem adaptation to climate change: the sensitivity of hydrological predictions to time-dynamic model parameters, Hydrol. Earth Syst. Sci., 26, 1295–1318. https://doi.org/10.5194/hess-26-1295-2022.\nBuskop, F.E., F. Sperna Weiland and B. van den Hurk, 2024. Amplifying exploration of regional climate risks: clustering future projections on regionally relevant impact drivers instead of emission scenarios, Environ. Res.: Climate, 3, 045030. https://iopscience.iop.org/article/10.1088/2752-5295/ad9f8f.\nCasson, D. R., Werner, M., Weerts, A., and Solomatine, D., 2018. Global re-analysis datasets to improve hydrological assessment and snow water equivalent estimation in a sub-Arctic watershed. Hydrol. Earth Syst. Sci., 22, 4685–4697. https://doi.org/10.5194/hess-22-4685-2018.\nDroppers, B., Rakovec, O., Avila, L., Azimi, S., Cortés-Torres N., De León Pérez, D., Imhoff, R., Francés, F., Kollet, S., Rigon, R., Weerts, A. & Samaniego, L, 2024. Multi-model hydrological reference dataset over continental Europe and an African basin. Sci Data, 11, 1009. https://doi.org/10.1038/s41597-024-03825-9.\nDroppers, B., Rakovec, O., Avila, L., Azimi, S., Cortés-Torres N., De León Pérez, D., Imhoff, R., Francés, F., Kollet, S., Rigon, R., Weerts, A. & Samaniego, L, 2024. Multi-model hydrological reference dataset over continental Europe and an African basin. Sci Data, 11, 1009. https://doi.org/10.1038/s41597-024-03825-9.\nEmerton, R.E., Stephens, E.M., Pappenberger, F., Pagano, T.C., Weerts, A.H., Wood, A.W., Salamon, P., Brown, J.D., Hjerdt, N., Donnelly, C., Baugh, C.A., Cloke, H.L., 2016. Continental and global scale flood forecasting systems. WIREs Water 3, 391–418. https://doi.org/10.1002/wat2.1137.\nGebremicael, T.G., Mohamed, Y.A., Van der Zaag, P., 2019. Attributing the hydrological impact of different land use types and their long-term dynamics through combining parsimonious hydrological modelling, alteration analysis and PLSR analysis. Science of The Total Environment, 660, 1155-1167, https://doi.org/10.1016/jscitotenv.2019.01.085.\nGiardino, A., Schrijvershof, R., Nederhoff, C.M., de Vroeg, H., Brière, C., Tonnon, P.-K., Caires, S., Walstra, D.J., Sosa, J., van Verseveld, W., Schellekens, J., Sloff, C.J., 2018. A quantitative assessment of human interventions and climate change on the West African sediment budget, Ocean & Coastal Management, 156, 249-265. https://doi.org/10.1016/j.ocecoaman.2017.11.008.\nHally, A., Caumont, O., Garrote, L., Richard, E., Weerts, A., Delogu, F., Fiori, E., Rebora, N., Parodi, A., Mihalović, A., Ivković, M., Dekić, L., van Verseveld, W., Nuissier, O., Ducrocq, V., D’Agostino, D., Galizia, A., Danovaro, E., Clematis, A., 2015. Hydrometeorological multi-model ensemble simulations of the 4 November 2011 flash flood event in Genoa, Italy, in the framework of the DRIHM project. Nat. Hazards Earth Syst. Sci. 15, 537–555. https://doi:10.5194/nhess-15-537-2015.\nHassaballah, K., Mohamed, Y., Uhlenbrook, S., and Biro, K., 2017. Analysis of streamflow response to land use and land cover changes using satellite data and hydrological modelling: case study of Dinder and Rahad tributaries of the Blue Nile (Ethiopia–Sudan), Hydrol. Earth Syst. Sci., 21, 5217–5242. https://doi.org/10.5194/hess-21-5217-2017.\nImhoff, R.O., Buitink, J., van Verseveld, W.J., Weerts, A.H., 2024. A fast high resolution distributed hydrological model for forecasting, climate scenarios and digital twin applications using wflow_sbm. Environmental Modelling & Software, 179, 106099. https://doi.org/10.1016/j.envsoft.2024.106099\nImhoff, R.O, van Verseveld, W.J., van Osnabrugge, B., Weerts, A.H., 2020. Scaling Point-Scale (Pedo)transfer Functions to Seamless Large-Domain Parameter Estimates for High-Resolution Distributed Hydrologic Modeling: An Example for the Rhine River. Water Resources Research, 56, e2019WR026807. https://doi.org/10.1029/2019WR026807.\nImhoff, R.O., van Verseveld, W., van Osnabrugge, B., Weerts, A.H., 2020. Ruimtelijk schaalbare hydrologische modelparameters uit open-source omgevingsdata: een voorbeeld voor de Rijn. Stromingen: vakblad voor hydrologen, 26(3), 19-36 https://edepot.wur.nl/540682.\nJeuken, A., Bouaziz, L., Corzo, G., Alfonso, L., 2016. Analyzing Needs for Climate Change Adaptation in the Magdalena River Basin in Colombia, in: Filho, W.L., Musa, H., Cavan, G., O’Hare, P., Seixas, J. (Eds.), Climate Change Adaptation, Resilience and Hazards, Climate Change Management. Springer International Publishing, pp. 329–344 https://doi.org/10.1007/978-3-319-39880-8.\nLópez López, P., Wanders, N., Schellekens, J., Renzullo, L.J., Sutanudjaja, E.H., Bierkens, M.F.P., 2016. Improved large-scale hydrological modelling through the assimilation of streamflow and downscaled satellite soil moisture observations. Hydrol. Earth Syst. Sci., 20, 3059–3076. https://doi.org/10.5194/hess-20-3059-2016.\nMendoza, R., van Verseveld, W., Seijger, C. and Weerts, A. (2025), Assessment of Saturated Hydraulic Conductivity-Depth Relationships and Extended Soil Column Thickness in Catchment Hydrological Modelling. Hydrological Processes, 39, e70149. https://doi.org/10.1002/hyp.70149\nPranoto, B., Soekarno, H., Hartulistiyoso, E., Nur Aidi, M., Sutrisno, D., Pohan, D., Radhika, Sutejo, B., Heru Kuncoro, A., Nahib, I., 2024. Integrating Flood Early Warning System (FEWS) for Optimizing Small Hydropower Sites: A West Java Case Study. EVERGREEN Joint Journal of Novel Carbon Resource Sciences & Green Asia Strategy, 11, 3, 2691-2699. https://www.tj.kyushu-u.ac.jp/evergreen/contents/EG2024-11_3_content/pdf/p2691-2699.pdf\nPurnamasari, D., Teuling, A. J., and Weerts, A. H., 2025. Identifying irrigated areas using land surface temperature and hydrological modelling: application to the Rhine basin. Hydrol. Earth Syst. Sci., 29, 1483–1503. https://doi.org/10.5194/hess-29-1483-2025\nRakovec, O., Weerts, A.H., Sumihar, J., Uijlenhoet, R., 2015. Operational aspects of asynchronous filtering for flood forecasting. Hydrol. Earth Syst. Sci., 19, 2911–2924, https://doi.org/10.5194/hess-19-2911-2015.\nRatri, D.N., A.H. Weerts, R. Muharsyah, K. Whan, A. Klein Tank, E. Aldrian, M. H. Hariadi, Calibration of ECMWF SEAS5 based streamflow forecast in Seasonal hydrological forecasting for Citarum river basin, West Java, Indonesia, Journal of Hydrology: Regional Studies,45,101305, https://doi.org/10.1016/j.ejrh.2022.101305.\nRusli, S.R., A.H. Weerts, A. Taufiq, V. Bense, 2021. Estimating water balance components and their uncertainty bounds in highly groundwater-dependent and data-scarce area: An example for the Upper Citarum basin, J. Hydrol. Regional Studies, https://doi.org/10.1016/j.ejrh.2021.100911.\nRusli, S.R., V.F. Bense, A. Taufiq, A.H. Weerts,2023. Quantifying basin-scale changes in groundwater storage using GRACE and one-way coupled hydrological and groundwater flow model in the data-scarce Bandung groundwater Basin, Indonesia, Groundwater for Sustainable Development,22, 100953, https://doi.org/10.1016/j.gsd.2023.100953.\nRusli, S.R., A.H. Weerts, S.M.T. Mustafa, D.E. Irawan, A. Taufiq, V.F. Bense, 2023. Quantifying aquifer interaction using numerical groundwater flow model evaluated by environmental water tracer data: Application to the data-scarce area of the Bandung groundwater basin, West Java, Indonesia, Journal of Hydrology: Regional Studies, 50, https://doi.org/10.1016/j.ejrh.2023.101585.\nRusli, S. R., Bense, V. F., Mustafa, S. M. T., and Weerts, A. H.,2024. The impact of future changes in climate variables and groundwater abstraction on basin-scale groundwater availability, Hydrol. Earth Syst. Sci., 28, 5107–5131, https://doi.org/10.5194/hess-28-5107-2024, https://doi.org/10.5194/hess-28-5107-2024.\nSchaller, N., Sillmann, J., Müller, M., Haarsma, R., Hazeleger, W., Hegdahl, T.J., Kelder, T., van den Oord, G., Weerts, A., Whan, K., 2020. The role of spatial and temporal model resolution in a flood event storyline approach in western Norway. Weather and Climate Extremes, doi: https://doi.org/10.1016/j.wace.2020.100259.\nSeizarwati, W. and M. Syahidah, 2021. Rainfall-Runoff Simulation for Water Availability Estimation in Small Island Using Distributed Hydrological Model wflow. IOP Conf. Ser.: Earth Environ. Sci., 930,012050, doi:10.1088/1755-1315/930/1/012050. https://iopscience.iop.org/article/10.1088/1755-1315/930/1/012050/pdf\nSperna Weiland, F.C., R.D. Visser, P. Greve, B. Bisselink, L. Brunner and A.H. Weerts, 2021. Estimating Regionalized Hydrological Impacts of Climate Change Over Europe by Performance-Based Weighting of CORDEX Projections, Frontiers of Water, https://doi.org/10.3389/frwa.2021.713537.\nTangdamrongsub, N., Steele-Dunne, S.C., Gunter, B.C., Ditmar, P.G., Weerts, A.H., 2015. Data assimilation of GRACE terrestrial water storage estimates into a regional hydrological model of the Rhine River basin. Hydrol. Earth Syst. Sci. 19, 2079–2100. https://doi:10.5194/hess-19-2079-2015.\nvan der Laan, E., P. Hazenberg, A.H. Weerts, 2024. Simulation of long-term storage dynamics of headwater reservoirs across the globe using public cloud computing infrastructure. Science of The Total Environment, 172678, https://doi.org/10.1016/j.scitotenv.2024.172678.\nvan Osnabrugge, B., Weerts, A.H., Uijlenhoet, R., 2017. genRE: A method to extend gridded precipitation climatology data sets in near real-time for hydrological forecasting purposes. Water Resources Research, 53. https://doi.org/10.1002/2017WR021201.\nvan Osnabrugge, B., Uijlenhoet, R., Weerts, A., 2019. Contribution of potential evaporation forecasts to 10-day streamflow forecast skill for the Rhine River, Hydrol. Earth Syst. Sci., 23, 1453–1467, https://doi.org/10.5194/hess-23-1453-2019.\nvan der Vat, M., Boderie, P., Bons, K.A., Hegnauer, M., Hendriksen, G., van Oorschot, M., Ottow, B., Roelofsen, F., Sankhua, R.N., Sinha, S.K., Warren, A., Young, W., 2019. Participatory Modelling of Surface and Groundwater to Support Strategic Planning in the Ganga Basin in India. Water, 11, 2443. https://doi.org/10.3390/w11122443.\nWannasin, C., Brauer, C. C., Uijlenhoet, R., van Verseveld, W. J., Weerts, A. H., 2021. Daily flow simulation in Thailand Part I: Testing a distributed hydrological model with seamless parameter maps based on global data. Journal of Hydrology: Regional Studies, 34, 1-19. https://doi.org/10.1016/j.ejrh.2021.100794.\nWannasin, C., Brauer, C. C., Uijlenhoet, R., van Verseveld, W. J., Weerts, A. H., 2021. Daily flow simulation in Thailand Part II: Unraveling effects of reservoir operation. Journal of Hydrology: RegionalStudies, 34, 1-17. https://doi.org/10.1016/j.ejrh.2021.100792.\nWang, X., Zhang, J., Babovic, V., 2016. Improving real-time forecasting of water quality indicators with combination of process-based models and data assimilation technique. Ecological Indicators 66, 428–439. https://doi:10.1016/j.ecolind.2016.02.016.\nZang, S., Weerts, A., van Verseveld, W. J., Li, Z., & Huang, P., 2025. Compound effects of river routing and local rainfall-runoff for inflow simulation of a large reservoir. Hydrological Sciences Journal. https://doi.org/10.1080/02626667.2025.2496280\n\n\nPhD, MSc, BSc Theses & Internship reports\nAbdelnour, A., 2022. Bias Correction of Climate Simulations to Assess Climate Change Impacts on Low Flows in the Rhine River, MSc thesis, Delft Universitry of technology, https://repository.tudelft.nl/islandora/object/uuid:50489399-cbd2-467f-9b82-98e5f3e371e9.\nAli, M.A., 2023. Machine learning for predicting spatially variable lateral hydraulic conductivity: a step towards efficient hydrological model calibration and global applicability, Intersnhip report, Deltares.\nArnal, L., 2014. An intercomparison of flood forecasting models for the Meuse River basin, MSc Thesis, Vrije Universiteit, Amsterdam, https://hal.inrae.fr/hal-02600749.\nAlkemade, G., 2019. Routing and calibration of distributed hydrological models, MSc Thesis, Vrije Universiteit, Amsterdam, Faculty of Science, Hydrology.\nAzadeh Karami Fard, 2015. Modeling runoff of an Ethiopian catchment with WFLOW, MSc. Thesis, Vrije Universiteit, Amsterdam.\nBenschop, J., 2023. The application of hybrid lateral routing in hydrological simulations of the Rhine catchment, MSc Thesis, Hydrology and Environmental Hydraulics Group, Wageningen University.\nBeusen, B., 2021. The effect of rooting depth on discharge and evapotranspiration in (semi-)arid areas, MSc Thesis, Hydrology and Quantitative Water Management Group, Wageningen University.\nBeusen, B., 2021. Plastic transport and the effect of climate change in the Rhine, Internship report, Deltares.\nBouaziz, L. J. E., 2021. Internal processes in hydrological models: A glance at the Meuse basin from space. Delft University of Technology, Delft, the Netherlands, Doctoral dissertation, https://doi.org/10.4233/uuid:09d84cc1-27e2-4327-a8c7-207a75952061.\nHartgring, S., 2023. On Forecasting the Rur River: Using hindcasts and forecasts of the 2021 flood event to improve understanding of flood forecasting in the Rur catchment. Delft University of Technology, Delft, the Netherlands, MSc thesis, http://resolver.tudelft.nl/uuid:2909d997-a983-490a-a588-87119998543a.\nJaime, D.E.V, 2021. Ensemble hydrological forecasts to derive extreme return periods: Case Study of the Overijsselse Vecht River using the wflow_sbm model, MSc thesis, Unesco IHE, Delft.\nLópez López, P., 2018. Application of Global Hydrological Datasets for River Basin Modelling Utrecht University, Utrecht, the Netherlands, pp. 1-214, Doctoral dissertation, http://dspace.library.uu.nl/handle/1874/364148.\nMaat, W.H., 2015. Simulating discharges and forecasting floods using a conceptual rainfall-runoff model for the Bolivian Mamoré basin, MSc Thesis, University of Twente, Enschede. https://essay.utwente.nl/67046/.\nvan Osnabrugge, B., 2020. Interpolate, simulate, assimilate: operational aspects of improving hydrological forecasts in the Rhine basin. Wageningen University, Doctoral dissertation, https://doi.org/10.18174/513157.\nRohrmueller, I., 2019. BENCHMARKING THE NEW WFLOW DISTRIBUTED HYDROLOGICAL MODEL, MSc Thesis, School of Engineering - Newcastle University.\nRusli, S.R., 2024. Deepening the quantitative understanding of groundwater systems in data-scarce areas: application in the Bandung Groundwater Basin, Indonesia. Wageningen University, Doctoral dissertation, https://doi.org/10.18174/640983.\nTretjakova, D., 2015. Investigating the effect of using fully-distributed model and data assimilation on the performance of hydrological forecasting in the Karasu catchment, Turkey, MSc thesis, Wageningen University.\nvan der Gaast, R.H., 2024. Evaluating the transferability of data-driven pedo-transfer functions for the wflow_sbm parameter KsatHorFrac in central and Western Europe. Universiteit Twente, Enschede, The Netherlands, https://essay.utwente.nl/103634/1/vandergaast_MA_ET.pdf.\nVerbrugge, M., 2019. Reservoir Operation Optimization, a case study in the Chao Phraya Basin, BSc thesis, Hydrology and Quantitative Water Management Group, Wageningen University.\nVerbrugge, M., 2023. Bias-correcting meteorological forcing to improve seasonal discharge forecasting of the Rhine, Internship report, Deltares.\nViguures, P., 2020. Modelling of flash floods in current and future climate with high resolution convection permitting regional climate models in the European Alps, MSc Thesis, Wageningen University.\nVisser, B., 2020. Impact of climate change on local water resources of European catchments, Intersnhip report, Deltares.\nWannasin, C., 2023. Modelling and forecasting daily streamflow with reservoir operation in the upper Chao Phraya River basin, Thailand. Wageningen University, Doctoral dissertation, https://doi.org/10.18174/584572.\n\n\nReports\nWorld Bank. 2021. Plastic Waste Discharges from Rivers and Coastlines in Indonesia. Marine Plastics Series;. World Bank, Washington, DC. © World Bank, https://openknowledge.worldbank.org/handle/10986/35607, License: CC BY 3.0 IGO.\nWorld Meteorological Organization (WMO), 2023. State of Global Water Resources report 2022, WMO-No. 1333, https://library.wmo.int/idurl/4/68473.\nWorld Meteorological Organization (WMO), 2024. State of Global Water Resources report 2023, WMO-No. 1362, https://library.wmo.int/idurl/4/69033.",
    "crumbs": [
      "Home",
      "Publications"
    ]
  },
  {
    "objectID": "model_docs/index.html",
    "href": "model_docs/index.html",
    "title": "About",
    "section": "",
    "text": "As opposed to the user guide, which describes the steps needed to build and apply a model in the software, this section explains the different model concepts that are available within the wflow modelling framework. Descriptions are given regarding the model concepts with references to scientific papers that explain the concepts in more detail. The model parameters which influence the processes are also shown, using inline code blocks. An overview of all model parameters, states and output variables is also provided for easy reference, including their standard names, descriptions, units and default values for input parameters.\n\n\n\n Back to top",
    "crumbs": [
      "Model documentation",
      "About"
    ]
  },
  {
    "objectID": "model_docs/land/sediment.html",
    "href": "model_docs/land/sediment.html",
    "title": "Sediment",
    "section": "",
    "text": "Over the land, soil erosion, also called soil loss, is closely linked to the water cycle. The main processes governing sediment generation are splash erosion from rain droplets, and sheet and rill erosion from the shear stress caused by overland flow. The intensity of soil erosion by rain or ﬂow depends on the land and soil characteristics such as slope, land use or soil type. Once soil is eroded, the detached particles can be transported downslope by overland ﬂow. Along the transport pathways, soil particles can also be deposited due to a low flow velocity, a change of topography in depressions, footslopes or valley bottoms, and/or can be filtered and stopped by a change in vegetation such as ﬁeld boundaries.\nThe inland part of the sediment gathers these different processes, separated in a structure for the soil loss and routing structure for the transport in overland flow.",
    "crumbs": [
      "Model documentation",
      "Land models",
      "Sediment"
    ]
  },
  {
    "objectID": "model_docs/land/sediment.html#soil-erosion",
    "href": "model_docs/land/sediment.html#soil-erosion",
    "title": "Sediment",
    "section": "Soil Erosion",
    "text": "Soil Erosion\nThe first process to consider in sediment dynamics is the generation of sediments by land erosion. The main processes behind soil loss are rainfall erosion and overland flow erosion. In order to model such processes at a fine time and space scale, physics-based models such as ANSWERS and EUROSEM were chosen here.\nThe choice of rainfall erosion model is set up in the model section of the TOML:\n[model]\nrainfall_erosion = \"answers\" # Rainfall erosion model: [\"answers\", \"eurosem\"]\n\nRainfall erosion\nIn wflow_sediment, rainfall erosion can both be modelled using EUROSEM or ANSWERS equation. The main difference between the models is that EUROSEM uses a more physics-based approach based on the kinetic energy of the rain drops impacting the soil (Morgan et al, 1998), while ANSWERS is more empirical and uses parameters from the USLE model (Beasley et al, 1991).\nIn EUROSEM, rainfall erosion is modelled according to rainfall intensity and its kinetic energy when it reaches the soil according to equations developed by Brandt (1990). As the intensity of the rain kinetic energy depends on the length of the fall, rainfall intercepted by vegetation will then be reduced compared to direct throughfall. The kinetic energy of direct throughfall is estimated by (Morgan et al, 1998): \\[\n   \\subtext{\\mathrm{KE}}{direct} = 8.95 + 8.44\\,\\log_{10}(R_i)\n\\]\nwhere \\(\\SIb{\\subtext{\\mathrm{KE}}{direct}}{J\\ m^{-2}\\ mm^{-1}}\\) is the kinetic energy of direct throughfall and \\(\\SIb{R_i}{mm\\ h^{-1}}\\) is rainfall intensity. If the rainfall is intercepted by vegetation and falls as leaf drainage, its kinetic energy is then reduced according to (Brandt, 1990): \\[\n   \\subtext{\\mathrm{KE}}{leaf} = 15.8\\,\\sqrt{H_p} - 5.87\n\\] where \\(\\SIb{\\subtext{\\mathrm{KE}}{leaf}}{J\\ m^{-2}\\ mm^{-1}}\\) is kinetic energy of leaf drainage and \\(\\SIb{H_p}{m}\\) is the effective canopy height (half of plant height). Canopy height can be derived from the global map from Simard & al. (2011) or by user input depending on the land use.\nKinetic energies from both direct throughfall and leaf drainage are then multiplied by the respective depths of direct throughfall and leaf drainage (mm) and added to get the total rainfall kinetic energy \\(\\mathrm{KE}\\). The soil detached by rainfall \\(\\SIb{D_R}{g\\ m^{-2}}\\) is then: \\[\n   D_R = k\\,\\mathrm{KE}\\,e^{-\\varphi h}\n\\] where \\(\\SIb{k}{g\\ J^{-1}}\\) is an index of the detachability of the soil, \\(\\SIb{\\mathrm{KE}}{J\\ m^{-2}}\\) is the total rainfall kinetic energy, \\(\\SIb{h}{m}\\) is the surface runoff depth on the soil and \\(\\varphi\\) is an exponent varying between \\(0.9\\) and \\(3.1\\) used to reduce rainfall impact if the soil is already covered by water. As a simplification, Torri (1987) has shown that a value of \\(2.0\\) for \\(\\varphi\\) is representative enough for a wide range of soil conditions. The detachability of the soil \\(k\\) depends on the soil texture (proportion of clay, silt and sand content) and corresponding values are defined in EUROSEM user guide (Morgan et al, 1998). As a simplification, in wflow_sediment, the mean value of the detachability shown in the table below are used. Soil texture can for example be derived from the topsoil clay and silt content from SoilGrids (Hengl et al, 2017).\n\nMean detachability of soil depending on its texture (Morgan et al, 1998).\n\n\nTexture (USDA system)\nMean detachability \\(\\SIb{k}{g\\ J^{-1}}\\)\n\n\n\n\nClay\n2.0\n\n\nClay Loam\n1.7\n\n\nSilt\n1.2\n\n\nSilt Loam\n1.5\n\n\nLoam\n2.0\n\n\nSandy Loam\n2.6\n\n\nLoamy Sand\n3.0\n\n\nFine Sand\n3.5\n\n\nSand\n1.9\n\n\n\nRainfall erosion is handled differently in ANSWERS. There, the impacts of vegetation and soil properties are handled through the USLE coefficients in the equation (Beasley et al, 1991):\n\\[\n   D_R = 0.108 \\, \\subtext{C}{USLE} \\, \\subtext{K}{USLE} \\, A_i \\, R_i^2\n\\]\nwhere \\(\\SIb{D_R}{kg\\ min^{-1}}\\) is the soil detachment by rainfall, \\(\\subtext{C}{USLE}\\) is the soil cover-management factor from the USLE equation, \\(\\subtext{K}{USLE}\\) is the soil erodibility factor from the USLE equation, \\(\\SIb{A_i}{m^2}\\) is the area of the cell and \\(\\SIb{R_i}{mm\\ min^{-1}}\\) is the rainfall intensity. There are several methods available to estimate the \\(C\\) and \\(K\\) factors from the USLE. They can come from user input maps, for example maps resulting from Panagos & al.’s recent studies for Europe (Panagos et al, 2015) (Ballabio et al, 2016). To get an estimate of the \\(C\\) factor globally, the other method is to estimate \\(C\\) values for the different land use type in from global land cover maps (e.g. GlobCover). An example is given for the global land cover map GlobCover, summed up in the table below, the values come from a literature study including Panagos et al.’s review (2015), Gericke & al. (2015), Mansoor & al. (2013), Chadli et al. (2016), de Vente et al. (2009), Borrelli et al. (2014), Yang et al. (2003) and Bosco et al. (2015).\nThe other methods to estimate the USLE \\(K\\) factor are to use either topsoil composition or topsoil geometric mean diameter. \\(K\\) estimation from topsoil composition is estimated with the equation developed in the EPIC model (Williams et al, 1983):\n\\[\n\\begin{gathered}\n   \\subtext{K}{USLE} = \\left[ 0.2 + 0.3\\exp\\left(-0.0256\\;\\mathrm{SAN}\\frac{(1-\\mathrm{SIL})}{100}\\right) \\right]\n   \\left(\\frac{\\mathrm{SIL}}{\\mathrm{CLA}+\\mathrm{SIL}}\\right)^{0.3} \\\\\n   \\left(1-\\frac{0.25\\;\\mathrm{OC}}{\\mathrm{OC}+e^{3.72-2.95\\;\\mathrm{OC}}}\\right)\\left(1-\\frac{0.75\\;\\mathrm{SN}}{\\mathrm{SN}+e^{-5.51+22.9\\;\\mathrm{SN}}}\\right)\n\\end{gathered}\n\\]\nwhere \\(\\SIb{\\mathrm{CLA}}{\\%}\\), \\(\\SIb{\\mathrm{SIL}}{\\%}\\), \\(\\SIb{\\mathrm{SAN}}{\\%}\\) are respectively the clay, silt and sand fractions of the topsoil, \\(\\SIb{OC}{\\%}\\) is the topsoil organic carbon content and \\(\\mathrm{SN} = 1-\\mathrm{SAN}/100\\). These soil parameters can be derived for example from the SoilGrids dataset. The \\(K\\) factor can also be estimated from the soil mean geometric diameter using the formulation from the RUSLE guide by Renard & al. (1997):\n\\[\n   \\subtext{K}{USLE} = 0.0034 + 0.0405\\exp\\left(-\\dfrac{1}{2}\\left(\\dfrac{\\log_{10}(D_g)+1.659}{0.7101}\\right)^2\\right)\n\\]\nwhere \\(D_g\\) is the soil geometric mean diameter (mm) estimated from topsoil clay, silt, sand fraction.\n\nEstimation of USLE C factor per Globcover land use type\n\n\n\n\n\n\n\nGlobCover Value\nGlobcover label\n\\(\\subtext{C}{USLE}\\)\n\n\n\n\n11\nPost-flooding or irrigated croplands (or aquatic)\n0.2\n\n\n14\nRainfed croplands\n0.35\n\n\n20\nMosaic cropland (50-70%) vegetation (grassland/shrubland/forest) (20-50%)\n0.27\n\n\n30\nMosaic vegetation (grassland/shrubland/forest) (50-70%) / cropland (20-50%)\n0.25\n\n\n40\nClosed to open (&gt;15%) broadleaved evergreen or semi-deciduous forest (&gt;5m)\n0.0065\n\n\n50\nClosed (&gt;40%) broadleaved deciduous forest (&gt;5m)\n0.001\n\n\n60\nOpen (15-40%) broadleaved deciduous forest/woodland (&gt;5m)\n0.01\n\n\n70\nClosed (&gt;40%) needleleaved evergreen forest (&gt;5m)\n0.001\n\n\n90\nOpen (15-40%) needleleaved deciduous or evergreen forest (&gt;5m)\n0.01\n\n\n100\nClosed to open (&gt;15%) mixed broadleaved and needleleaved forest (&gt;5m)\n0.02\n\n\n110\nMosaic forest or shrubland (50-70%) / grassland (20-50%)\n0.015\n\n\n120\nMosaic grassland (50-70%) / forest or shrubland (20-50%)\n0.03\n\n\n130\nClosed to open (&gt;15%) (broadleaved or needleleaved, evergreen or deciduous) shrubland (&lt;5m)\n0.035\n\n\n140\nClosed to open (&gt;15%) herbaceous vegetation (grassland, savannas or lichens/mosses)\n0.05\n\n\n150\nSparse (&lt;15%) vegetation\n0.35\n\n\n160\nClosed to open (&gt;15%) broadleaved forest regularly flooded (semi-permanently or temporarily) - Fresh or brackish water\n0.001\n\n\n170\nClosed (&gt;40%) broadleaved forest or shrubland permanently flooded - Saline or brackish water\n0.0005\n\n\n180\nClosed to open (&gt;15%) grassland or woody vegetation on regularly flooded or waterlogged soil - Fresh, brackish or saline water\n0.04\n\n\n190\nArtificial surfaces and associated areas (Urban areas &gt;50%)\n0.0\n\n\n200\nBare areas\n0.0\n\n\n210\nWater bodies\n0.0\n\n\n220\nPermanent snow and ice\n0.0\n\n\n230\nNo data (burnt areas, clouds,…)\n0.0\n\n\n\n\n\nOverland flow erosion\nOverland flow (or surface runoff) erosion is induced by the strength of the shear stress of the surface water on the soil. As in rainfall erosion, the effect of the flow shear stress can be reduced by the soil vegetation or by the soil properties. In wflow_sediment, soil detachment by overland flow is modelled as in ANSWERS with (Beasley et al, 1991):\n\\[\n   D_G = 0.90 \\, \\subtext{C}{USLE} \\, \\subtext{K}{USLE} \\, A_i \\, S \\, q\n\\]\nwhere \\(\\SIb{D_F}{kg\\ min^{-1}}\\) is soil detachment by flow, \\(\\subtext{C}{USLE}\\) and \\(\\subtext{K}{USLE}\\) are the USLE cover and soil erodibility factors, \\(\\SIb{A_i}{m^2}\\) is the cell area, \\(S\\) is the slope gradient and \\(\\SIb{q}{m^2\\ min^{-1}}\\) is the overland flow rate per unit width. The USLE \\(C\\) and \\(K\\) factors can be estimated with the same methods as for rainfall erosion and here the slope gradient is obtained from the sinus rather than the tangent of the slope angle.",
    "crumbs": [
      "Model documentation",
      "Land models",
      "Sediment"
    ]
  },
  {
    "objectID": "model_docs/land/sediment.html#delivery-to-the-river-system",
    "href": "model_docs/land/sediment.html#delivery-to-the-river-system",
    "title": "Sediment",
    "section": "Delivery to the river system",
    "text": "Delivery to the river system\nOnce soil is detached, it can be transported by overland flow and reach the river system. This process is described in Sediment Flux in overland flow.",
    "crumbs": [
      "Model documentation",
      "Land models",
      "Sediment"
    ]
  },
  {
    "objectID": "model_docs/land/sediment.html#references",
    "href": "model_docs/land/sediment.html#references",
    "title": "Sediment",
    "section": "References",
    "text": "References\n\nD.B Beasley and L.F Huggins. ANSWERS - Users Manual. Technical report, EPA, 1991.\nP. Borrelli, M. Märker, P. Panagos, and B. Schütt. Modeling soil erosion and river sediment yield for an intermountain drainage basin of the Central Apennines, Italy. Catena, 114:45-58,\n\n10.1016/j.catena.2013.10.007\n\nC. Bosco, D. De Rigo, O. Dewitte, J. Poesen, and P. Panagos. Modelling soil erosion at European scale: Towards harmonization and reproducibility. Natural Hazards and Earth System Sciences, 15(2):225-245, 2015. 10.5194/nhess-15-225-2015\nC.J Brandt. Simulation of the size distribution and erosivity of raindrops and throughfall drops. Earth Surface Processes and Landforms, 15(8):687-698, dec 1990.\nK. Chadli. Estimation of soil loss using RUSLE model for Sebou watershed (Morocco). Modeling Earth Systems and Environment, 2(2):51, 2016. 10.1007/s40808-016-0105-y\nG R Foster. Modeling the erosion process. Hydrologic modeling of small watersheds, pages 295-380, 1982.\nA. Gericke. Soil loss estimation and empirical relationships for sediment delivery ratios of European river catchments. International Journal of River Basin Management, 2015. 10.1080/15715124.2014.1003302\nL.D.K. Mansoor, M.D. Matlock, E.C. Cummings, and L.L. Nalley. Quantifying and mapping multiple ecosystem services change in West Africa. Agriculture, Ecosystems and Environment, 165:6-18, 2013. 10.1016/j.agee.2012.12.001\nQ Morgan, J.N Smith, R.E Govers, G Poesen, J.W.A Auerswald, K Chisci, G Torri, D Styczen, and M E Folly. The European soil erosion model (EUROSEM): documentation and user guide. Technical report, 1998.\nS.L Neitsch, J.G Arnold, J.R Kiniry, and J.R Williams. SWAT Theoretical Documentation Version\n\nTexas Water Resources Institute, pages 1-647, 2011. 10.1016/j.scitotenv.2015.11.063\n\nP. Panagos, P. Borrelli, K. Meusburger, C. Alewell, E. Lugato, and L. Montanarella. Estimating the soil erosion cover-management factor at the European scale. Land Use Policy, 48:38-50, 2015. 10.1016/j.landusepol.2015.05.021\nK Renard, Gr Foster, Ga Weesies, Dk McCool, and Dc Yoder. Predicting soil erosion by water: a guide to conservation planning with the Revised Universal Soil Loss Equation (RUSLE). Washington, 1997.\nD. Torri, M. Sfalanga, and M. Del Sette. Splash detachment: Runoff depth and soil cohesion. Catena, 14(1-3):149-155, 1987. 10.1016/S0341-8162(87)80013-9\nJ. de Vente, J. Poesen, G. Govers, and C. Boix-Fayos. The implications of data selection for regional erosion and sediment yield modelling. Earth Surface Processes and Landforms, 34(15):1994-2007, 2009. 10.1002/esp.1884\nG. Verstraeten and J. Poesen. Estimating trap efficiency of small reservoirs and ponds: methods and implications for the assessment of sediment yield. Progress in Physical Geography, 24(2):219-251, 2000. 10.1177/030913330002400204\nO. Vigiak, A. Malago, F. Bouraoui, M. Vanmaercke, and J. Poesen. Adapting SWAT hillslope erosion model to predict sediment concentrations and yields in large Basins. Science of the Total Environment, 538:855-875, 2015. 10.1016/j.scitotenv.2015.08.095\nJ.R. Williams, K.G. Renard, and P.T. Dyke. EPIC A new method for assessing erosion’s effect on soil productivity. Journal of Soil and Water Conservation, 38(5):381-383, 1983.\nD. Yang, S. Kanae, T. Oki, T. Koike, and K. Musiake. Global potential soil erosion with reference to land use and climate changes. Hydrological Processes, 17(14):2913-2928, 2003. 10.1002/hyp.1441",
    "crumbs": [
      "Model documentation",
      "Land models",
      "Sediment"
    ]
  },
  {
    "objectID": "model_docs/model_settings.html",
    "href": "model_docs/model_settings.html",
    "title": "Model settings",
    "section": "",
    "text": "This section provides an overview of model settings in the configuration TOML file, below the [model] entry, including descriptions, units and default values.",
    "crumbs": [
      "Model documentation",
      "Model settings"
    ]
  },
  {
    "objectID": "model_docs/model_settings.html#general",
    "href": "model_docs/model_settings.html#general",
    "title": "Model settings",
    "section": "General",
    "text": "General\nThe Table below shows the general model settings applicable for all model types.\n\n\n\n\n\n\n\n\n\nSetting\nDescription\nUnit\nDefault\n\n\n\n\ntype\nModel type: [sbm, sbm_gwf, sediment]\n-\n-\n\n\ncold_start__flag\nInitialize model with cold (cold_start__flag = true) or warm state\n-\ntrue\n\n\ncell_length_in_meter__flag\nUnit cell length of input rasters in lat/lon degree (cell_length_in_meter__flag = false) or in meter, cell length refers to the length of raster cells in x and y direction\n-\nfalse\n\n\nreservoir__flag\nInclude reservoir modelling\n-\nfalse\n\n\nlake__flag\nInclude lake modelling\n-\nfalse",
    "crumbs": [
      "Model documentation",
      "Model settings"
    ]
  },
  {
    "objectID": "model_docs/model_settings.html#model-types-sbm-and-sbm_gwf",
    "href": "model_docs/model_settings.html#model-types-sbm-and-sbm_gwf",
    "title": "Model settings",
    "section": "Model types sbm and sbm_gwf",
    "text": "Model types sbm and sbm_gwf\nThe Tables in this subsection show the available models settings for the model types sbm and sbm_gwf.\n\nLand Hydrology SBM\n\n\n\n\n\n\n\n\n\nSetting\nDescription\nUnit\nDefault\n\n\n\n\nsnow__flag\nInclude snow modelling\n-\nfalse\n\n\nsnow_gravitional_transport__flag\nInclude gravitional lateral snow transport\n-\nfalse\n\n\nglacier__flag\nInclude glacier modelling\n-\nfalse\n\n\nsoil_infiltration_reduction__flag\nEnable reduction factor applied to the soil infiltration capacity\n-\nfalse\n\n\nsoil_layer__thickness\nThickness of soil layers\nmm\n[100, 300, 800]\n\n\nsaturated_hydraulic_conductivity_profile\nSaturated hydraulic conductivity depth profile for SBM soil model (also used for kinematic wave lateral subsurface flow)\n-\n“exponential”\n\n\n\n\n\nRouting method\n\n\n\n\n\n\n\n\n\nSetting\nDescription\nUnit\nDefault\n\n\n\n\nland_routing\nRouting approach for overland flow: [“kinematic-wave”, “local-inertial”]\n-\n“kinematic-wave”\n\n\nriver_routing\nRouting approach for river flow: [“kinematic-wave”, “local-inertial”]\n-\n“kinematic-wave”\n\n\n\n\n\nKinematic wave routing\n\n\n\n\n\n\n\n\n\nSetting\nDescription\nUnit\nDefault\n\n\n\n\npit__flag\nInclude pits for kinematic wave flow continuous at subbasin only (upstream of provided pit locations)\n-\nfalse\n\n\nriver_streamorder__min_count\nMinimum stream order to delineate subbasins for river domain (for multi-threading computing purposes)\n-\n6\n\n\nland_streamorder__min_count\nMinimum stream order to delineate subbasins for land domain (for multi-threading computing purposes)\n-\n5\n\n\nkinematic_wave__adaptive_time_step_flag\nEnable kinematic wave adaptive (internal) time stepping\n-\nfalse\n\n\nriver_kinematic_wave__time_step\nEnable kinematic wave fixed internal time stepping for river domain (kinematic_wave__adaptive_time_step_flag = false)\ns\nΔt\n\n\nland_kinematic_wave__time_step\nEnable kinematic wave fixed internal time stepping for land domain (kinematic_wave__adaptive_time_step_flag = false)\ns\nΔt\n\n\n\n\n\nLocal inertial routing\n\n\n\n\n\n\n\n\n\nSetting\nDescription\nUnit\nDefault\n\n\n\n\nriver_local_inertial_flow__alpha_coefficient\nStability coefficient for internal model time step river flow routing (CFL condition)\n-\n0.7\n\n\nland_local_inertial_flow__alpha_coefficient\nStability coefficient for internal model time step overland flow routing (CFL condition)\n-\n0.7\n\n\nland_local_inertial_flow__theta_coefficient\nWeighting factor that adjusts the amount of artificial numerical diffusion for local inertial overland flow\n-\n0.8\n\n\nriver_water_flow_threshold__depth\nWater depth threshold for calculating river flow between cells\nm\n0.001\n\n\nland_surface_water_flow_threshold__depth\nWater depth threshold for calculating overland flow between cells\nm\n0.001\n\n\nriver_water_flow__froude_limit_flag\nLimit river flow to subcritical-critical according to Froude number\n-\ntrue\n\n\nland_surface_water_flow__froude_limit_flag\nLimit overland flow to subcritical-critical according to Froude number\n-\ntrue\n\n\nriver_water_flow__froude_limit_flag\nLimit river flow to subcritical-critical according to Froude number\n-\ntrue\n\n\nfloodplain_1d__flag\nInclude 1D floodplain schematization for local inertial river routing\n-\nfalse\n\n\n\n\n\nGroundwater flow\n\n\n\n\n\n\n\n\n\nSetting\nDescription\nUnit\nDefault\n\n\n\n\nconductivity_profile\nHydraulic conductivity depth profile: [“uniform”, “exponential”]\n-\n“uniform”\n\n\ndrain__flag\nInclude drainage boundary condition\n-\nfalse\n\n\nconstanthead__flag\nInclude constant head boundary condition\n-\nfalse",
    "crumbs": [
      "Model documentation",
      "Model settings"
    ]
  },
  {
    "objectID": "model_docs/model_settings.html#model-type-sediment",
    "href": "model_docs/model_settings.html#model-type-sediment",
    "title": "Model settings",
    "section": "Model type sediment",
    "text": "Model type sediment\nThe Table below shows the model settings for the model type sediment.\n\n\n\n\n\n\n\n\n\nSetting\nDescription\nUnit\nDefault\n\n\n\n\nrainfall_erosion\nRainfall erosion model: [“answers”, “eurosem”]\n-\n“answers”\n\n\noverland_flow_erosion\nOverland flow erosion model: [“answers”]\n-\n“answers”\n\n\nrun_river_model__flag\nInclude river sediment model\n-\nfalse\n\n\nland_transport\nOverland flow transport capacity method: [“yalinpart”, “govers”, “yalin”]\n-\n“yalin”\n\n\nriver_transport\nRiver flow transport capacity method: [“bagnold”, “engelund”, “yang”, “kodatie”, “molinas”]\n-\n“bagnold”",
    "crumbs": [
      "Model documentation",
      "Model settings"
    ]
  },
  {
    "objectID": "model_docs/parameters_landhydrology_sbm.html",
    "href": "model_docs/parameters_landhydrology_sbm.html",
    "title": "Land Hydrology SBM",
    "section": "",
    "text": "Standard Name\nDescription\nUnit\nDefault\n\n\n\n\natmosphere_water__precipitation_volume_flux\nPrecipitation\nmm Δt⁻¹\n-\n\n\nland_surface_water__potential_evaporation_volume_flux\nPotential evaporation\nmm Δt⁻¹\n-\n\n\natmosphere_air__temperature\nTemperature\nᵒC\n-",
    "crumbs": [
      "Model documentation",
      "Model parameters and variables",
      "Land Hydrology SBM"
    ]
  },
  {
    "objectID": "model_docs/parameters_landhydrology_sbm.html#atmospheric-forcing",
    "href": "model_docs/parameters_landhydrology_sbm.html#atmospheric-forcing",
    "title": "Land Hydrology SBM",
    "section": "",
    "text": "Standard Name\nDescription\nUnit\nDefault\n\n\n\n\natmosphere_water__precipitation_volume_flux\nPrecipitation\nmm Δt⁻¹\n-\n\n\nland_surface_water__potential_evaporation_volume_flux\nPotential evaporation\nmm Δt⁻¹\n-\n\n\natmosphere_air__temperature\nTemperature\nᵒC\n-",
    "crumbs": [
      "Model documentation",
      "Model parameters and variables",
      "Land Hydrology SBM"
    ]
  },
  {
    "objectID": "model_docs/parameters_landhydrology_sbm.html#snow",
    "href": "model_docs/parameters_landhydrology_sbm.html#snow",
    "title": "Land Hydrology SBM",
    "section": "Snow",
    "text": "Snow\n\nInput\n\n\n\n\n\n\n\n\n\nStandard Name\nDescription\nUnit\nDefault\n\n\n\n\natmosphere_air__snowfall_temperature_threshold\nThreshold temperature for snowfall\nᵒC\n0.0\n\n\natmosphere_air__snowfall_temperature_interval\nThreshold temperature interval length\nᵒC\n1.0\n\n\nsnowpack__melting_temperature_threshold\nThreshold temperature for snowmelt\nᵒC\n0.0\n\n\nsnowpack__degree-day_coefficient\nDegree-day factor for snowmelt\nmm ᵒC⁻¹ Δt⁻¹\n3.75 mm ᵒC⁻¹ day⁻¹\n\n\nsnowpack__liquid_water_holding_capacity\nWater holding capacity as fraction of current snow pack\n-\n0.1\n\n\n\n\n\nStates\n\n\n\n\n\n\n\n\nStandard Name\nDescription\nUnit\n\n\n\n\nsnowpack~dry__leq-depth\nLiquid-water equivalent of dry snow\nmm\n\n\nsnowpack~liquid__depth\nLiquid water content in the snow pack\nmm\n\n\n\n\n\nOutput\n\n\n\n\n\n\n\n\nStandard Name\nDescription\nUnit\n\n\n\n\nsnowpack__leq-depth\nLiquid-water equivalent of snow pack (SWE)\nmm\n\n\nsnowpack_meltwater__volume_flux\nAmount of snow melt\nmm Δt⁻¹\n\n\nsnowpack_water__runoff_volume_flux\nRunoff from snowpack\nmm Δt⁻¹",
    "crumbs": [
      "Model documentation",
      "Model parameters and variables",
      "Land Hydrology SBM"
    ]
  },
  {
    "objectID": "model_docs/parameters_landhydrology_sbm.html#glacier",
    "href": "model_docs/parameters_landhydrology_sbm.html#glacier",
    "title": "Land Hydrology SBM",
    "section": "Glacier",
    "text": "Glacier\n\nInput\n\n\n\n\n\n\n\n\n\nStandard Name\nDescription\nUnit\nDefault\n\n\n\n\nglacier_ice__initial_leq-depth\nInitial glacier liquid-water equivalent (cold state)\nmm\n5500.0\n\n\nglacier_ice__melting_temperature_threshold\nThreshold temperature for glacier melt\nᵒC\n0.0\n\n\nglacier_ice__degree-day_coefficient\nDegree-day factor for melt from glacier\nmm ᵒC⁻¹ Δt⁻¹\n3.0 mm ᵒC⁻¹ day⁻¹\n\n\nglacier_firn_accumulation__snowpack~dry_leq-depth_fraction\nFraction of the snowpack on top of the glacier converted into ice\nΔt⁻¹\n0.001 day⁻¹\n\n\nglacier_surface__area_fraction\nFraction covered by a glacier\n-\n0.0\n\n\n\n\n\nStates\n\n\n\nStandard Name\nDescription\nUnit\n\n\n\n\nglacier_ice__leq-depth\nGlacier liquid-water equivalent\nmm\n\n\n\n\n\nOutput\n\n\n\nStandard Name\nDescription\nUnit\n\n\n\n\nglacier_ice__melt_volume_flux\nMelt from the glacier\nmm Δt⁻¹",
    "crumbs": [
      "Model documentation",
      "Model parameters and variables",
      "Land Hydrology SBM"
    ]
  },
  {
    "objectID": "model_docs/parameters_landhydrology_sbm.html#vegetation",
    "href": "model_docs/parameters_landhydrology_sbm.html#vegetation",
    "title": "Land Hydrology SBM",
    "section": "Vegetation",
    "text": "Vegetation\n\nInput\n\n\n\n\n\n\n\n\n\nStandard Name\nDescription\nUnit\nDefault\n\n\n\n\nvegetation_root__depth\nRooting depth\nmm\n-\n\n\nvegetation__crop_factor\nCrop coefficient\n-\n1.0\n\n\nvegetation__specific-leaf_storage\nSpecific leaf storage\nmm\n-\n\n\nvegetation_wood_water__storage_capacity\nStorage woody part of vegetation\nmm\n-\n\n\nvegetation_canopy__light-extinction_coefficient\nExtinction coefficient (to calculate canopy gap fraction)\n-\n-\n\n\nvegetation_canopy_water__mean_evaporation-to-mean_precipitation_ratio\nGash interception model parameter\n-\n0.1\n\n\nvegetation_canopy__gap_fraction\nCanopy gap fraction\n-\n-\n\n\nvegetation_water__storage_capacity\nMaximum canopy storage\nmm\n1.0\n\n\n\n\n\nInput static and cyclic\n\n\n\nStandard Name\nDescription\nUnit\nDefault\n\n\n\n\nvegetation__leaf-area_index\nLeaf area index\nm² m⁻²\n-\n\n\n\n\n\nStates\n\n\n\nStandard Name\nDescription\nUnit\n\n\n\n\nvegetation_canopy_water__depth\nCanopy storage\nmm\n\n\n\n\n\nOutput\n\n\n\n\n\n\n\n\nStandard Name\nDescription\nUnit\n\n\n\n\nvegetation_canopy_water__stemflow_volume_flux\nStemflow\nmm Δt⁻¹\n\n\nvegetation_canopy_water__throughfall_volume_flux\nThroughfall\nmm Δt⁻¹\n\n\nvegetation_canopy_water__interception_volume_flux\nInterception\nmm Δt⁻¹",
    "crumbs": [
      "Model documentation",
      "Model parameters and variables",
      "Land Hydrology SBM"
    ]
  },
  {
    "objectID": "model_docs/parameters_landhydrology_sbm.html#soil",
    "href": "model_docs/parameters_landhydrology_sbm.html#soil",
    "title": "Land Hydrology SBM",
    "section": "Soil",
    "text": "Soil\n\nInput\n\n\n\n\n\n\n\n\n\nStandard Name\nDescription\nUnit\nDefault\n\n\n\n\nsoil_vertical_saturated_hydraulic_conductivity_profile~exponential_below-surface__depth\nDepth from soil surface for which exponential decline of the vertical saturated hydraulic conductivity at the soil surface is valid, when an exponential_constant saturated hydraulic conductivity profile is used\nmm\n-\n\n\nsoil_layer_water__vertical_saturated_hydraulic_conductivity\nVertical saturated hydraulic conductivity per soil layer, when a layered or layered_exponential saturated hydraulic conductivity profile is used\nmm Δt⁻¹\n-\n\n\nsoil_vertical_saturated_hydraulic_conductivity_profile~layered_below-surface__depth\nDepth from soil surface for which layered profile is valid, when a layered_exponential saturated hydraulic conductivity profile is used\nmm\n-\n\n\nsoil_surface_temperature__weight_coefficient\nWeighting coefficient for soil surface temperature\n-\n0.1125\n\n\nsoil_surface_water__infiltration_reduction_parameter\nControls soil infiltration reduction factor when soil is frozen\n-\n0.038\n\n\nsoil_water__saturated_volume_fraction\nSaturated water content\n-\n-\n\n\nsoil_water__residual_volume_fraction\nResidual water content\n-\n-\n\n\nsoil_surface_water__vertical_saturated_hydraulic_conductivity\nVertical saturated hydraulic conductivity at soil surface\nmm Δt⁻¹\n-\n\n\nsoil_water__vertical_saturated_hydraulic_conductivity_scale_parameter\nScaling parameter controlling decline of vertical saturated hydraulic conductivity with depth\nmm⁻¹\n-\n\n\nsoil_water__air_entry_pressure_head\nAir entry pressure head of soil\ncm\n-10.0\n\n\nvegetation_root__feddes_critial_pressure_head_h~1\nCritical pressure head h1 of the root water uptake reduction function (Feddes)\ncm\n0.0\n\n\nvegetation_root__feddes_critial_pressure_head_h~2\nCritical pressure head h2 of the root water uptake reduction function (Feddes)\ncm\n-100.0\n\n\nvegetation_root__feddes_critial_pressure_head_h~3~high\nCritical pressure head h3_high of the root water uptake reduction function (Feddes)\ncm\n-400.0\n\n\nvegetation_root__feddes_critial_pressure_head_h~3~low\nCritical pressure head h3_low of the root water uptake reduction function (Feddes)\ncm\n-1000.0\n\n\nvegetation_root__feddes_critial_pressure_head_h~4\nCritical pressure head h4 of the root water uptake reduction function (Feddes)\ncm\n-16000.0\n\n\nvegetation_root__feddes_critial_pressure_head_h~1_reduction_coefficient\nRoot water uptake reduction at soil water pressure head h1 (0.0 or 1.0)\n-\n1.0\n\n\nsoil__thickness\nSoil thickness\nmm\n-\n\n\nsoil~compacted_surface_water__infiltration_capacity\nInfiltration capacity of compacted areas\nmm Δt⁻¹\n10 mm day⁻¹\n\n\nsoil~non-compacted_surface_water__infiltration_capacity\nSoil infiltration capacity\nmm Δt⁻¹\n100.0 mm day⁻¹\n\n\nsoil_water_sat-zone_bottom__max_leakage_volume_flux\nMaximum leakage from saturated zone\nmm Δt⁻¹\n0.0 mm day⁻¹\n\n\nsoil_layer_water__brooks-corey_exponent\nBrooks-Corey power coefficient per soil layer\n-\n-\n\n\nland~water-covered__area_fraction\nFraction of open water (excluding rivers)\n-\n0.0\n\n\nsoil_layer_water__vertical_saturated_hydraulic_conductivity_factor\nMultiplication factor applied to vertical saturated hydraulic conductivity per soil layer\n-\n1.0\n\n\nsoil~compacted__area_fraction\nFraction of compacted soil area\n-\n-\n\n\nsoil_root~wet__sigmoid_function_shape_parameter\nControls sharpness of transition between fully wet and fully dry roots\n-\n-500.0\n\n\nsoil_root__length_density_fraction\nFraction of the root length density per soil layer\n-\n-\n\n\nsoil_water_sat-zone_top_capillary-rise__max_water-table_depth\nMaximum water table depth for capillary rise\nmm\n2000.0\n\n\nsoil_water_sat-zone_top_capillary-rise__averianov_exponent\nAverianov exponent controlling capillary rise\n-\n2.0\n\n\n\n\n\nStates\n\n\n\n\n\n\n\n\nStandard Name\nDescription\nUnit\n\n\n\n\nsoil_surface__temperature\nSoil surface temperature, only when snow is modelled\nᵒC\n\n\nsoil_water_sat-zone__depth\nAmount of water in the saturated store\nmm\n\n\nsoil_layer_water_unsat-zone__depth\nAmount of water in the unsaturated store, per soil layer\nmm\n\n\n\n\n\nOutput\n\n\n\n\n\n\n\n\nStandard Name\nDescription\nUnit\n\n\n\n\nland_surface__evapotranspiration_volume_flux\nTotal actual evapotranspiration\nmm\n\n\nland_water~storage~total__depth\nTotal water storage (excluding floodplains, lakes and reservoirs)\nmm\n\n\nsoil_water__infiltration_volume_flux\nActual infiltration into the unsaturated zone\nmm Δt⁻¹\n\n\nsoil_water__transpiration_volume_flux\nTranspiration from vegetation\nmm Δt⁻¹\n\n\nsoil_surface_water__runoff_volume_flux\nTotal surface runoff from infiltration and saturation excess\nmm Δt⁻¹\n\n\nsoil_surface_water__net_runoff_volume_flux\nNet surface runoff (after open water evaporation)\nmm Δt⁻¹\n\n\nsoil~compacted_surface_water__excess_volume_flux\nExcess water for compacted soil fraction\nmm Δt⁻¹\n\n\nsoil~non-compacted_surface_water__excess_volume_flux\nExcess water for non-compacted soil fraction\nmm Δt⁻¹\n\n\nsoil_surface_water_unsat-zone__exfiltration_volume_flux\nWater exfiltrating from unsaturated store because of rising water table\nmm Δt⁻¹\n\n\nsoil_surface_water_sat-zone__exfiltration_volume_flux\nWater exfiltrating from saturated store during saturation excess conditions\nmm Δt⁻¹\n\n\nsoil_layer_water__volume_fraction\nVolumetric water content per soil layer (including residual water content and saturated zone)\n-\n\n\nsoil_layer_water__volume_percentage\nVolumetric water content per soil layer (including residual water content and saturated zone)\n%\n\n\nsoil_water_root-zone__volume_fraction\nVolumetric water content in root zone (including residual water content and saturated zone)\n-\n\n\nsoil_water_root-zone__volume_percentage\nVolumetric water content in root zone (including residual water content and saturated zone)\n%\n\n\nsoil_water_root-zone__depth\nRoot water storage in unsaturated and saturated zone (excluding residual water content)\nmm\n\n\nsoil_water_unsat-zone__depth\nAmount of water in the unsaturated store\nmm\n\n\nsoil_water_sat-zone_top__capillary_volume_flux\nActual capillary rise\nmm Δt⁻¹\n\n\nsoil_water_sat-zone_top__recharge_volume_flux\nDownward flux from unsaturated to saturated zone\nmm Δt⁻¹\n\n\nsoil_water_sat-zone_top__net_recharge_volume_flux\nNet recharge to saturated zone\nmm Δt⁻¹\n\n\nsoil_water_sat-zone_bottom__leakage_volume_flux\nActual leakage from saturated store\nmm Δt⁻¹\n\n\nsoil_water_sat-zone_top__depth\nPseudo-water table depth (top of the saturated zone)\nmm",
    "crumbs": [
      "Model documentation",
      "Model parameters and variables",
      "Land Hydrology SBM"
    ]
  },
  {
    "objectID": "model_docs/parameters_landhydrology_sbm.html#water-demand",
    "href": "model_docs/parameters_landhydrology_sbm.html#water-demand",
    "title": "Land Hydrology SBM",
    "section": "Water demand",
    "text": "Water demand\n\nNon-irrigation\n\nInput static and cyclic\n\n\n\n\n\n\n\n\n\nStandard Name\nDescription\nUnit\nDefault\n\n\n\n\nland~domestic__gross_water_demand_volume_flux\nGross domestic water demand\nmm Δt⁻¹\n0.0\n\n\nland~domestic__net_water_demand_volume_flux\nNet domestic water demand\nmm Δt⁻¹\n0.0\n\n\nland~industry__gross_water_demand_volume_flux\nGross industry water demand\nmm Δt⁻¹\n0.0\n\n\nland~industry__net_water_demand_volume_flux\nNet industry water demand\nmm Δt⁻¹\n0.0\n\n\nland~livestock__gross_water_demand_volume_flux\nGross livestock water demand\nmm Δt⁻¹\n0.0\n\n\nland~livestock__net_water_demand_volume_flux\nNet livestock water demand\nmm Δt⁻¹\n0.0\n\n\n\n\n\n\nNon-paddy irrigation\n\nInput\n\n\n\n\n\n\n\n\n\nStandard Name\nDescription\nUnit\nDefault\n\n\n\n\nland~irrigated-non-paddy__irrigation_efficiency\nIrrigation efficiency\n-\n-\n\n\nland~irrigated-non-paddy_area__count\nIrrigation areas (non-paddy)\n-\n-\n\n\nland~irrigated-non-paddy__max_irrigation_rate\nMaximum irrigation rate\nmm Δt⁻¹\n25.0 mm day⁻¹\n\n\n\n\n\nInput static and cyclic\n\n\n\n\n\n\n\n\n\nStandard Name\nDescription\nUnit\nDefault\n\n\n\n\nland~irrigated-non-paddy__irrigation_trigger_flag\nIrrigation trigger (off or on, 0 or 1)\n-\n-\n\n\n\n\n\nOutput\n\n\n\n\n\n\n\n\nStandard Name\nDescription\nUnit\n\n\n\n\nland~irrigated-non-paddy__gross_water_demand_volume_flux\nIrrigation (non-paddy) gross demand\nmm Δt⁻¹\n\n\n\n\n\n\nPaddy irrigation\n\nInput\n\n\n\n\n\n\n\n\n\nStandard Name\nDescription\nUnit\nDefault\n\n\n\n\nland~irrigated-paddy__min_depth\nMinimum required water depth in the irrigated paddy fields\nmm\n20.0\n\n\nland~irrigated-paddy__optimal_depth\nOptimal water depth in the irrigated paddy fields\nmm\n50.0\n\n\nland~irrigated-paddy__max_depth\nWater depth when paddy field starts spilling water (overflow)\nmm\n80.0\n\n\nland~irrigated-paddy__irrigation_efficiency\nIrrigation efficiency\n-\n-\n\n\nland~irrigated-paddy_area__count\nIrrigation areas (paddy)\n-\n-\n\n\nland~irrigated-paddy__max_irrigation_rate\nMaximum irrigation rate\nmm Δt⁻¹\n25.0 mm day⁻¹\n\n\n\n\n\nInput static and cyclic\n\n\n\n\n\n\n\n\n\nStandard Name\nDescription\nUnit\nDefault\n\n\n\n\nland~irrigated-paddy__irrigation_trigger_flag\nIrrigation trigger (off or on, 0 or 1)\n-\n-\n\n\n\n\n\nStates\n\n\n\nStandard Name\nDescription\nUnit\n\n\n\n\nland_surface_water~paddy__depth\nWater depth in paddy field\nmm\n\n\n\n\n\nOutput\n\n\n\n\n\n\n\n\nStandard Name\nDescription\nUnit\n\n\n\n\nland~irrigated-paddy__gross_water_demand_volume_flux\nIrrigation (paddy) gross demand\nmm Δt⁻¹\n\n\n\n\n\n\nAllocation\n\nInput\n\n\n\n\n\n\n\n\n\nStandard Name\nDescription\nUnit\nDefault\n\n\n\n\nland_surface_water__withdrawal_fraction\nFraction surface water used\n-\n1.0\n\n\nland_water_allocation_area__count\nAllocation areas\n-\n1\n\n\n\n\n\nOutput\n\n\n\n\n\n\n\n\nStandard Name\nDescription\nUnit\n\n\n\n\nland_surface_water_abstraction__volume_flux\nActual surface water abstraction\nmm Δt⁻¹\n\n\nsubsurface_water_abstraction__volume_flux\nActual groundwater abstraction\nmm Δt⁻¹\n\n\nland~irrigated__allocated_water_volume_flux\nAllocated water for irrigation\nmm Δt⁻¹\n\n\nland~non-irrigated__allocated_water_volume_flux\nAllocated water for non-irrigation\nmm Δt⁻¹\n\n\nland~non-irrigation__return_flow_volume_flux\nReturn flow from non-irrgation sectors\nmm Δt⁻¹",
    "crumbs": [
      "Model documentation",
      "Model parameters and variables",
      "Land Hydrology SBM"
    ]
  },
  {
    "objectID": "model_docs/parameters_sediment.html",
    "href": "model_docs/parameters_sediment.html",
    "title": "Land Sediment model",
    "section": "",
    "text": "Standard Name\nDescription\nUnit\nDefault\n\n\n\n\natmosphere_water__precipitation_volume_flux\nPrecipitation\nmm Δt⁻¹\n-",
    "crumbs": [
      "Model documentation",
      "Model parameters and variables",
      "Land Sediment model"
    ]
  },
  {
    "objectID": "model_docs/parameters_sediment.html#atmospheric-forcing",
    "href": "model_docs/parameters_sediment.html#atmospheric-forcing",
    "title": "Land Sediment model",
    "section": "",
    "text": "Standard Name\nDescription\nUnit\nDefault\n\n\n\n\natmosphere_water__precipitation_volume_flux\nPrecipitation\nmm Δt⁻¹\n-",
    "crumbs": [
      "Model documentation",
      "Model parameters and variables",
      "Land Sediment model"
    ]
  },
  {
    "objectID": "model_docs/parameters_sediment.html#hydrological-forcing",
    "href": "model_docs/parameters_sediment.html#hydrological-forcing",
    "title": "Land Sediment model",
    "section": "Hydrological forcing",
    "text": "Hydrological forcing\n\n\n\n\n\n\n\n\n\nStandard Name\nDescription\nUnit\nDefault\n\n\n\n\nriver_water__volume_flow_rate\nRiver discharge\nm³ s⁻¹\n-\n\n\nriver_water__depth\nRiver water depth\nm\n-\n\n\nland_surface_water__volume_flow_rate\nOverland flow discharge\nm³ s⁻¹\n-\n\n\nland_surface_water__depth\nOverland flow water depth\nm\n-\n\n\nvegetation_canopy_water__interception_volume_flux\nRainfall interception by the vegetation\nmm Δt⁻¹\n-",
    "crumbs": [
      "Model documentation",
      "Model parameters and variables",
      "Land Sediment model"
    ]
  },
  {
    "objectID": "model_docs/parameters_sediment.html#rainfall-erosion",
    "href": "model_docs/parameters_sediment.html#rainfall-erosion",
    "title": "Land Sediment model",
    "section": "Rainfall erosion",
    "text": "Rainfall erosion\n\nInput\n\n\n\n\n\n\n\n\n\nStandard Name\nDescription\nUnit\nDefault\n\n\n\n\nsoil_erosion__rainfall_soil_detachability_factor\nSoil detachability factor\ng J⁻¹\n0.6\n\n\nsoil_erosion__eurosem_exponent\nExponent EUROSEM\n-\n2.0\n\n\nvegetation_canopy__height\nCanopy height\nm\n0.5\n\n\nvegetation_canopy__gap_fraction\nCanopy gap fraction\n-\n0.1\n\n\nsoil~compacted__area_fraction\nFraction of the soil that is covered (eg paved, snow, etc)\n-\n0.01\n\n\nsoil_erosion__usle_k_factor\nUSLE soil erodibility factor\n-\n0.1\n\n\nsoil_erosion__usle_c_factor\nUSLE crop management factor\n-\n0.01\n\n\nsoil_erosion__answers_rainfall_factor\nAnswers rainfall erosion factor\n-\n0.108\n\n\n\n\n\nOutput\n\n\n\n\n\n\n\n\nStandard Name\nDescription\nUnit\n\n\n\n\nsoil_erosion~rainfall__mass_flow_rate\nTotal soil erosion from rainfall (splash)\nton Δt⁻¹",
    "crumbs": [
      "Model documentation",
      "Model parameters and variables",
      "Land Sediment model"
    ]
  },
  {
    "objectID": "model_docs/parameters_sediment.html#overland-flow-erosion",
    "href": "model_docs/parameters_sediment.html#overland-flow-erosion",
    "title": "Land Sediment model",
    "section": "Overland flow erosion",
    "text": "Overland flow erosion\n\nInput\n\n\n\n\n\n\n\n\n\nStandard Name\nDescription\nUnit\nDefault\n\n\n\n\nsoil_erosion__answers_overland_flow_factor\nAnswers overland flow erosion factor\n-\n0.9\n\n\nsoil_erosion__usle_k_factor\nUSLE soil erodibility factor\n-\n0.1\n\n\nsoil_erosion__usle_c_factor\nUSLE crop management factor\n-\n0.01\n\n\n\n\n\nOutput\n\n\n\n\n\n\n\n\nStandard Name\nDescription\nUnit\n\n\n\n\nsoil_erosion~overland_flow__mass_flow_rate\nTotal soil erosion from overland flow\nton Δt⁻¹",
    "crumbs": [
      "Model documentation",
      "Model parameters and variables",
      "Land Sediment model"
    ]
  },
  {
    "objectID": "model_docs/parameters_sediment.html#soil-erosion",
    "href": "model_docs/parameters_sediment.html#soil-erosion",
    "title": "Land Sediment model",
    "section": "Soil erosion",
    "text": "Soil erosion\n\nInput\n\n\n\n\n\n\n\n\n\nStandard Name\nDescription\nUnit\nDefault\n\n\n\n\nsoil_clay__mass_fraction\nSoil content clay\n-\n0.4\n\n\nsoil_silt__mass_fraction\nSoil content silt\n-\n0.3\n\n\nsoil_sand__mass_fraction\nSoil content sand\n-\n0.3\n\n\nsoil_aggregates~small__mass_fraction\nSoil content small aggregates\n-\n0.0\n\n\nsoil_aggregates~large__mass_fraction\nSoil content large aggregates\n-\n0.0\n\n\n\n\n\nOutput\n\n\n\n\n\n\n\n\nStandard Name\nDescription\nUnit\n\n\n\n\nsoil_erosion__mass_flow_rate\nTotal soil erosion\nton Δt⁻¹\n\n\nsoil_erosion_clay__mass_flow_rate\nTotal clay erosion\nton Δt⁻¹\n\n\nsoil_erosion_silt__mass_flow_rate\nTotal silt erosion\nton Δt⁻¹\n\n\nsoil_erosion_sand__mass_flow_rate\nTotal sand erosion\nton Δt⁻¹\n\n\nsoil_erosion_aggregates~small__mass_flow_rate\nTotal small aggregates erosion\nton Δt⁻¹\n\n\nsoil_erosion_aggregates~large__mass_flow_rate\nTotal large aggregates erosion\nton Δt⁻¹",
    "crumbs": [
      "Model documentation",
      "Model parameters and variables",
      "Land Sediment model"
    ]
  },
  {
    "objectID": "model_docs/routing/kinwave.html",
    "href": "model_docs/routing/kinwave.html",
    "title": "Kinematic wave",
    "section": "",
    "text": "The main flow routing scheme available in wflow is the kinematic wave approach for river and overland flow, assuming that water flow is mostly controlled by topography. The kinematic wave equations are (Chow, 1988):\n\\[\n\\begin{gathered}\n  \\dfrac{\\partial Q}{\\partial x} + \\dfrac{\\partial A}{\\partial t} = \\subtext{q}{inflow},\\\\\n   A = \\alpha Q^{\\beta}.\n\\end{gathered}\n\\]\nThese equations can then be combined as a function of flow only:\n\\[\n    \\dfrac{\\partial Q}{\\partial x} + \\alpha \\beta Q^{\\beta - 1} \\dfrac{\\partial Q}{\\partial t} = \\subtext{q}{inflow},\n\\]\nwhere \\(\\SIb{Q}{m^3\\ s^{-1}}\\) is the surface flow in the kinematic wave, \\(\\SIb{x}{m}\\) is the length of the flow pathway, \\(\\SIb{A}{m^2}\\) is the cross-section area of the flow pathway, \\(\\SIb{\\subtext{q}{inflow}}{m^2\\ s^{-1}}\\) is the lateral inflow per unit length into the kinematic wave, \\(\\SIb{t}{s}\\) is the integration timestep and \\(\\alpha\\) and \\(\\beta\\) are coefficients. These coefficients can be determined by using Manning’s equation (Chow, 1988), resulting in:\n\\[\n  \\alpha = \\left(\\frac{n P_\\mathrm{w}^{\\frac{2}{3}}}{\\sqrt{c_\\mathrm{slope}}}\\right)^\\beta \\ \\text{and} \\ \\beta = 0.6,\n\\]\nwhere \\(\\SIb{P_\\mathrm{w}}{m}\\) is the wetted perimeter, \\(c_\\mathrm{slope}\\) (\\(c_\\mathrm{land\\ slope}\\) for overland flow and \\(c_\\mathrm{river\\ slope}\\) for river flow) is the slope \\(\\SIb{}{m\\ m^{-1}}\\), and \\(n\\) (\\(n_\\mathrm{land}\\) for overland flow and \\(n_\\mathrm{river}\\) for river flow) is Manning’s coefficient \\(\\SIb{}{s\\ m^{-\\frac{1}{3}}}\\). The wetted perimeter \\(\\subtext{P}{w}\\) for river flow is calculated by adding the river width (\\(\\subtext{w}{river}\\)) and 2 times half of the river bankfull depth (\\(\\subtext{h}{bankfull}\\)). A bankfull river depth map (default value is \\(\\SI{1}{m}\\)) for the river can be provided as follows in the TOML configuration file:\n[input.static]\nriver_bank_water__depth = \"riverdepth\"\nFor overland flow, \\(\\subtext{P}{w}\\) is set equal to the effective flow width, determined by dividing the grid cell area by the flow length and subtracting \\(\\subtext{w}{river}\\).\nThe kinematic wave equations are solved with a nonlinear scheme using Newton’s method. By default, the iterations are performed until a stable solution is reached (\\(\\epsilon &lt;\n10^{-12}\\)). The internal time stepping is based on the Courant number or a fixed time step size \\(\\SIb{}{s}\\). To enable a fixed internal time step for the kinematic wave the following lines can be inserted in the TOML file of the model:\n[model]\n# Adaptive (internal) time stepping for the kinematic wave\nkinematic_wave__adaptive_time_step_flag = false    # optional, default is false\n# Fixed internal timestep for river flow (river cells)\nriver_kinematic_wave__time_step = 900        # optional, default is model timestep\n# Fixed internal timestep for overland flow (land cells)\nland_kinematic_wave__time_step = 3600        # optional, default is model timestep\nKinematic wave adaptive (internal) timestepping can be set as follows in the TOML file of the model:\n[model]\n# Adaptive (internal) time stepping for the kinematic wave\nkinematic_wave__adaptive_time_step_flag = true    # optional, default is false\nReservoir and lake models can be included as part of the river kinematic wave network.",
    "crumbs": [
      "Model documentation",
      "Routing concepts",
      "Kinematic wave"
    ]
  },
  {
    "objectID": "model_docs/routing/kinwave.html#surface-routing",
    "href": "model_docs/routing/kinwave.html#surface-routing",
    "title": "Kinematic wave",
    "section": "",
    "text": "The main flow routing scheme available in wflow is the kinematic wave approach for river and overland flow, assuming that water flow is mostly controlled by topography. The kinematic wave equations are (Chow, 1988):\n\\[\n\\begin{gathered}\n  \\dfrac{\\partial Q}{\\partial x} + \\dfrac{\\partial A}{\\partial t} = \\subtext{q}{inflow},\\\\\n   A = \\alpha Q^{\\beta}.\n\\end{gathered}\n\\]\nThese equations can then be combined as a function of flow only:\n\\[\n    \\dfrac{\\partial Q}{\\partial x} + \\alpha \\beta Q^{\\beta - 1} \\dfrac{\\partial Q}{\\partial t} = \\subtext{q}{inflow},\n\\]\nwhere \\(\\SIb{Q}{m^3\\ s^{-1}}\\) is the surface flow in the kinematic wave, \\(\\SIb{x}{m}\\) is the length of the flow pathway, \\(\\SIb{A}{m^2}\\) is the cross-section area of the flow pathway, \\(\\SIb{\\subtext{q}{inflow}}{m^2\\ s^{-1}}\\) is the lateral inflow per unit length into the kinematic wave, \\(\\SIb{t}{s}\\) is the integration timestep and \\(\\alpha\\) and \\(\\beta\\) are coefficients. These coefficients can be determined by using Manning’s equation (Chow, 1988), resulting in:\n\\[\n  \\alpha = \\left(\\frac{n P_\\mathrm{w}^{\\frac{2}{3}}}{\\sqrt{c_\\mathrm{slope}}}\\right)^\\beta \\ \\text{and} \\ \\beta = 0.6,\n\\]\nwhere \\(\\SIb{P_\\mathrm{w}}{m}\\) is the wetted perimeter, \\(c_\\mathrm{slope}\\) (\\(c_\\mathrm{land\\ slope}\\) for overland flow and \\(c_\\mathrm{river\\ slope}\\) for river flow) is the slope \\(\\SIb{}{m\\ m^{-1}}\\), and \\(n\\) (\\(n_\\mathrm{land}\\) for overland flow and \\(n_\\mathrm{river}\\) for river flow) is Manning’s coefficient \\(\\SIb{}{s\\ m^{-\\frac{1}{3}}}\\). The wetted perimeter \\(\\subtext{P}{w}\\) for river flow is calculated by adding the river width (\\(\\subtext{w}{river}\\)) and 2 times half of the river bankfull depth (\\(\\subtext{h}{bankfull}\\)). A bankfull river depth map (default value is \\(\\SI{1}{m}\\)) for the river can be provided as follows in the TOML configuration file:\n[input.static]\nriver_bank_water__depth = \"riverdepth\"\nFor overland flow, \\(\\subtext{P}{w}\\) is set equal to the effective flow width, determined by dividing the grid cell area by the flow length and subtracting \\(\\subtext{w}{river}\\).\nThe kinematic wave equations are solved with a nonlinear scheme using Newton’s method. By default, the iterations are performed until a stable solution is reached (\\(\\epsilon &lt;\n10^{-12}\\)). The internal time stepping is based on the Courant number or a fixed time step size \\(\\SIb{}{s}\\). To enable a fixed internal time step for the kinematic wave the following lines can be inserted in the TOML file of the model:\n[model]\n# Adaptive (internal) time stepping for the kinematic wave\nkinematic_wave__adaptive_time_step_flag = false    # optional, default is false\n# Fixed internal timestep for river flow (river cells)\nriver_kinematic_wave__time_step = 900        # optional, default is model timestep\n# Fixed internal timestep for overland flow (land cells)\nland_kinematic_wave__time_step = 3600        # optional, default is model timestep\nKinematic wave adaptive (internal) timestepping can be set as follows in the TOML file of the model:\n[model]\n# Adaptive (internal) time stepping for the kinematic wave\nkinematic_wave__adaptive_time_step_flag = true    # optional, default is false\nReservoir and lake models can be included as part of the river kinematic wave network.",
    "crumbs": [
      "Model documentation",
      "Routing concepts",
      "Kinematic wave"
    ]
  },
  {
    "objectID": "model_docs/routing/kinwave.html#external-inflows",
    "href": "model_docs/routing/kinwave.html#external-inflows",
    "title": "Kinematic wave",
    "section": "External inflows",
    "text": "External inflows\nExternal inflows \\(\\SIb{}{m^3\\ s^{-1}}\\) for example water supply or abstractions can be added to the kinematic wave for river flow routing, as a cyclic parameter or as part of forcing. For example, cyclic inflow can be provided in the TOML file as follows:\n[input.cyclic]\n\"river_water_inflow~external__volume_flow_rate\" = \"river_inflow\"\nThese inflows are added or subtracted from the upstream inflow before running the kinematic wave to solve the impact on resulting river flow \\(\\SIb{Q}{m^3\\ s^{-1}}\\). In case of an abstraction (negative inflow), the abstraction is limited by a fixed scaling factor of \\(0.80\\) applied to sum of upstream inflow, lateral inflow and river storage, all terms expresssed in unit \\(\\SI{}{m^3\\ s^{-1}}\\).",
    "crumbs": [
      "Model documentation",
      "Routing concepts",
      "Kinematic wave"
    ]
  },
  {
    "objectID": "model_docs/routing/kinwave.html#abstractions",
    "href": "model_docs/routing/kinwave.html#abstractions",
    "title": "Kinematic wave",
    "section": "Abstractions",
    "text": "Abstractions\nInternal abstractions \\(\\SIb{}{m^3\\ s^{-1}}\\) from the river are possible when water demand and allocation is computed. The abstraction is set from the water demand and allocation module each time step. The abstraction is divided by the flow length of the river and subtracted from the lateral inflow of the kinematic wave routing scheme for river flow.",
    "crumbs": [
      "Model documentation",
      "Routing concepts",
      "Kinematic wave"
    ]
  },
  {
    "objectID": "model_docs/routing/kinwave.html#subsurface-flow-routing",
    "href": "model_docs/routing/kinwave.html#subsurface-flow-routing",
    "title": "Kinematic wave",
    "section": "Subsurface flow routing",
    "text": "Subsurface flow routing\nIn the wflow_sbm model the kinematic wave approach is used to route subsurface flow laterally by default. Different vertical hydraulic conductivity depth profiles are possible as part of the SBM soil model concept, and these profiles (after unit conversion) are also used to compute lateral subsurface flow. The following profiles (see SBM soil model for a detailed description) are available:\n\nexponential (default)\nexponential_constant\nlayered\nlayered_exponential\n\nFor the profiles exponential and exponential_constant, the saturated store \\(\\subtext{S}{sat}\\) is drained laterally by saturated downslope subsurface flow for a slope with width \\(\\SIb{w}{m}\\) according to:\n\\[\n    \\subtext{Q}{subsurface} = K_\\mathrm{h0}c_\\mathrm{land\\ slope}w\\begin{cases}\n    \\frac{1}{f}\\left(e^{-f_\\mathrm{ssf, Kv} \\subtext{z}{ssf,watertable}}-e^{-f_\\mathrm{ssf, Kv} \\subtext{z}{ssf,exp}}\\right) +\n    e^{-f_\\mathrm{ssf, Kv} \\subtext{z}{ssf, exp}}(\\subtext{z}{ssf,soil}-\\subtext{z}{ssf,exp}) & \\text{if $\\subtext{z}{ssf,watertable} &lt; \\subtext{z}{ssf,exp}$}\\\\\n    \\\\\n    e^{-f_\\mathrm{ssf, Kv} \\subtext{z}{ssf,exp}}(\\subtext{z}{ssf,soil} - \\subtext{z}{ssf,watertable}) & \\text{if $\\subtext{z}{ssf,watertable} \\ge \\subtext{z}{ssf,exp}$},\n    \\end{cases}\n\\]\nwhere \\(\\SIb{c_\\mathrm{land\\ slope}}{m\\ m^{-1}}\\) is the land slope, \\(\\SIb{\\subtext{Q}{subsurface}}{m^3\\ d^{-1}}\\) is subsurface flow, \\(\\SIb{K_\\mathrm{h0}}{m\\ d^{-1}}\\) is the saturated hydraulic conductivity at the soil surface, \\(\\SIb{\\subtext{z}{ssf, watertable}}{m}\\) is the water table depth, \\(\\SIb{\\subtext{z}{ssf,soil}}{m}\\) is the soil depth, \\(\\SIb{f_\\mathrm{ssf, Kv}}{m^{-1}}\\) is a scaling parameter that controls the decrease of \\(K_\\mathrm{h0}\\) with depth and \\(\\SIb{\\subtext{z}{ssf,exp}}{m}\\) is the depth from soil surface for which the exponential decline of \\(K_\\mathrm{h0}\\) is valid. For the exponential profile, \\(\\subtext{z}{ssf,exp}\\) is equal to \\(\\subtext{z}{ssf,soil}\\).\nCombining with the following continuity equation: \\[\n    (\\theta_s-\\theta_r)w\\frac{\\partial h}{\\partial t} = -\\frac{\\partial \\subtext{Q}{subsurface}}{\\partial x} + wR\n\\]\nwhere \\(\\SIb{h}{m}\\) is the water table height, \\(\\SIb{x}{m}\\) is the distance downslope, \\(\\SIb{R}{m\\ d^{-1}}\\) is the net input rate to the saturated store, \\(\\SIb{\\theta_{s}}{-}\\) and \\(\\SIb{\\theta_{r}}{-}\\) are the saturated and residual soil water contents, respectively. Substituting for \\(h (\\frac{\\partial Q}{\\partial h})\\), gives:\n\\[\n  \\frac{\\partial \\subtext{Q}{subsurface}}{\\partial t} = -c\\frac{\\partial \\subtext{Q}{subsurface}}{\\partial x} + cwR\n\\]\nwhere celerity \\(c\\) is calculated as follows: \\[\n    c = \\frac{K_\\mathrm{h0}c_\\mathrm{land\\ slope}}{\\theta_s-\\theta_r}\\begin{cases}\n    e^{-f_\\mathrm{ssf, Kv}\\subtext{z}{ssf,watertable}}\n    + e^{-f_\\mathrm{ssf, Kv}\\subtext{z}{ssf,exp}} & \\text{if $\\subtext{z}{ssf,watertable} &lt; \\subtext{z}{ssf,exp}$}\\\\\n    \\\\\n    e^{-f_\\mathrm{ssf, Kv}\\subtext{z}{ssf,exp}} & \\text{if $\\subtext{z}{ssf,watertable} \\ge \\subtext{z}{ssf,exp}$}.\n    \\end{cases}\n\\]\nFor the layered and layered_exponential profiles the equivalent horizontal hydraulic conductivity \\(\\SIb{\\subtext{K}{h}}{m\\ d^{-1}}\\) is calculated for water table height \\(\\SIb{h = \\subtext{z}{ssf,soil}-\\subtext{z}{ssf,watertable}}{m}\\) and lateral subsurface flow is calculated as follows:\n\\[\n  \\subtext{Q}{subsurface} = \\subtext{K}{h} h c_\\mathrm{land\\ slope} w,\n\\]\nand celerity \\(c\\) is given by:\n\\[\n    c = \\frac{\\subtext{K}{h} c_\\mathrm{land\\ slope}}{\\theta_s-\\theta_r}.\n\\]\nThe kinematic wave equation for lateral subsurface flow is solved iteratively using Newton’s method.\n\n\n\n\n\n\nNote\n\n\n\nFor the lateral subsurface flow kinematic wave the model timestep is not adjusted. For certain model timestep and model grid size combinations this may result in loss of accuracy.",
    "crumbs": [
      "Model documentation",
      "Routing concepts",
      "Kinematic wave"
    ]
  },
  {
    "objectID": "model_docs/routing/kinwave.html#multi-threading",
    "href": "model_docs/routing/kinwave.html#multi-threading",
    "title": "Kinematic wave",
    "section": "Multi-Threading",
    "text": "Multi-Threading\nThe kinematic wave calculations for surface - and subsurface flow routing can be executed in parallel using multiple threads. In the model section of the TOML file, a minimum stream order can be provided to define subbasins for the river (default is 6) and land domain (default is 5). Subbasins are created at all confluences where each branch has a minimal stream order. Based on the subbasins a directed acyclic graph is created that controls the order of execution and which subbasins can run in parallel.\n[model]\nriver_streamorder__min_count = 5 # minimum stream order to delineate subbasins for river domain, default is 6\nland_streamorder__min_count = 4  # minimum stream order to delineate subbasins for land domain, default is 5",
    "crumbs": [
      "Model documentation",
      "Routing concepts",
      "Kinematic wave"
    ]
  },
  {
    "objectID": "model_docs/routing/kinwave.html#subbasin-flow",
    "href": "model_docs/routing/kinwave.html#subbasin-flow",
    "title": "Kinematic wave",
    "section": "Subbasin flow",
    "text": "Subbasin flow\nNormally the the kinematic wave is continuous throughout the model. By using the pit__flag entry and basin_pit_location__mask in the model and input sections of the TOML file all flow is at the subbasin only (upstream of the pit locations, defined by the netCDF variable wflow_pits in the example below) and no flow is transferred from one subbasin to another. This can be convenient when connecting the result of the model to a water allocation model such as Ribasim.\n[input]\n# these are not directly part of the model\nbasin_pit_location__mask = \"wflow_pits\"\n\n[model]\npit__flag = true",
    "crumbs": [
      "Model documentation",
      "Routing concepts",
      "Kinematic wave"
    ]
  },
  {
    "objectID": "model_docs/routing/kinwave.html#limitations",
    "href": "model_docs/routing/kinwave.html#limitations",
    "title": "Kinematic wave",
    "section": "Limitations",
    "text": "Limitations\nThe kinematic wave approach for river, overland and lateral subsurface flow, assumes that the topography controls water flow mostly. This assumption holds for steep terrain, but in less steep terrain the hydraulic gradient is likely not equal to the surface slope (subsurface flow), or pressure differences and inertial momentum cannot be neglected (channel and overland flow). In addition, while the kinematic wave equations are solved with a nonlinear scheme using Newton’s method (Chow, 1988), other model equations are solved through a simple explicit scheme. In summary the following limitations apply:\n\nRiver flow, and to a lesser degree overland flow, may be unrealistic in terrain that is not steep, and where pressure forces and inertial momentum are important.\nThe lateral movement of subsurface flow may be very wrong in terrain that is not steep.",
    "crumbs": [
      "Model documentation",
      "Routing concepts",
      "Kinematic wave"
    ]
  },
  {
    "objectID": "model_docs/routing/kinwave.html#references",
    "href": "model_docs/routing/kinwave.html#references",
    "title": "Kinematic wave",
    "section": "References",
    "text": "References\n\nChow, V., Maidment, D. and Mays, L., 1988, Applied Hydrology. McGraw-Hill Book Company, New York.",
    "crumbs": [
      "Model documentation",
      "Routing concepts",
      "Kinematic wave"
    ]
  },
  {
    "objectID": "model_docs/routing/sediment_flux.html",
    "href": "model_docs/routing/sediment_flux.html",
    "title": "Sediment flux",
    "section": "",
    "text": "Both the inland and river sediment model take into account sediment flux or transport of sediment in water, either in overland flow or in the stream flow. These two transport are distinguished in two different structures.",
    "crumbs": [
      "Model documentation",
      "Routing concepts",
      "Sediment flux"
    ]
  },
  {
    "objectID": "model_docs/routing/sediment_flux.html#inland-sediment-model",
    "href": "model_docs/routing/sediment_flux.html#inland-sediment-model",
    "title": "Sediment flux",
    "section": "Inland Sediment Model",
    "text": "Inland Sediment Model\n\nSediment Flux in overland flow\nOnce the amount of soil detached by both rainfall and overland flow has been estimated, it has then to be routed and delivered to the river network. Inland routing in sediment models is usually done by comparing the amount of detached sediment with the transport capacity of the flow, which is the maximum amount of sediment that the flow can carry downslope. There are several existing formulas available in the literature. For a wide range of slopes and for overland flow, the Govers equation (1990) seems the most appropriate choice (Hessel et al, 2007). However, as the wflow_sediment model was developed to be linked to water quality issues, the Yalin transport equation was chosen as it can handle particle differentiation (Govers equation can still be used if wflow_sediment is used to only model inland processes with no particle differentiation). For land cells, wflow_sediment assumes that erosion can mobilize 5 classes of sediment:\n\nClay (mean diameter of \\(\\SI{2}{\\mu m}\\))\nSilt (mean diameter of \\(\\SI{10}{\\mu m}\\))\nSand (mean diameter of \\(\\SI{200}{\\mu m}\\))\nSmall aggregates (mean diameter of \\(\\SI{30}{\\mu m}\\))\nLarge aggregates (mean diameter of \\(\\SI{50}{\\mu m}\\)).\n\n\\[\\begin{gathered}\n   \\mathrm{PSA} = \\mathrm{SAN} (1-\\mathrm{CLA})^{2.4} \\\\\n   \\mathrm{PSI} = 0.13\\mathrm{SIL}\\\\\n   \\mathrm{PCL} = 0.20\\mathrm{CLA} \\\\\n\n   \\mathrm{SAG} =\n   \\begin{align*}\n      \\begin{cases}\n         2.0\\mathrm{CLA} &\\text{ if }\\quad \\mathrm{CLA} &lt; 0.25 \\\\\n         0.28(\\mathrm{CLA}-0.25)+0.5 &\\text{ if }\\quad 0.25 \\leq \\mathrm{CLA} \\leq 0.5 \\\\\n         0.57 &\\text{ if }\\quad \\mathrm{CLA} &gt; 0.5\n      \\end{cases}\n   \\end{align*} \\\\\n\n   \\mathrm{LAG} = 1 - \\mathrm{PSA} - \\mathrm{PSI} - \\mathrm{PCL} - \\mathrm{SAG}\n\\end{gathered}\\]\nwhere \\(\\mathrm{CLA}\\), \\(\\mathrm{SIL}\\) and \\(\\mathrm{SAN}\\) are the primary clay, silt, sand fractions of the topsoil and \\(\\mathrm{PCL}\\), \\(\\mathrm{PSI}\\), \\(\\mathrm{PSA}\\), \\(\\mathrm{SAG}\\) and \\(\\mathrm{LAG}\\) are the clay, silt, sand, small and large aggregates fractions of the detached sediment respectively. The transport capacity of the flow using Yalin’s equation with particle differentiation, developed by Foster (1982), is:\n\\[\n   \\mathrm{TC}_i = (P_e)_i  (S_g)_i \\, \\rho_w \\,  g \\, d_i  V_*\n\\]\nwhere \\(\\mathrm{TC}_i\\) is the transport capacity of the flow for the particle class \\(i\\), \\((P_e)_i\\) is the effective number of particles of class \\(i\\), \\(\\SIb{(S_g)_i}{kg\\ m^{-3}}\\) is the specific gravity for the particle class \\(i\\), \\(\\SIb{\\rho_w}{kg\\ m^{-3}}\\) is the mass density of the fluid, \\(\\SIb{g}{m\\ s^{-2}}\\) is the acceleration due to gravity, \\(\\SIb{d_i}{m}\\) is the diameter of the particle of class \\(i\\) and \\(V_* = \\SIb{(g R\nS)^{0.5}}{m\\ s^{-1}}\\) is the shear velocity of the flow with \\(S\\) the slope gradient and \\(\\SIb{R}{m}\\) the hydraulic radius of the flow. The detached sediment are then routed down slope until the river network using the accucapacityflux, accupacitystate functions depending on the transport capacity from Yalin.\nThe choice of transport capacity method for the overland flow is set up in the model section of the TOML:\n[model]\nland_transport = \"yalinpart\" # Overland flow transport capacity method: [\"yalinpart\", \"govers\", \"yalin\"]\nNote that the “govers” and “yalin” equations can only assess total transport capacity of the flow and can therefore not be used in combination with the river part of the sediment model.",
    "crumbs": [
      "Model documentation",
      "Routing concepts",
      "Sediment flux"
    ]
  },
  {
    "objectID": "model_docs/routing/sediment_flux.html#river-sediment-model",
    "href": "model_docs/routing/sediment_flux.html#river-sediment-model",
    "title": "Sediment flux",
    "section": "River Sediment Model",
    "text": "River Sediment Model\nSediment dynamics in rivers can be described by the same three processes on land: erosion, deposition and transport. The difference is that channel ﬂow is much higher, deeper and permanent compared to overland ﬂow. In channels, erosion is the direct removal of sediments from the river bed or bank (lateral erosion). Sediments are transported in the river either by rolling, sliding and silting (bed load transport) or via turbulent flow in the higher water column (suspended load transport). The type of transport is determined by the river bed shear stress. As sediment particles have a higher density than water, they can also be deposited on the river bed according to their settling velocity compared to the ﬂow velocity. In addition to regular deposition in the river, lakes, reservoirs and floodplains represents additional major sediment settling pools.\nComplete models of sediment dynamics based on hydrology and not on hydraulics or hydrodynamics are much rarer than for soil loss and inland dynamics. The simpler models such as the SWAT default sediment river model uses again the transport capacity of the ﬂow to determine if there is erosion or deposition (Neitsch et al., 2011). A more physics-based approach (Partheniades, 1965) to determine river erosion is used by Liu et al. (2018) and in the new SWAT’s approach developed by Narasimhan et al. (2017). For wﬂow_sediment, the new physics-based model of SWAT was chosen for transport and erosion as it enables the use of parameter estimation for erosion of bed and bank of the channel and separates the suspended from the bed loads.\n\n\n\nOverview of the different processes for a river cell in wflow_sediment.\n\n\nRunning the river model is an option of the wflow_sediment model and is enabled using the TOML file. By default it is false:\n[model]\nrun_river_model__flag = true\n\nSediment inputs in a river cell\nThe first part of the river model assesses how much detached sediment are in the river cell at the beginning of the timestep \\(t\\). Sources of detached sediment are sediments coming from land erosion, estimated with the soil loss part of wflow_sediment model, the sediment coming from upstream river cells and the detached sediment that were left in the cell at the end of the previous timestep \\((t-1)\\):\n\\[\n   (\\subtext{\\mathrm{sed}}{in})_t = (\\subtext{\\mathrm{sed}}{land})_t + \\mathrm{upstream}\\left[(\\subtext{\\text{sed}}{out})_{t-1}\\right] + (\\subtext{\\text{sed}}{riv})_{t-1}\n\\]\n\n\nRiver transport and erosion\nOnce the amount of sediment inputs at the beginning of the timestep is known, the model then estimates transport, and river erosion if there is a deficit of sediments. Transport in the river system is estimated via a transport capacity formula. There are several transport capacity formulas available in wflow_sediment, some requiring calibration and some not. Choosing a transport capacity equation depends on the river characteristics (some equation are more suited for narrow or wider rivers), and on the reliability of the required river parameters (such as slope, width or mean particle diameter of the river channel). Several river transport capacity are available and the choice is set up in the model section of the TOML:\n[model]\nriver_transport = \"bagnold\" # River flow transport capacity method: [\"bagnold\", \"engelund\", \"yang\", \"kodatie\", \"molinas\"]\nSimplified Bagnold\nOriginally more valid for intermediate to large rivers, this simplified version of the Bagnold equation relates sediment transport to flow velocity with two simple calibration parameters (Neitsch et al, 2011):\n\\[\nC_{\\max} = \\subtext{c}{sp}  \\left( \\dfrac{\\mathrm{prf} Q}{h W} \\right)^{\\subtext{\\mathrm{sp}}{exp}}\n\\]\nwhere \\(\\SIb{C_{\\max}}{kg\\ L^{-1}}\\) (or \\(\\SIb{}{ton\\ m^{-1}}\\)) is the sediment concentration, \\(\\SIb{Q}{m^3\\ s^{-1}}\\) is the surface runoff in the river cell, \\(\\SIb{h}{m}\\) is the river water level, \\(\\SIb{W}{m}\\) is the river width and \\(\\subtext{c}{sp}\\), \\(\\mathrm{prf}\\) and \\(\\subtext{\\mathrm{sp}}{exp}\\) are calibration parameters. The \\(\\mathrm{prf}\\) coefficient is usually used to deduce the peak velocity of the flow, but for simplification in wflow_sediment, the equation was simplified to only get two parameters to calibrate: \\(\\subtext{\\mathrm{sp}}{exp}\\) and \\(\\subtext{c}{Bagnold} = \\subtext{c}{sp} \\,\n\\mathrm{prf}^{\\subtext{\\mathrm{sp}}{exp}}\\). The coefficient \\(\\subtext{\\mathrm{sp}}{exp}\\) usually varies between \\(1\\) and \\(2\\) while \\(\\mathrm{prf}\\) and \\(\\subtext{c}{sp}\\) have a wider range of variation. The table below summarizes ranges and values of the three Bagnold coefficients used by other studies:\n\nRange of the simplified Bagnold coefficients (and calibrated value)\n\n\n\n\n\n\n\n\n\nStudy\nRiver\n\\(\\mathrm{prf}\\) range\n\\(\\subtext{c}{sp}\\) range\n\\(\\subtext{\\mathrm{sp}}{exp}\\) range\n\n\n\n\nVigiak 2015\nDanube\n0.5-2 (/)\n0.0001-0.01 (0.003-0.006)\n1-2 (1.4)\n\n\nVigiak 2017\nDanube\n/\n0.0001-0.01 (0.0015)\n1-2 (1.4)\n\n\nAbbaspour 2007\nThur (CH)\n0.2-0.25 (/)\n0.001-0.002 (/)\n0.35-1.47 (/)\n\n\nOeurng 2011\nSave (FR)\n0-2 (0.58)\n0.0001-0.01 (0.01)\n1-2 (2)\n\n\n\nEngelund and Hansen This transport capacity is not present in SWAT but used in many models such as Delft3D-WAQ, Engelund and Hansen calculates the total sediment load as (Engelund and Hansen, 1967): \\[\n   C_w = 0.05 \\left( \\dfrac{\\rho_{s}}{\\rho_{s} - \\rho} \\right) \\left( \\dfrac{u S}{\\sqrt{\\left( \\dfrac{\\rho_{s}}{\\rho_{s} - \\rho} \\right) g  D_{50}}} \\right) \\theta^{1/2}\n\\]\nwhere \\(C_w\\) is the sediment concentration by weight, \\(\\SIb{\\rho}{g\\ m^{-3}}\\) and \\(\\SIb{\\rho_{s}}{g\\ m^{-3}}\\) are the fluid and sediment density (here respectively equal to \\(\\SI{1000}{g\\ m^{-3}}\\) and \\(\\SI{2650}{g\\ m^{-3}}\\)), \\(\\SIb{u}{m\\ s^{-1}}\\) is the water mean velocity, \\(S\\) is the river slope, \\(g\\) is the acceleration due to gravity, \\(\\SIb{D_{50}}{m}\\) is the river mean diameter and \\(\\theta\\) is the Shields parameter.\nKodatie Kodatie (1999) developed the power relationships from Posada (1995) using field data and linear optimization so that they would be applicable for a wider range of riverbed sediment size. The resulting equation, for a rectangular channel, is (Neitsch et al, 2011): \\[\n   C_{\\max} = \\left( \\dfrac{a u^{b} h^{c} S^{d}}{\\subtext{V}{in}} \\right)  W\n\\] where \\(\\SIb{\\subtext{V}{in}}{m^3}\\) in the volume of water entering the river cell during the timestep and \\(a\\), \\(b\\), \\(c\\) and \\(d\\) are coefficients depending on the riverbed sediment size. Values of these coefficients are summarized in the table below.\n\nRange of the simplified Bagnold coefficients (and calibrated value)\n\n\n\n\n\n\n\n\n\nRiver sediment diameter\na\nb\nc\nd\n\n\n\n\n\\(D_{50} \\leq \\SI{0.05}{mm}\\)\n281.4\n2.622\n0.182\n0\n\n\n\\(\\SI{0.05}{mm} &lt; D_{50} \\leq \\SI{0.25}{mm}\\)\n2 829.6\n3.646\n0.406\n0.412\n\n\n\\(\\SI{0.25}{mm} &lt; D_{50} \\leq \\SI{2.0}{mm}\\)\n2 123.4\n3.300\n0.468\n0.613\n\n\n\\(D_{50} &gt; \\SI{2.0}{mm}\\)\n431 884.8\n1.000\n1.000\n2.000\n\n\n\nYang Yang (1996) developed a set of two equations giving transport of sediments for sand-bed or gravel-bed rivers. The sand equation (\\(D_{50} &lt; \\SI{2.0}{mm}\\)) is:\n\\[\n   \\log\\left(C_{ppm}\\right) = 5.435 - 0.286\\log\\left(\\frac{\\omega_{s,50}D_{50}}{\\nu}\\right)-0.457\\log\\left(\\frac{u_*}{\\omega_{s,50}}\\right) \\\\\n   +\\left(1.799-0.409\\log\\left(\\frac{\\omega_{s,50}D_{50}}{\\nu}\\right)-0.314\\log\\left(\\frac{u_*}{\\omega_{s,50}}\\right)\\right)\\log\\left(\\frac{uS}{\\omega_{s,50}}-\\frac{u_{cr}S}{\\omega_{s,50}}\\right)\n\\]\nAnd the gravel equation (\\(\\SI{2.0}{mm} \\leq D_{50} &lt; \\SI{10.0}{mm}\\)) is:\n\\[\n   \\log\\left(C_{ppm}\\right) = 6.681 - 0.633\\log\\left(\\frac{\\omega_{s,50}D_{50}}{\\nu}\\right)-4.816\\log\\left(\\frac{u_*}{\\omega_{s,50}}\\right) \\\\\n   +\\left(2.784-0.305\\log\\left(\\frac{\\omega_{s,50}D_{50}}{\\nu}\\right)-0.282\\log\\left(\\frac{u_*}{\\omega_{s,50}}\\right)\\right)\\log\\left(\\frac{uS}{\\omega_{s,50}}-\\frac{u_{cr}S}{\\omega_{s,50}}\\right)\n\\]\nwhere \\(C_{ppm}\\) is sediment concentration in parts per million by weight, \\(\\SIb{\\omega_{s,50}}{m\\ s^{-1}}\\) is the settling velocity of a particle with the median riverbed diameter estimated with Stokes, \\(\\SIb{\\nu}{m^2\\ s^{-1}}\\) is the kinematic viscosity of the fluid, \\(\\SIb{u_*}{m\\ s^{-1}}\\) is the shear velocity where \\(u_* = \\sqrt{gR_{H}S}\\) with \\(R_{H}\\) the hydraulic radius of the river and \\(\\SIb{u_{cr}}{m\\ s^{-1}}\\) is the critical velocity (equation can be found in Hessel, 2007).\nMolinas and Wu The Molinas and Wu (2001) transport equation was developed for large sand-bed rivers based on the universal stream power \\(\\psi\\). The corresponding equation is (Neitsch et al, 2011):\n\\[\n   C_{w} = \\dfrac{1430 (0.86+\\sqrt{\\psi}) \\psi^{1.5}}{0.016+\\psi} 10^{-6}\n\\]\nwhere \\(\\psi\\) is the universal stream power given by:\n\\[\n   \\psi = \\dfrac{\\psi^{3}}{\\left(\\dfrac{\\rho_{s}}{\\rho}-1\\right) g h \\omega_{s,50}  \\left[ \\log_{10}\\left(\\dfrac{h}{D_{50}}\\right)\\right]^{2}}\n\\]\nOnce the maximum concentration \\(C_{\\max}\\) is established with one of the above transport formula, the model then determines if there is erosion of the river bed and bank. In order to do that, the difference \\(sed_{ex}\\) between the maximum amount of sediment estimated with transport (\\(\\mathrm{sed}_{\\max} = C_{\\max} \\subtext{V}{in}\\)) and the sediment inputs to the river cell (\\(\\subtext{\\mathrm{sed}}{in}\\) calculated above) is calculated. If too much sediment is coming in and \\(\\subtext{\\mathrm{sed}}{ex}\\) is negative, then there is no river bed and bank erosion. And if the river has not reach its maximum transport capacity, then erosion of the river happens.\nFirst, the sediments stored in the cell from deposition in previous timesteps \\(\\subtext{\\mathrm{sed}}{stor}\\) are eroded from clay to gravel. If this amount is not enough to cover \\(\\subtext{\\mathrm{sed}}{ex}\\), then erosion of the local river bed and bank material starts.\nInstead of just setting river erosion amount to just cover the remaining difference \\(\\subtext{\\mathrm{sed}}{exeff}\\) between \\(\\subtext{\\mathrm{sed}}{ex}\\) and \\(\\subtext{\\mathrm{sed}}{stor}\\), actual erosion potential is adjusted using river characteristics and is separated between the bed and bank of the river using the physics-based approach of Knight (1984).\nThe bed and bank of the river are supposed to only be able to erode a maximum amount of their material \\(E_{R,\\mathrm{bed}}\\) for the bed and \\(E_{R,\\mathrm{bank}}\\) for the river bank. For a rectangular channel, assuming it is meandering and thus only one bank is prone to erosion, they are calculated from the equations (Neitsch et al, 2011):\n\\[\n\\begin{gathered}\n   E_{R,\\mathrm{bed}} = k_{d,\\mathrm{bed}} \\left( \\tau_{e,\\mathrm{bed}} - \\tau_{cr,\\mathrm{bed}} \\right) 10^{-6}  L  W  \\rho_{b, \\mathrm{bed}}  \\Delta t \\\\\n   E_{R,\\mathrm{bank}} = k_{d,\\mathrm{bank}} \\left( \\tau_{e,\\mathrm{bank}} - \\tau_{cr,\\mathrm{bank}} \\right) 10^{-6} L h \\rho_{b, \\mathrm{bank}}  \\Delta t\n\\end{gathered}\n\\]\nwhere \\(\\SIb{E_R}{ton}\\) is the potential bed/bank erosion rates, \\(\\SIb{k_d}{cm^3\\ N^{-1}\\\ns^{-1}}\\) is the erodibility of the bed/bank material, \\(\\SIb{\\tau_e}{N\\ m^{-2}}\\) is the effective shear stress from the flow on the bed/bank, \\(\\SIb{\\tau_{cr}}{N\\ m^{-2}}\\) is the critical shear stress for erosion to happen, \\(\\SIb{L}{m}\\), \\(\\SIb{W}{m}\\) and \\(\\SIb{h}{m}\\) are the channel length, width and water height, \\(\\SIb{\\rho_{b}}{g\\ cm^{-3}}\\) is the bulk density of the bed/bank of the river and \\(\\SIb{\\Delta t}{s}\\) is the model timestep.\nIn wflow_sediment, the erodibility of the bed/bank are approximated using the formula from Hanson and Simon (2001):\n\\[\n   k_d=0.2 \\tau_{cr}^{-0.5}\n\\]\nNormally erodibilities are evaluated using jet test in the field and there are several reviews and some adjustments possible to this equation (Simon et al, 2011). However, to avoid too heavy calibration and for the scale considered, this equation is supposed to be efficient enough. The critical shear stress \\(\\tau_{cr}\\) is evaluated differently for the bed and bank. For the bed, the most common formula from Shields initiation of movement is used. For the bank, a more recent approach from Julian and Torres (2006) is used:\n\\[\n   \\tau_{cr,\\mathrm{bank}} = (0.1+0.1779 SC+0.0028 SC^{2}-2.34 10^{-5}  SC^{3}) C_{ch}\n\\]\nwhere \\(SC\\) is the percent clay and silt content of the river bank and \\(C_{ch}\\) is a coefficient taking into account the positive impact of vegetation on erosion reduction. This coefficient is then dependent on the land use and classical values are shown in the table below. These values where then adapted for use with the GlobCover land use map. Percent of clay and silt (along with sand and gravel) for the channel is estimated from the river median particle diameter assuming the same values as SWAT shown in the table below. Median particle diameter is here estimated depending on the Strahler river order. The higher the order, the smaller the diameter is. As the median diameter is only used in wflow_sediment for the estimation of the river bed/bank sediment composition, this supposition should be enough. Actual refined data or calibration may however be needed if the median diameter is also required for the transport formula. In a similar way, the bulk densities of river bed and bank are also just assumed to be of respectively \\(\\SI{1.5}{g\\ cm^{-3}}\\) and \\(\\SI{1.4}{g\\\ncm^{-3}}\\).\n\nClassical values of the channel cover vegetation coefficient (Julian and Torres, 2006)\n\n\nBank vegetation\n\\(C_{ch}\\)\n\n\n\n\nNone\n1.00\n\n\nGrassy\n1.97\n\n\nSparse trees\n5.40\n\n\nDense trees\n19.20\n\n\n\n\nComposition of the river bed/bank depending on the median diameter \\(\\SIb{d_{50}}{\\mu m}\\) (Neitsch et al, 2011)\n\n\nSediment Fraction\n\\(\\leq\\) 5\n5 to 50\n50 to 2000\n\\(&gt;\\) 2000\n\n\n\n\nSand\n0.15\n0.15\n0.65\n0.15\n\n\nSilt\n0.15\n0.65\n0.15\n0.15\n\n\nClay\n0.65\n0.15\n0.15\n0.05\n\n\nGravel\n0.05\n0.05\n0.05\n0.65\n\n\n\nThen, the repartition of the flow shear stress is refined into the effective shear stress and the bed and bank of the river using the equations developed by Knight (1984) for a rectangular channel:\n\\[\n\\begin{gathered}\n   \\tau_{e,\\mathrm{bed}} = \\rho g R_{H} S  \\left(1 - \\dfrac{SF_{\\mathrm{bank}}}{100}\\right) \\left(1+\\dfrac{2h}{W}\\right) \\\\\n   \\tau_{e,\\mathrm{bank}} = \\rho g R_{H} S  \\left( SF_{\\mathrm{bank}}\\right)  \\left(1+\\dfrac{W}{2h}\\right)\n\\end{gathered}\n\\]\nwhere \\(\\rho g\\) is the fluid specific weight (\\(\\SI{9800}{N\\ m^{-3}}\\) for water), \\(\\SIb{R_H}{m}\\) is the hydraulic radius of the channel, \\(\\SIb{h}{m}\\) and \\(\\SIb{W}{m}\\) are the water level and river width. \\(SF_{\\mathrm{bank}}\\) is the proportion of shear stress acting on the bank (%) and is estimated from (Knight, 1984):\n\\[\n   \\mathrm{SF}_{\\mathrm{bank}} = \\exp \\left( -3.230 \\log_{10}\\left(\\dfrac{W}{h}+3\\right)+6.146 \\right)\n\\]\nFinally the relative erosion potential of the bank and bed of the river is calculated by:\n\\[\n\\begin{gathered}\n   \\mathrm{RTE}_{\\mathrm{bed}} = \\dfrac{E_{R,\\mathrm{bed}}}{E_{R,\\mathrm{bed}}+E_{R,\\mathrm{bank}}} \\\\\n   \\mathrm{RTE}_{\\mathrm{bank}} = 1 - RTE_{\\mathrm{bed}}\n\\end{gathered}\n\\]\nAnd the final actual eroded amount for the bed and bank is the maximum between \\(\\mathrm{RTE}\n\\subtext{\\mathrm{sed}}{exeff}\\) and the erosion potential \\(E_R\\). Total eroded amount of sediment \\(\\subtext{\\mathrm{sed}}{erod}\\) is then the sum of the eroded sediment coming from the storage of previously deposited sediment and the river bed/bank erosion.\n\n\nRiver deposition\nAs sediments have a higher density than water, moving sediments in water can be deposited in the river bed. The deposition process depends on the mass of the sediment, but also on flow characteristics such as velocity. In wflow_sediment, as in SWAT, deposition is modelled with Einstein’s equation (Neitsch et al, 2011):\n\\[\n   \\subtext{P}{dep}=\\left(1-\\dfrac{1}{e^{x}}\\right)100\n\\]\nwhere \\(\\subtext{P}{dep}\\) is the percentage of sediments that is deposited on the river bed and x is a parameter calculated with:\n\\[\n   x = \\dfrac{1.055 L  \\omega_{s}}{u h}\n\\]\nwhere \\(\\SIb{L}{m}\\) and \\(\\SIb{h}{m}\\) are channel length and water height, \\(\\SIb{\\omega_s}{m\\\ns^{-1}}\\) is the particle settling velocity calculated with Stokes’ formula and \\(\\SIb{u}{m\\\ns^{-1}}\\) is the mean flow velocity. The calculated percentage is then subtracted from the amount of sediment input and eroded river sediment for each particle size class (\\(\\subtext{\\mathrm{sed}}{dep} = \\subtext{P}{dep}/100 (\\subtext{\\mathrm{sed}}{in} +\n\\subtext{\\mathrm{sed}}{erod})\\)). Resulting deposited sediment are then stored in the river bed and can be re-mobilized in future time steps by erosion.\n\n\nMass balance and sediment concentration\nFinally after estimating inputs, deposition and erosion with the transport capacity of the flow, the amount of sediment actually leaving the river cell to go downstream is estimated using:\n\\[\n   \\subtext{\\mathrm{sed}}{out} = (\\subtext{\\mathrm{sed}}{in} + \\subtext{\\mathrm{sed}}{erod} - \\subtext{\\mathrm{sed}}{dep}) \\dfrac{\\subtext{V}{out}}{V}\n\\]\nwhere \\(\\SIb{\\subtext{\\mathrm{sed}}{out}}{ton}\\) is the amount of sediment leaving the river cell (tons), \\(\\SIb{\\subtext{\\mathrm{sed}}{in}}{ton}\\) is the amount of sediment coming into the river cell (storage from previous timestep, land erosion and sediment flux from upstream river cells), \\(\\SIb{\\subtext{\\mathrm{sed}}{erod}}{ton}\\) is the amount of sediment coming from river erosion, \\(\\SIb{\\subtext{\\mathrm{sed}}{dep}}{ton}\\) is the amount of deposited sediments, \\(\\SIb{\\subtext{V}{out}}{m^3}\\) is the volume of water leaving the river cell (surface runoff \\(Q\\) times timestep \\(\\Delta t\\)) and \\(\\SIb{V}{m^3}\\) is the total volume of water in the river cell (\\(\\subtext{V}{out}\\) plus storage \\(h W L\\)).\nA mass balance is then used to calculate the amount of sediment remaining in the cell at the end of the timestep \\((\\subtext{\\mathrm{sed}}{riv})_t\\):\n\\[\n   (\\subtext{\\mathrm{sed}}{riv})_t = (\\subtext{\\mathrm{sed}}{riv})_{t-1} + (\\subtext{\\mathrm{sed}}{land})_t + \\mathrm{upstream}\\left[(\\subtext{\\mathrm{sed}}{out})_{t-1}\\right] + (\\subtext{\\mathrm{sed}}{erod})_t - (\\subtext{\\mathrm{sed}}{dep})_t - (\\subtext{\\mathrm{sed}}{out})_t\n\\]\n\n\nLake and reservoir modelling\nApart from land and river, the hydrological wflow_sbm model also handles lakes and reservoirs modelling. In wflow_sbm, lakes and large reservoirs are modelled using a 1D bucket model at the cell corresponding to the outlet. For the other cells belonging to the lake/reservoir which are not the outlet, processes such as precipitation and evaporation are filtered out and shifted to the outlet cell. wflow_sediment handles the lakes and reservoirs in the same way. If a cell belongs to a lake/reservoir and is not the outlet then the model assumes that no erosion/deposition of sediments is happening and the sediments are only all transported to the lake/reservoir outlet. Once the sediments reach the outlet, then sediments are deposited in the lake/reservoir according to Camp’s model (1945) (Verstraeten et al, 2000):\n\\[\n   \\mathrm{TE} = \\dfrac{\\omega_s}{u_{cr,\\mathrm{res}}} = \\dfrac{\\subtext{A}{res}}{\\subtext{Q}{out,res}} \\omega_s\n\\]\nwhere \\(\\mathrm{TE}\\) is the trapping efficiency of the lake/reservoir (or the fraction of particles trapped), \\(\\SIb{\\omega_{s}}{m\\ s^{-1}}\\) is the particle velocity from Stokes, \\(\\SIb{\\subtext{u}{cr,res}}{m\\ s^{-1}}\\) is the reservoir’s critical settling velocity which is equal to the reservoir’s outflow \\(\\SIb{\\subtext{Q}{out,res}}{m^3\\ s^{-1}}\\) divided by the reservoir’s surface area \\(\\SIb{\\subtext{A}{res}}{m^2}\\).\nFor reservoirs, coarse sediment particles from the bed load are also assumed to be trapped by the dam structure. This adding trapping is taken into account with a reservoir trapping efficiency coefficient for large particles (between \\(0\\) and \\(1\\)). Depending on the type of the dam, all bed load particles are trapped (reservoir_water_sediment~bedload__trapping_efficiency = 1.0, for example for a gravity dam) or only partly (for example for run-of-the-river dams).\nLake and reservoir modelling is enabled in the model section of the TOML and require the extra following input arguments:\n[model]\nreservoir__flag = true\nlake__flag = true\n\n[input]\n# Reservoir\nreservoir_area__count = \"wflow_reservoirareas\"\nreservoir_location__count = \"wflow_reservoirlocs\"\n# Lake\nlake_area__count = \"wflow_lakeareas\"\nlake_location__count = \"wflow_lakelocs\" \n\n[input.static]\n# Reservoir\nreservoir_surface__area = \"ResSimpleArea\"\n\"reservoir_water_sediment~bedload__trapping_efficiency\" = \"ResTrapEff\"\n# Lake\nlake_surface__area = \"LakeArea\"\nNote that in the inland part, lake and reservoir coverage are used to filter erosion and transport in overland flow.",
    "crumbs": [
      "Model documentation",
      "Routing concepts",
      "Sediment flux"
    ]
  },
  {
    "objectID": "model_docs/routing/sediment_flux.html#references",
    "href": "model_docs/routing/sediment_flux.html#references",
    "title": "Sediment flux",
    "section": "References",
    "text": "References\n\nK.C. Abbaspour, J. Yang, I. Maximov, R. Siber, K. Bogner, J. Mieleitner, J. Zobrist, and R.Srinivasan. Modelling hydrology and water quality in the pre-alpine/alpine Thur watershed using SWAT. Journal of Hydrology, 333(2-4):413-430, 2007. 10.1016/j.jhydrol.2006.09.014\nP. Borrelli, M. Märker, P. Panagos, and B. Schütt. Modeling soil erosion and river sediment yield for an intermountain drainage basin of the Central Apennines, Italy. Catena, 114:45-58,\n\n10.1016/j.catena.2013.10.007\n\nF. Engelund and E. Hansen. A monograph on sediment transport in alluvial streams. Technical University of Denmark 0stervoldgade 10, Copenhagen K., 1967.\nG. Govers. Empirical relationships for the transport capacity of overland flow. IAHS Publication, (January 1990):45-63 ST, 1990.\nG.J Hanson and A Simon. Erodibility of cohesive streambeds in the loess area of the midwestern USA. Hydrological Processes, 15(May 1999):23-38, 2001.\nR Hessel and V Jetten. Suitability of transport equations in modelling soil erosion for a small Loess Plateau catchment. Engineering Geology, 91(1):56-71, 2007. 10.1016/j.enggeo.2006.12.013\nJ.P Julian, and R. Torres. Hydraulic erosion of cohesive riverbanks. Geomorphology, 76:193-206, 2006. 10.1016/j.geomorph.2005.11.003\nD.W. Knight, J.D. Demetriou, and M.E. Hamed. Boundary Shear in Smooth Rectangular Channels. J. Hydraul. Eng., 110(4):405-422, 1984. 10.1061/(ASCE)0733-9429(1987)113:1(120)\nS.L Neitsch, J.G Arnold, J.R Kiniry, and J.R Williams. SWAT Theoretical Documentation Version\n\nTexas Water Resources Institute, pages 1-647, 2011. 10.1016/j.scitotenv.2015.11.063\n\nC. Oeurng, S. Sauvage, and J.M. Sanchez-Perez. Assessment of hydrology, sediment and particulate organic carbon yield in a large agricultural catchment using the SWAT model. Journal of Hydrology, 401:145-153, 2011. 10.1016/j.hydrol.2011.02.017\nA. Simon, N. Pollen-Bankhead, and R.E Thomas. Development and application of a deterministic bank stability and toe erosion model for stream restoration. Geophysical Monograph Series, 194:453-474, 2011. 10.1029/2010GM001006\nG. Verstraeten and J. Poesen. Estimating trap efficiency of small reservoirs and ponds: methods and implications for the assessment of sediment yield. Progress in Physical Geography, 24(2):219-251, 2000. 10.1177/030913330002400204\nO. Vigiak, A. Malago, F. Bouraoui, M. Vanmaercke, and J. Poesen. Adapting SWAT hillslope erosion model to predict sediment concentrations and yields in large Basins. Science of the Total Environment, 538:855-875, 2015. 10.1016/j.scitotenv.2015.08.095\nO. Vigiak, A. Malago, F. Bouraoui, M. Vanmaercke, F. Obreja, J. Poesen, H. Habersack, J. Feher, and S. Groselj. Modelling sediment fluxes in the Danube River Basin with SWAT. Science of the Total Environment, 2017. 10.1016/j.scitotenv.2017.04.236",
    "crumbs": [
      "Model documentation",
      "Routing concepts",
      "Sediment flux"
    ]
  },
  {
    "objectID": "user_guide/bmi.html",
    "href": "user_guide/bmi.html",
    "title": "Basic Model Interface (BMI)",
    "section": "",
    "text": "The Community Surface Dynamics Modeling System (CSMDS) has developed the Basic Model Interface (BMI). BMI consists of a set of standard control and query functions that can be added by a developer to the model code and makes a model both easier to learn and easier to couple with other software elements.\nFor more information see also: http://csdms.colorado.edu/wiki/BMI_Description\nCSDMS provides specifications for the languages C, C++, Fortran and Python. Wflow, written in the Julia programming language, makes use of the following Julia specification, based on BMI 2.0 version.\nFor the BMI implementation of wflow all grids are defined as unstructured grids, including the special cases scalar and points. While the input (forcing and model parameters) is structured (uniform rectilinear), internally wflow works with one dimensional arrays based on the active grid cells of the 2D model domain.",
    "crumbs": [
      "User guide",
      "Integrations",
      "Basic Model Interface (BMI)"
    ]
  },
  {
    "objectID": "user_guide/bmi.html#introduction",
    "href": "user_guide/bmi.html#introduction",
    "title": "Basic Model Interface (BMI)",
    "section": "",
    "text": "The Community Surface Dynamics Modeling System (CSMDS) has developed the Basic Model Interface (BMI). BMI consists of a set of standard control and query functions that can be added by a developer to the model code and makes a model both easier to learn and easier to couple with other software elements.\nFor more information see also: http://csdms.colorado.edu/wiki/BMI_Description\nCSDMS provides specifications for the languages C, C++, Fortran and Python. Wflow, written in the Julia programming language, makes use of the following Julia specification, based on BMI 2.0 version.\nFor the BMI implementation of wflow all grids are defined as unstructured grids, including the special cases scalar and points. While the input (forcing and model parameters) is structured (uniform rectilinear), internally wflow works with one dimensional arrays based on the active grid cells of the 2D model domain.",
    "crumbs": [
      "User guide",
      "Integrations",
      "Basic Model Interface (BMI)"
    ]
  },
  {
    "objectID": "user_guide/bmi.html#configuration",
    "href": "user_guide/bmi.html#configuration",
    "title": "Basic Model Interface (BMI)",
    "section": "Configuration",
    "text": "Configuration\nThe variables that wflow can exchange through BMI are model state and output variables. The standard names of these variables based on CSDMS Standard Names should be listed below the API section in the variables list of the TOML configuration file. Below an example of this API section, that lists the variables that wflow can exchange through BMI:\n[API]\nvariables = [\n   \"river_water__volume_flow_rate\",\n   \"soil_water_unsat-zone__depth\",\n   \"soil_water__transpiration_volume_flux\",\n   \"soil_layer~1_water_unsat-zone__depth\",\n   \"soil_layer~2_water_unsat-zone__depth\",\n   \"soil_layer~3_water_unsat-zone__depth\",\n   \"soil_layer~4_water_unsat-zone__depth\",\n]\nVariables with a third dimension, for example layer as part of the SBM soil model, are exposed as two-dimensional grids through the wflow BMI implementation. For these variables the index of this third dimension is required, by adding k to the layer part of the variable standard name (k refers to the index of the third dimension): layer~k. For example, the variable soil_layer~1_water_unsat-zone__depth refers to the amount of water in the unsaturated store of the first soil layer of the SBM soil model.\nThe model state and output variable standard names are provided in the “Model parameters and variables” section of the Model documentation.",
    "crumbs": [
      "User guide",
      "Integrations",
      "Basic Model Interface (BMI)"
    ]
  },
  {
    "objectID": "user_guide/fews.html",
    "href": "user_guide/fews.html",
    "title": "Run from Delft-FEWS",
    "section": "",
    "text": "Wflow integrates easily as part of an operational system by linking to the Delft-FEWS platform. Delft-FEWS integrates data and models, and is for example used in many active flood forecasting systems around the world.\nThis can be done without a model adapter that provides the interface between Delft-FEWS and an external model (or module). This is possible because time information in the TOML configuration file is optional and Delft-FEWS can import and export netCDF files. When time information is left out from the TOML configuration file, the starttime, endtime and timestepsecs (timestep) of the run is extracted from the netCDF forcing file by wflow.\nTo indicate that a wflow model runs from Delft-FEWS, the following setting needs to be specified in the main section of the TOML configuration file:\nfews_run__flag = true  # optional, default value is false\nThis ensures that wflow offsets the time handling, to meet the expectations of Delft-FEWS.\nIt also uses a different format for the log file such that each log message takes up only one line. That meets the General Adapter logFile expectations, which then can get parsed with these Delft-FEWS log parsing settings:\n&lt;logFile&gt;\n    &lt;file&gt;log.txt&lt;/file&gt;\n    &lt;errorLinePattern &gt;* [Error] *&lt;/errorLinePattern &gt;\n    &lt;warningLinePattern&gt;* [Warn] *&lt;/warningLinePattern&gt;\n    &lt;infoLinePattern&gt;* [Info] *&lt;/infoLinePattern&gt;\n    &lt;debugLinePattern &gt;* [Debug] *&lt;/debugLinePattern &gt;\n&lt;/logFile&gt;\n\n\n\n Back to top",
    "crumbs": [
      "User guide",
      "Integrations",
      "Run from Delft-FEWS"
    ]
  },
  {
    "objectID": "user_guide/model_config.html",
    "href": "user_guide/model_config.html",
    "title": "Different model configurations",
    "section": "",
    "text": "[model]\nsnow__flag = true\nsnow_gravitional_transport__flag = true\nglacier__flag = true\n\n[input.static]\natmosphere_air__snowfall_temperature_threshold = \"TT\"\natmosphere_air__snowfall_temperature_interval = \"TTI\"\nsnowpack__melting_temperature_threshold = \"TTM\"\nsnowpack__degree-day_coefficient = \"Cfmax\"\nsnowpack__liquid_water_holding_capacity =  \"WHC\"\nglacier_surface__area_fraction = \"wflow_glacierfrac\"\nglacier_ice__degree-day_coefficient = \"G_Cfmax\"\nglacier_ice__melting_temperature_threshold = \"G_TT\"\n\"glacier_firn_accumulation__snowpack~dry_leq-depth_fraction\"  = \"G_SIfrac\"\nglacier_ice__initial_leq-depth = \"wflow_glacierstore\" # initial glacier liquid-water equivalent depth\n\n[state.variables]\n\"snowpack~dry__leq-depth\" = \"snow\"\n\"snowpack~liquid__depth\" = \"snowwater\"\nglacier_ice__leq-depth = \"glacierstore\"",
    "crumbs": [
      "User guide",
      "Supported options",
      "Different model configurations"
    ]
  },
  {
    "objectID": "user_guide/model_config.html#enabling-snow-and-glacier-processes",
    "href": "user_guide/model_config.html#enabling-snow-and-glacier-processes",
    "title": "Different model configurations",
    "section": "",
    "text": "[model]\nsnow__flag = true\nsnow_gravitional_transport__flag = true\nglacier__flag = true\n\n[input.static]\natmosphere_air__snowfall_temperature_threshold = \"TT\"\natmosphere_air__snowfall_temperature_interval = \"TTI\"\nsnowpack__melting_temperature_threshold = \"TTM\"\nsnowpack__degree-day_coefficient = \"Cfmax\"\nsnowpack__liquid_water_holding_capacity =  \"WHC\"\nglacier_surface__area_fraction = \"wflow_glacierfrac\"\nglacier_ice__degree-day_coefficient = \"G_Cfmax\"\nglacier_ice__melting_temperature_threshold = \"G_TT\"\n\"glacier_firn_accumulation__snowpack~dry_leq-depth_fraction\"  = \"G_SIfrac\"\nglacier_ice__initial_leq-depth = \"wflow_glacierstore\" # initial glacier liquid-water equivalent depth\n\n[state.variables]\n\"snowpack~dry__leq-depth\" = \"snow\"\n\"snowpack~liquid__depth\" = \"snowwater\"\nglacier_ice__leq-depth = \"glacierstore\"",
    "crumbs": [
      "User guide",
      "Supported options",
      "Different model configurations"
    ]
  },
  {
    "objectID": "user_guide/model_config.html#enabling-reservoirs",
    "href": "user_guide/model_config.html#enabling-reservoirs",
    "title": "Different model configurations",
    "section": "Enabling reservoirs",
    "text": "Enabling reservoirs\n[model]\nreservoir__flag = true\n\n[input]\nreservoir_area__count = \"wflow_reservoirareas\"\nreservoir_location__count = \"wflow_reservoirlocs\"\n\n[input.static]\nreservoir_surface__area = \"ResSimpleArea\"\n\"reservoir_water_demand~required~downstream__volume_flow_rate\" = \"ResDemand\"\nreservoir_water_release-below-spillway__max_volume_flow_rate = \"ResMaxRelease\"\nreservoir_water__max_volume = \"ResMaxVolume\"\n\"reservoir_water~full-target__volume_fraction\" = \"ResTargetFullFrac\"\n\"reservoir_water~min-target__volume_fraction\" = \"ResTargetMinFrac\"\n\n[state.variables]\nreservoir_water__instantaneous_volume = \"volume_reservoir\"",
    "crumbs": [
      "User guide",
      "Supported options",
      "Different model configurations"
    ]
  },
  {
    "objectID": "user_guide/model_config.html#enabling-lakes",
    "href": "user_guide/model_config.html#enabling-lakes",
    "title": "Different model configurations",
    "section": "Enabling lakes",
    "text": "Enabling lakes\n[model]\nlake__flag = true\n\n[input]\nlake_area__count = \"wflow_lakeareas\"\nlake_location__count = \"wflow_lakelocs\"\n\n[input.static]\nlake_surface__area = \"lake_area\"\nlake_water__rating_curve_coefficient = \"lake_b\"\nlake_water__rating_curve_exponent = \"lake_e\"\nlake_water__rating_curve_type_count = \"lake_outflowfunc\"\nlake_water__storage_curve_type_count  = \"lake_storfunc\"\nlake_water_flow_threshold-level__elevation  = \"lake_threshold\"\nlake_water_surface__initial_elevation = \"lake_waterlevel\"\n\n[state.variables]\nlake_water_surface__instantaneous_elevation = \"waterlevel_lake\"",
    "crumbs": [
      "User guide",
      "Supported options",
      "Different model configurations"
    ]
  },
  {
    "objectID": "user_guide/model_config.html#enabling-floodplain-routing",
    "href": "user_guide/model_config.html#enabling-floodplain-routing",
    "title": "Different model configurations",
    "section": "Enabling floodplain routing",
    "text": "Enabling floodplain routing\nAs part of the local inertial model for river flow.\n\n1D floodplains\n[model]\nriver_routing = \"local-inertial\"\nfloodplain_1d__flag = true\n\n[input.static]\nfloodplain_water__sum_of_volume-per-depth = \"floodplain_volume\"\nfloodplain_water_flow__manning_n_parameter = \"floodplain_n\"\n\n[state.variables]\nfloodplain_water__instantaneous_volume_flow_rate = \"q_floodplain\"\nfloodplain_water__instantaneous_depth = \"h_floodplain\"\n\n\n2D floodplains\n[model]\nriver_routing = \"local-inertial\"\nland_routing = \"local-inertial\"\n\n[input.static]\nriver_bank_water__elevation = \"RiverZ\"\nland_surface_water_flow__ground_elevation = \"FloodplainZ\"\n\n[state.variables]\nland_surface_water__instantaneous_depth = \"h_land\"\nland_surface_water__x_component_of_instantaneous_volume_flow_rate = \"qx_land\"\nland_surface_water__y_component_of_instantaneous_volume_flow_rate = \"qy_land\"",
    "crumbs": [
      "User guide",
      "Supported options",
      "Different model configurations"
    ]
  },
  {
    "objectID": "user_guide/model_config.html#enabling-water-demand-and-allocation",
    "href": "user_guide/model_config.html#enabling-water-demand-and-allocation",
    "title": "Different model configurations",
    "section": "Enabling water demand and allocation",
    "text": "Enabling water demand and allocation\nThe model types sbm and sbm_gwf support water demand and allocation computations, in combination with the kinematic wave and local inertial runoff routing scheme for river and overland flow.\n# example of water demand and allocation input parameters as cyclic data\n[model.water_demand]\ndomestic__flag = true     # optional, default is \"false\"\nindustry__flag = true     # optional, default is \"false\"\nlivestock__flag = true    # optional, default is \"false\"\npaddy__flag = true        # optional, default is \"false\"\nnonpaddy__flag = true     # optional, default is \"false\"\n\n[input.cyclic]\n\"land~domestic__gross_water_demand_volume_flux\" = \"dom_gross\"\n\"land~domestic__net_water_demand_volume_flux\" = \"dom_net\"\n\"land~industry__gross_water_demand_volume_flux\" = \"ind_gross\"\n\"land~industry__net_water_demand_volume_flux\" = \"ind_net\"\n\"land~livestock__gross_water_demand_volume_flux\" = \"lsk_gross\"\n\"land~livestock__net_water_demand_volume_flux\" = \"lsk_net\"\n\"land~irrigated-paddy__irrigation_trigger_flag\" = \"irrigation_trigger\"\n\"land~irrigated-non-paddy__irrigation_trigger_flag\" = \"irrigation_trigger\"\n\n[input.static]\nland_water_allocation_area__count = \"allocation_areas\"\nland_surface_water__withdrawal_fraction = \"SurfaceWaterFrac\"\n\"land~irrigated-paddy_area__count\" = \"paddy_irrigation_areas\"\n\"land~irrigated-non-paddy_area__count\" = \"nonpaddy_irrigation_areas\"\n\n# required if paddy is set to \"true\"\n[state.variables]\n\"land_surface_water~paddy__depth\" = \"h_paddy\"",
    "crumbs": [
      "User guide",
      "Supported options",
      "Different model configurations"
    ]
  },
  {
    "objectID": "user_guide/required_files.html",
    "href": "user_guide/required_files.html",
    "title": "Required files",
    "section": "",
    "text": "To run wflow, several files are required. These include a settings file and input data. The input data is typically separated into static maps and forcing data, and both are provided in netCDF files, except for lake storage and rating curves that are supplied via CSV files. Below is a brief overview of the different files:",
    "crumbs": [
      "User guide",
      "Required files"
    ]
  },
  {
    "objectID": "user_guide/required_files.html#the-configuration-file-settings.toml",
    "href": "user_guide/required_files.html#the-configuration-file-settings.toml",
    "title": "Required files",
    "section": "The configuration file (settings.toml)",
    "text": "The configuration file (settings.toml)\nThe configuration file contains all relevant settings for running wflow, such as the simulation period, the model settings, the mapping between input files and (internal) model parameters. More details and explanations can be found here. An example configuration file is presented below.\n\n\nClick to show example .toml file\n\n# This is a TOML configuration file for Wflow.\n# Relative file paths are interpreted as being relative to this TOML file.\n# Wflow documentation https://deltares.github.io/Wflow.jl/dev/\n# TOML documentation: https://github.com/toml-lang/toml\n\ndir_input = \"data/input\"\ndir_output = \"data/output\"\n\n[time]\nendtime = 2000-01-10T00:00:00\n\n[logging]\nloglevel = \"info\"\n\n[input]\npath_forcing = \"forcing-moselle.nc\"\npath_static = \"staticmaps-moselle.nc\"\n\n# these are not directly part of the model\nbasin__local_drain_direction = \"wflow_ldd\"\nriver_location__mask = \"wflow_river\"\nreservoir_area__count = \"wflow_reservoirareas\"\nreservoir_location__count = \"wflow_reservoirlocs\"\nsubbasin_location__count = \"wflow_subcatch\"\n\n[input.forcing]\natmosphere_water__precipitation_volume_flux = \"precip\"\nland_surface_water__potential_evaporation_volume_flux = \"pet\"\natmosphere_air__temperature = \"temp\"\n\n[input.static]\natmosphere_air__snowfall_temperature_threshold = \"TT\"\natmosphere_air__snowfall_temperature_interval = \"TTI\"\n\n\"land~water-covered__area_fraction\" = \"WaterFrac\"\n\nsnowpack__melting_temperature_threshold = \"TTM\"\nsnowpack__degree-day_coefficient = \"Cfmax\"\n\nsoil_layer_water__brooks-corey_exponent = \"c\"\nsoil_surface_water__infiltration_reduction_parameter = \"cf_soil\"\nsoil_surface_water__vertical_saturated_hydraulic_conductivity = \"KsatVer\"\nsoil_water__vertical_saturated_hydraulic_conductivity_scale_parameter = \"f\"\n\"soil~compacted_surface_water__infiltration_capacity\" = \"InfiltCapPath\"\nsoil_water__residual_volume_fraction = \"thetaR\"\nsoil_water__saturated_volume_fraction = \"thetaS\"\nsoil_water_sat-zone_bottom__max_leakage_volume_flux = \"MaxLeakage\"\n\"soil~compacted__area_fraction\" = \"PathFrac\"\n\"soil_root~wet__sigmoid_function_shape_parameter\" = \"rootdistpar\"\nsoil__thickness = \"SoilThickness\"\n\nvegetation_canopy_water__mean_evaporation-to-mean_precipitation_ratio = \"EoverR\"\nvegetation_canopy__light-extinction_coefficient = \"Kext\"\nvegetation__specific-leaf_storage = \"Sl\"\nvegetation_wood_water__storage_capacity = \"Swood\"\nvegetation_root__depth = \"RootingDepth\"\n\nriver__length = \"wflow_riverlength\"\nriver_water_flow__manning_n_parameter = \"N_River\"\nriver__slope = \"RiverSlope\"\nriver__width = \"wflow_riverwidth\"\n\nland_surface_water_flow__manning_n_parameter = \"N\"\nland_surface__slope = \"Slope\"\n\nreservoir_surface__area = \"ResSimpleArea\"\n\"reservoir_water_demand~required~downstream__volume_flow_rate\" = \"ResDemand\"\nreservoir_water_release-below-spillway__max_volume_flow_rate = \"ResMaxRelease\"\nreservoir_water__max_volume = \"ResMaxVolume\"\n\"reservoir_water~full-target__volume_fraction\" = \"ResTargetFullFrac\"\n\"reservoir_water~min-target__volume_fraction\" = \"ResTargetMinFrac\"\n\nsubsurface_water__horizontal-to-vertical_saturated_hydraulic_conductivity_ratio = \"KsatHorFrac\"\n\n[input.cyclic]\nvegetation__leaf-area_index = \"LAI\"\n\n[model]\nsoil_layer__thickness = [100, 300, 800]\ntype = \"sbm\"\n\n[output.csv]\npath = \"output_moselle_simple.csv\"\n\n[[output.csv.column]]\ncoordinate.x = 7.378\ncoordinate.y = 50.204\nheader = \"Q\"\nparameter = \"river_water__volume_flow_rate\"\n\n[[output.csv.column]]\nheader = \"recharge\"\nparameter = \"soil_water_sat-zone_top__recharge_volume_flux\"\nreducer = \"mean\"",
    "crumbs": [
      "User guide",
      "Required files"
    ]
  },
  {
    "objectID": "user_guide/required_files.html#the-static-input-data-staticmaps.nc",
    "href": "user_guide/required_files.html#the-static-input-data-staticmaps.nc",
    "title": "Required files",
    "section": "The static input data (staticmaps.nc)",
    "text": "The static input data (staticmaps.nc)\nThe list below contains a brief overview of several essential static maps required to run wflow. These NC variables names refer to the example data of the wflow_sbm + kinematic wave model (see here). Example data for the other model configurations can be found here.\n\n\n\n\n\n\n\n\n\nStandard Name\nDescription\nNC variable name\nunit\n\n\n\n\nbasin__local_drain_direction\nLocal drain direction (1-9)\nwflow_ldd\n-\n\n\nriver_location__mask\nRiver mask (0-1)\nwflow_river\n-\n\n\nriver__length\nRiver length\nwflow_riverlength\nm\n\n\nriver__width\nRiver width\nwflow_riverwidth\nm\n\n\nsubbasin_location__count\nSubbasin ids\nwflow_subcatch\n-\n\n\nland_surface__slope\nLand slope\nSlope\nm m\\(^{-1}\\)\n\n\nriver__slope\nRiver slope\nRiverSlope\nm m\\(^{-1}\\)\n\n\n\nAs mentioned before, the model parameters can also be defined as spatial maps. They can be included in the same netCDF file, as long as their variable names are correctly mapped in the TOML settings file. See the section on example models on how to use this functionality. The time unit of input flux parameters should be day (the model base time step size), these input parameters are converted to the user-defined model time step size during initialization.\n\n\n\n\n\n\nImportant\n\n\n\nWhen using cyclic data, three different options are supported:\n\n12 (monthly)\n365 (daily, where Feb. 29 is not present, so the value for Feb. 28 is taken. Dec. 31 is represented by DOY 365)\n366 (where Feb. 29 represents DOY 60, and Dec. 31 DOY 366)\n\nIn contrast to the right-labelling of the forcing data (see below), the DOY/month of the current time step is used. For example: to simulate 2023-06-14 00:00:00 (with a daily time step), the DOY value at position 6 (when 12 values are provided), 165 (when 365 values are provided) or 166 (when 366 values are provided).",
    "crumbs": [
      "User guide",
      "Required files"
    ]
  },
  {
    "objectID": "user_guide/required_files.html#the-forcing-data-forcing.nc",
    "href": "user_guide/required_files.html#the-forcing-data-forcing.nc",
    "title": "Required files",
    "section": "The forcing data (forcing.nc)",
    "text": "The forcing data (forcing.nc)\nThe forcing data typically contains the meteorological boundary conditions. This data is provided as a single netCDF file, with several variables containing the forcing data for precipitation, temperature and potential evaporation. The time unit of forcing data should be equal to the user-defined model time step size. The code snippet below shows the contents of the example file (downloaded here), and displaying the content with NCDatasets in Julia. As can be seen, each forcing variable (precip, pet and temp) consists of a three-dimensional dataset (x, y, and time), and each timestep consists of a two-dimensional map with values at each grid cell. Only values within the basin are required.\n\n\n\n\n\n\nImportant\n\n\n\nWflow expects the forcing to be “right-labelled”. This means that e.g. daily precipitation at 2023-06-15 00:00:00 is the accumulated total precipitation between 2023-06-14 00:00:00 and 2023-06-15 00:00:00.\n\n\n\n\n\n\n\n\nNote\n\n\n\nFor optimal computational performance, it is recommended to have chunks in the time dimension. This way, only part of the forcing file needs to be read and kept in memory. We recommend using a chunk size in the time dimension with size 1. Using larger chunks can largely degrade computational performance.\n\n\n\n\nClick to show example forcing.nc file\n\nGroup: /\n\nDimensions\n  time = 366\n  y = 313\n  x = 291\n\nVariables\n  time   (366)\n    Datatype:    Int64\n    Dimensions:  time\n    Attributes:\n    units                = days since 2000-01-02 00:00:00\n    calendar             = proleptic_gregorian\n\n  y   (313)\n    Datatype:    Float64\n    Dimensions:  y\n    Attributes:\n    _FillValue           = NaN\n\n  x   (291)\n    Datatype:    Float64\n    Dimensions:  x\n    Attributes:\n    _FillValue           = NaN\n\n  spatial_ref\n    Attributes:\n    crs_wkt              = GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563,AUTHORITY[\"EPSG\",\"7030\"]],AUTHORITY[\"EPSG\",\"6326\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AXIS[\"Latitude\",NORTH],AXIS[\"Longitude\",EAST],AUTHORITY[\"EPSG\",\"4326\"]]\n    x_dim                = x\n    y_dim                = y\n    dim0                 = time\n\n  precip   (291 × 313 × 366)\n    Datatype:    Float32\n    Dimensions:  x × y × time\n    Attributes:\n    _FillValue           = NaN\n    unit                 = mm\n    precip_fn            = era5\n    coordinates          = idx_out spatial_ref mask\n\n  idx_out   (291 × 313)\n    Datatype:    Int32\n    Dimensions:  x × y\n\n  mask   (291 × 313)\n    Datatype:    UInt8\n    Dimensions:  x × y\n\n  pet   (291 × 313 × 366)\n    Datatype:    Float32\n    Dimensions:  x × y × time\n    Attributes:\n    _FillValue           = NaN\n    unit                 = mm\n    pet_fn               = era5\n    pet_method           = debruin\n    coordinates          = idx_out spatial_ref mask\n\n  temp   (291 × 313 × 366)\n    Datatype:    Float32\n    Dimensions:  x × y × time\n    Attributes:\n    _FillValue           = NaN\n    unit                 = degree C.\n    temp_fn              = era5\n    temp_correction      = True\n    coordinates          = idx_out spatial_ref mask\n\nGlobal attributes\n  unit                 = mm\n  precip_fn            = era5",
    "crumbs": [
      "User guide",
      "Required files"
    ]
  },
  {
    "objectID": "user_guide/warm_states.html",
    "href": "user_guide/warm_states.html",
    "title": "Starting with “warm” states",
    "section": "",
    "text": "The state section in the TOML file provides information on the input file if the model is initialized with a warm state (path_input) and to what file the states are written at the end of the model run (path_output). Please note that the model setting cold_start__flag needs to be set to false in order to initialize the model with states from the file located at path_input. A mapping between external netCDF variable state names and model state variable standard names is required below the [state.variables] section. The model state variable standard names are listed on the left side, and the external netCDF variable state names are listed on the right side. Note that path_input is only required when cold_start__flag is set to false. path_output is optional, an output state file is only written when it is defined. If neither is set, the entire state section can be left out.\n[model]\ncold_start__flag = false # cold (cold_start__flag = true) or warm state (cold_start__flag = false), default is true\n\n[state]\npath_input = \"data/instates-moselle.nc\"     # Location of the file with the input states\npath_output = \"data/outstates-moselle.nc\"   # Output location of the states after the model run\n\n[state.variables]\nvegetation_canopy_water__depth = \"canopystorage\"\n\nsoil_water_sat-zone__depth = \"satwaterdepth\"\nsoil_surface__temperature = \"tsoil\"\nsoil_layer_water_unsat-zone__depth = \"ustorelayerdepth\"\n\n\"snowpack~dry__leq-depth\" = \"snow\"\n\"snowpack~liquid__depth\" = \"snowwater\"\n\nriver_water__instantaneous_depth = \"h_river\"\nriver_water__instantaneous_volume_flow_rate = \"q_river\"\n\nfloodplain_water__instantaneous_volume_flow_rate = \"q_floodplain\"\nfloodplain_water__instantaneous_depth = \"h_floodplain\"\n\nreservoir_water__instantaneous_volume = \"volume_reservoir\"\n\nsubsurface_water__volume_flow_rate  = \"ssf\"\n\nland_surface_water__instantaneous_volume_flow_rate = \"q_land\"\nland_surface_water__instantaneous_depth = \"h_land\"\n\n\n\n Back to top",
    "crumbs": [
      "User guide",
      "Supported options",
      "Starting with \"warm\" states"
    ]
  }
]